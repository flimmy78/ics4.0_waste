<?xml version='1.0' encoding='ISO-8859-1'?>
<Application name="PFA" code="210">
  <LibDeclare>
    <Library name="PFA" value="dll/pfa.so"/>
  </LibDeclare>
  <ConfigDeclare>
    <Config name="BatFormat" value="etc/PFA_FMT.XML"/>
  </ConfigDeclare>
  <TableDeclare>
    <Table name="pfasubcfg" value="pfasubcfg"/>
    <Table name="pfaorgsts" value="pfaorgsts"/>
    <Table name="pfacusinf" value="pfacusinf"/>
    <Table name="pfacodinf" value="pfacodinf"/>
    <Table name="pfaquobal" value="pfaquobal"/>
    <Table name="pfavchbok" value="pfavchbok"/>
    <Table name="pfatxnjnl" value="pfatxnjnl"/>
    <Table name="pfaclrrec" value="pfaclrrec"/>
    <Table name="pfaclrjnl" value="pfaclrjnl"/>
    <Table name="pfacusagr" value="pfacusagr"/>
    <Table name="lbepcusagr" value="lbepcusagr"/>
    <Table name="pfacrdinf" value="pfacrdinf"/>
    <Table name="pfacrdtxn" value="pfacrdtxn"/>
    <Table name="pfacrddtl" value="pfacrddtl"/>
    <Table name="pfacrdjnl" value="pfacrdjnl"/>
    <Table name="pfaquobok001" value="pfaquobok001"/>
    <Table name="pfavchdtl001" value="pfavchdtl001"/>
    <Table name="pfacmdsum102" value="pfacmdsum102"/>
    <Table name="pfaquobok102" value="pfaquobok102"/>
    <Table name="pfavchdtl102" value="pfavchdtl102"/>
  </TableDeclare>        
  <BusDefDeclare>
    <Busdef name="TSDir"   value="dat/term/send/"/>
    <Busdef name="PfaIp"   value="182.53.4.200"/>
    <Busdef name="PfaUsr"  value="administrator"/>
    <Busdef name="PfaPwd"  value="134679"/>
    <Busdef name="PfaIDir" value="pay/icsdown"/>
    <Busdef name="PfaODir" value="pay/icsup"/>
    <Busdef name="IcsIDir" value="dat/pfa/recv"/>
    <Busdef name="IcsODir" value="dat/pfa/send"/>
    <Busdef name="PFABNo"  value="999999"/>
    <Busdef name="SplFlg"  value=","/>

    <Busdef name="RptDir"   value="dat/term/send/"/>
    <Busdef name="TRDir"   value="dat/term/recv/"/>
    <Busdef name="IcsDir"  value="dat/pfa/recv"/>
    <Busdef name="AdeFDir" value="/app/bde/adeexc/data/D"/>
    <Busdef name="AdeBDir" value="/BRD/"/>

  </BusDefDeclare>
  <Define>
    <Include file="etc/PFA_ACC.XML"/>
  </Define>
<!--支付凭证处理类交易-->
<!--支付凭证处理类交易-->
<!--支付凭证处理类交易-->
<!--支付凭证处理类交易-->
<!--支付凭证处理类交易-->
  <Transaction code="461022" desc="授权支付凭证登记">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="QryVchBok">
      <Sentence>
        select VchSts from pfavchbok where PfaSub='%s' and Year=substr('%s',1,4) and BCusId='%s' and CrpVch='%s'
      </Sentence>
      <Fields>PfaSub|ActDat|BCusId|CrpVch|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Quote name="ChkSubCfg"/>
<!--产生行内支付令号-->
      <Set>OBrNo=$BrNo</Set>
      <Set>BrNo=$AgtBr</Set>
      <Exec func="PUB:nGetPubSeqNo">
        <Arg name="SeqNam" value="pfavchbok:AVchNo"/>
        <Arg name="SeqCnt" value="1"/>
        <Arg name="Len"    value="8"/>
        <Arg name="CycCnd" value="Y"/>
      </Exec>
      <Set>AVchNo=$SelVal</Set>
      <Set>BrNo=$OBrNo</Set>
<!--判断明细状态-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="QryVchBok"/>
        </Args>
      </Exec>
      <Switch expression="~RetCod">
        <Case value="-1">
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=数据库查询失败</Set>
          <Return/>
        </Case>
        <Case value="-2">
          <Set>VchSts=0</Set>
          <Set>Year=SUBSTR($ActDat,1,4)</Set>
          <Set>AVchTm=GETDATETIME(YYYYMMDDHHMISS)</Set>
          <Set>DtlNum=$RecNum</Set>
          <Set>ClrSts=0</Set>
          <Set>RtnFlg=0</Set>
          <Set>RegId=$TlrId</Set>
          <Exec func="PUB:InsertRecord">
            <Arg name="TblNam" value="pfavchbok"/>
          </Exec>
          <If condition="IS_EQUAL_STRING($PfaKnd,0)">  <!--纸质-->
            <Set>DtlSts=0</Set>
            <Set>Year=SUBSTR($ActDat,1,4)</Set>
            <Set>RegDat=$ActDat</Set>
            <Set>DtlTim=GETDATETIME(YYYYMMDDHHMISS)</Set>
            <Set>AVchTm=GETDATETIME(YYYYMMDDHHMISS)</Set>
            <Set>TVchTp=0</Set>
            <Set>DtlSmr=$VchSmr</Set>
<!--检查支付编码AVchCd、交易金额合法性-->
            <Set>Cnt=1</Set>
            <Set>TotAmt=0</Set>
            <While condition="INTCMP($Cnt,2,$RecNum)">
              <Set>AVchCdNam=STRCAT(ROOT.Rec_,$Cnt,.AVchCd)</Set>
              <Set>DtlAmtNam=STRCAT(ROOT.Rec_,$Cnt,.DtlAmt)</Set>
              <Set>UseAmtNam=STRCAT(ROOT.Rec_,$Cnt,.UseAmt)</Set>
              <Exec func="PUB:GetValue">
                <Arg name="SourName" value="$AVchCdNam"/>
                <Arg name="DestName" value="ROOT.AVchCd1"/>
              </Exec>
              <If condition="INTCMP(STRLEN($ROOT.AVchCd1),3,0)">
                <Set>TmpAVch=STRCAT($BCusId,$CrpVch)</Set>
                <Exec func="PUB:GetValue">
                  <Arg name="SourName" value="TmpAVch"/>
                  <Arg name="DestName" value="$AVchCdNam"/>
                </Exec>
              </If>
              <Exec func="PUB:GetValue">
                <Arg name="SourName" value="$DtlAmtNam"/>
                <Arg name="DestName" value="ROOT.DtlAmt1"/>
              </Exec>
              <If condition="INTCMP($ROOT.DtlAmt1,3,0)">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】支付金额为零)</Set>
                <Return/>
               </If>
              <Else>
                <Exec func="PUB:GetValue">
                  <Arg name="SourName" value="$DtlAmtNam"/>
                  <Arg name="DestName" value="$UseAmtNam"/>
                </Exec>
              </Else>
              <Set>Cnt=ADD($Cnt,1)</Set>
              <Set>TotAmt=ADD($TotAmt,$ROOT.DtlAmt1)</Set>
            </While>
            <If condition="INTCMP($TotAmt,4,$TxnAmt)">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(票面额【,AMTFMT($TxnAmt),】与明细总额【,AMTFMT($TotAmt),】不一致)</Set>
              <Return/>
            </If>
            <Exec func="PUB:InsertRecord">
              <Arg name="TblNam" value="$VchDtlTbl"/>
              <Arg name="GrpNam" value="Rec"/>
              <Arg name="FldLst" value="DtlSts|PfaSub|Year|BusMod|OIFlag|VchDat|CrpVch|PayAct|PayNam|PayBNm|PyeAct|PyeNam|PyeBNm|StlMod|VchNo|TxnAmt|TPayTp|RefCod|DtlSmr|BCusId|FCusId|FCusNm|RegDat|DtlTim|PfaKnd|RtnFlg|AmtTyp|AVchNo|RegId|ActDat|AVchTm|"/>
            </Exec>
          </If>
          <Else>   <!--电子-->
<!--先检查明细支付状态-->
            <Set>SndAct=$PayAct</Set>
            <Set>SndNam=$PayNam</Set>
            <Set>SndBNm=$PayBNm</Set>
            <Set>RcvAct=$PyeAct</Set>
            <Set>RcvNam=$PyeNam</Set>
            <Set>RcvBNm=$PyeBNm</Set>
            <Set>UseVch=$VchNo</Set>
            <Set>UseStl=$StlMod</Set>
            <Set>Cnt=1</Set>
            <Set>TotAmt=0</Set>
            <While condition="INTCMP($Cnt,2,$RecNum)">
              <Set>AVchCdNam=STRCAT(ROOT.Rec_,$Cnt,.AVchCd)</Set>
              <Set>DtlAmtNam=STRCAT(ROOT.Rec_,$Cnt,.DtlAmt)</Set>
              <Exec func="PUB:GetValue">
                <Arg name="SourName" value="$AVchCdNam"/>
                <Arg name="DestName" value="ROOT.AVchCd"/>
              </Exec>
              <Exec func="PUB:GetValue">
                <Arg name="SourName" value="$DtlAmtNam"/>
                <Arg name="DestName" value="ROOT.DtlAmt1"/>
              </Exec>
              <Exec func="PUB:ReadRecord" error="IGNORE">
                <Args>
                  <Arg name="SqlCmd" value="ChkVchDtl"/>
                </Args>
              </Exec>
              <If condition="INTCMP(~RetCod,4,0)">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】不存在或数据库操作失败)</Set>
                <Return/>
              </If>
              <If condition="IS_NOEQUAL_STRING($DtlSts,U)">  <!--纸质-->
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】单位凭证号重复)</Set>
                <Return/>
              </If>
              <If condition="IS_NOEQUAL_STRING($OVchDat,$VchDat)">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】支付令日期与电子信息不一致)</Set>
                <Return/>
              </If>
              <If condition="AND(IS_NOEQUAL_STRING($SndAct,$PayAct),IS_EQUAL_STRING($OIFlag,O))">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】付款人账号与电子信息不一致)</Set>
                <Return/>
              </If>
              <If condition="AND(IS_NOEQUAL_STRING($RcvAct,$PyeAct),IS_EQUAL_STRING($OIFlag,R))">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】收款人账号与电子信息不一致)</Set>
                <Return/>
              </If>
<!--
              <Set>OVchNo=DELSPACE($OVchNo,all)</Set>
              <If condition="AND(IS_EQUAL_STRING($OIFlag,O),IS_NOEQUAL_STRING($UseVch,$OVchNo),INTCMP(STRLEN($OVchNo),4,0))">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】凭证号码与电子信息不一致)</Set>
                <Return/>
              </If>
-->
              <If condition="IS_NOEQUAL_STRING($UseStl,$StlMod)">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】结算方式与电子信息不一致)</Set>
                <Return/>
              </If>
              <Set>Cnt=ADD($Cnt,1)</Set>
              <Switch expression="$TVchTp">
                <Case value="0"/> <!-- 正常 -->
                <Case value="2"> <!-- 调整 -->
                  <If condition="IS_NOEQUAL_STRING($ODtlAmt,$DtlAmt1)">
                    <Exec func="PUB:RollbackWork" error="IGNORE"/>
                    <Set>MsgTyp=E</Set>
                    <Set>RspCod=PFA999</Set>
                    <Set>RspMsg=STRCAT(支付令【,$AVchCd,】与登记表金额【,AMTFMT($ODtlAmt),】不一致)</Set>
                    <Return/>
                  </If>
                  <Set>OUseAmt=$ODtlAmt</Set>
                  <Break/>
                </Case>
<!--
                <Case value="2">
                  <Exec func="PUB:RollbackWork" error="IGNORE"/>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】为调整支付令，不能在柜面使用)</Set>
                  <Return/>
                </Case>
-->
                <Case value="1"> <!-- 限额 -->
                  <Set>OUseAmt=$DtlAmt1</Set>
                  <Break/>
                </Case>
              </Switch>
              <Set>TotAmt=ADD($TotAmt,$ODtlAmt)</Set>
<!--为避免并发，故采用逐条更新的方式-->
              <Set>ChkFlg=0</Set>
              <Set>DtlSts=U</Set>
              <If condition="IS_EQUAL_STRING($OIFlag,O)">
                <Set>PyeAct=$RcvAct</Set>
                <Set>PyeNam=$RcvNam</Set>
                <Set>PyeBNm=$RcvBNm</Set>
              </If>
              <Else>
                <Set>PayAct=$SndAct</Set>
                <Set>PayNam=$SndNam</Set>
                <Set>PayBNm=$SndBNm</Set>
              </Else>
              <Exec func="PUB:ExecSql" error="IGNORE">
                <Args>
                  <Arg name="SqlCmd" value="UpdDtlByAVchCd"/>
                </Args>
              </Exec>
              <If condition="INTCMP(~RetCod,4,0)">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】更新失败)</Set>
                <Return/>
              </If>
            </While>
            <If condition="INTCMP($TxnAmt,6,$TotAmt)">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(票面额【,AMTFMT($TxnAmt),】大于明细总额【,AMTFMT($TotAmt),】)</Set>
              <Return/>
            </If>
          </Else>
          <Break/>
        </Case>
        <Case value="0">
          <Exec func="PUB:RollbackWork" error="IGNORE"/>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=该笔业务已经登记</Set>
          <Return/>
        </Case>
      </Switch>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461023" desc="授权支付凭证复核">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="GetSingleVchBok">
      <Sentence>
        select BusMod,VchDat,CrpVch,PayNam,PayAct,PayBNm,PyeNam,PyeAct,PyeBNm,BCusId,TxnAmt,TPayTp,RefCod,VchSmr,
               StlMod,VchTyp,VchNo,UdwDat,Pin,AmtTyp,OIFlag,RegId,DtlNum
          from pfavchbok
         where PfaSub='%s' and Year=substr('%s',1,4) and AVchNo='%s' and NodNo='%s' and VchSts='0'
      </Sentence>
      <Fields>PfaSub|ActDat|AVchNo|NodNo|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Switch expression="$Func">
        <Case value="1"> <!-- 查询 -->
          <Exec func="PUB:ReadRecord">
            <Args>
              <Arg name="SqlCmd" value="GetSingleVchBok"/>
            </Args>
          </Exec>
          <If condition="IS_EQUAL_STRING($TlrId,$RegId)">
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=不能复核自己登记的支付凭证</Set>
            <Return/>
          </If>
          <Break/>
        </Case>
        <Case value="2"> <!-- 复核明细 -->
          <Set>Cnt=1</Set>
          <While>
            <If condition="INTCMP($Cnt,6,$RecNum)">
              <Break/>
            </If>
            <Set>AVchCdNam=STRCAT(ROOT.Rec_,$Cnt,.AVchCd)</Set>
            <Set>QuoIdNam=STRCAT(ROOT.Rec_,$Cnt,.QuoId)</Set>
            <Set>UseAmtNam=STRCAT(ROOT.Rec_,$Cnt,.UseAmt)</Set>
            <Set>SubCodNam=STRCAT(ROOT.Rec_,$Cnt,.SubCod)</Set>
            <Set>EConTpNam=STRCAT(ROOT.Rec_,$Cnt,.EConTp)</Set>
            <Set>PrjCodNam=STRCAT(ROOT.Rec_,$Cnt,.PrjCod)</Set>
            <Set>DptCodNam=STRCAT(ROOT.Rec_,$Cnt,.DptCod)</Set>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$AVchCdNam"/>
              <Arg name="DestName" value="ROOT.AVchCd1"/>
            </Exec>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$QuoIdNam"/>
              <Arg name="DestName" value="ROOT.QuoId1"/>
            </Exec>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$UseAmtNam"/>
              <Arg name="DestName" value="ROOT.UseAmt1"/>
            </Exec>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$SubCodNam"/>
              <Arg name="DestName" value="ROOT.SubCod1"/>
            </Exec>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$EConTpNam"/>
              <Arg name="DestName" value="ROOT.EConTp1"/>
            </Exec>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$PrjCodNam"/>
              <Arg name="DestName" value="ROOT.PrjCod1"/>
            </Exec>
            <Exec func="PUB:GetValue">
              <Arg name="SourName" value="$DptCodNam"/>
              <Arg name="DestName" value="ROOT.DptCod1"/>
            </Exec>
            <Exec func="PUB:ReadRecord" error="IGNORE">
              <Args>
                <Arg name="SqlCmd" value="ChkVchDtl2"/>
              </Args>
            </Exec>
            <If condition="INTCMP(~RetCod,4,0)">
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】与录入数据不一致或数据库操作失败)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($DtlSts,0)">  <!--纸质-->
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】非记帐状态)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($ROOT.QuoId1,$ROOT.QuoId)">
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】计划编码与录入数据不一致)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($ROOT.UseAmt1,$ROOT.OUseAmt)">
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】明细金额与录入数据不一致)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($SubCod1,$ROOT.SubCod)">
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】科目编码与录入数据不一致)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($ROOT.EConTp1,$ROOT.EConTp)">
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】经济分类与录入数据不一致)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($ROOT.PrjCod1,$ROOT.PrjCod)">  <!--项目代码-->
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】项目编码与录入数据不一致)</Set>
              <Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($ROOT.DptCod1,$ROOT.DptCod)">  <!--业务处室-->
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(支付记录【,$AVchCd1,】业务处室与录入数据不一致)</Set>
              <Return/>
            </If>
            <Set>Cnt=ADD($Cnt,1)</Set>
          </While>
          <Break/>
        </Case>
      </Switch>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
    </FlowCtrl>
  </Transaction>



  <Transaction code="461024" desc="授权支付凭证重置">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="GetVchBokByRegId">
      <Sentence>
        select BusMod,VchDat,CrpVch,PayNam,PayAct,PayBNm,PyeNam,PyeAct,PyeBNm,BCusId,TxnAmt,TPayTp,RefCod,VchSmr,
               StlMod,VchTyp,VchNo, AmtTyp,OIFlag,RegId, DtlNum,UdwDat,Pin, PfaKnd
          from pfavchbok
         where PfaSub='%s' and Year=substr('%s',1,4) and AVchNo='%s' and RegId='%s' and VchSts='0'
      </Sentence>
      <Fields>PfaSub|ActDat|AVchNo|TlrId|</Fields>
    </DynSentence>
    <DynSentence name="UpdVchDtl"> <!--修改-->
      <Sentence>
         update %s set DtlSts='U', UseAmt='000000000000000',AVchNo='', VchTyp='' where PfaSub='%s' and AVchNo='%s' and DtlSts='0'
      </Sentence>
      <Fields>VchDtlTbl|PfaSub|AVchNo|TlrId|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Switch expression="$Func">
        <Case value="1"> <!--查询-->
          <Exec func="PUB:ReadRecord" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="GetVchBokByRegId"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库查询失败</Set>
            <Return/>
          </If>
          <If condition="~RetCod=-2">
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=没有满足条件的记录</Set>
            <Return/>
          </If>
          <Break/>
        </Case>
        <Case value="2"> <!--处理-->
<!--
          <Exec func="PUB:AddAuthReason">
            <Arg name="AthCod" value="33"/>
            <Arg name="AthMsg" value="PFA000"/>
          </Exec>
          <Exec func="PUB:CheckLocalAuth">
            <Arg name="ObjSvr" value="SHSTPUB1"/>
          </Exec>
-->
          <Set>VchSts=0</Set>
          <Exec func="PUB:ExecSql">
            <Args>
              <Arg name="SqlCmd" value="DelVchBok"/>
            </Args>
          </Exec>
          <Quote name="ChkSubCfg"/>
          <If condition="IS_EQUAL_STRING($PfaKnd,0)">  <!--纸质-->
            <Set>DtlSts=0</Set>
            <Exec func="PUB:ExecSql">
              <Args>
                <Arg name="SqlCmd" value="DelVchDtl"/>
              </Args>
            </Exec>
          </If>
          <Else>
            <Exec func="PUB:ExecSql">
              <Args>
                <Arg name="SqlCmd" value="UpdVchDtl"/>
              </Args>
            </Exec>
          </Else>
          <Break/>
        </Case>
      </Switch>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
    </FlowCtrl>
  </Transaction>



  <Transaction code="461027" desc="授权支付凭证拒付">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="UpdVchDtl"> <!--修改-->
      <Sentence>
         update %s set DtlSts='4', UseAmt='000000000000000',AVchNo='', RefCod='%s', PfaDat='%s', ClrSts='3', DtlIdx='%s'
          where PfaSub='%s' and Year=substr('%s',1,4) and AVchCd='%s' and DtlSts='U'
      </Sentence>
      <Fields>VchDtlTbl|RefCod|PfaDat|SelVal|PfaSub|PfaDat|AVchCd|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Switch expression="$Func">
        <Case value="1"> <!--查询-->
          <Exec func="PUB:ReadRecord" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="GetDtlByAVchCd"/>
            </Args>
          </Exec>
          <If condition="INTCMP(~RetCod,4,0)">
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库查询失败或没有满足条件的记录</Set>
            <Return/>
          </If>
          <If condition="IS_NOEQUAL_STRING($DtlSts,U)">
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=当前状态不允许拒付</Set>
            <Return/>
          </If>
          <Set>TxnAmt=$DtlAmt</Set>
          <Break/>
        </Case>
        <Case value="2"> <!--处理-->
<!--
          <Exec func="PUB:AddAuthReason">
            <Arg name="AthCod" value="33"/>
            <Arg name="AthMsg" value="PFA000"/>
          </Exec>
          <Exec func="PUB:CheckLocalAuth">
            <Arg name="ObjSvr" value="SHSTPUB1"/>
          </Exec>
-->
          <Quote name="ChkSubCfg"/>
          <If condition="IS_EQUAL_STRING($RtnFlg,0)">
            <Set>PfaDat=$ActDat</Set>
          </If>
          <Else>
            <Exec func="PUB:GetNextWorkDate">
              <Arg name="Date" value="$ActDat"/>
            </Exec>
            <Set>PfaDat=$NextDat</Set>
          </Else>
          <Exec func="PUB:nGetPubSeqNo">
            <Arg name="SeqNam" value="PfaVchDtl:DtlIdx"/>
            <Arg name="SeqCnt" value="1"/>
            <Arg name="Len"    value="6"/>
            <Arg name="CycCnd" value="Y"/>
          </Exec>
          <Set>SelVal=SUB($SelVal,1)</Set>
          <Exec func="PUB:ExecSql">
            <Args>
              <Arg name="SqlCmd" value="UpdVchDtl"/>
            </Args>
          </Exec>
          <Exec func="PUB:CommitWork"/>
					<Set>MsgTyp=N</Set>
					<Set>RspCod=000000</Set>
					<Set>RspMsg=交易成功</Set>
          <Exec func="PUB:PutResponse"/>
<!--产生即时回应文件-->
          <Set>ClrTm=GETDATETIME(YYYYMMDDHHMISS)</Set>
          <Set>SndFil=STRCAT(30,$ClrTm,.dat)</Set>
          <Set>RtnFil=STRCAT(dat/pfa/send/,$SndFil)</Set>
          <Exec func="PUB:ReadRecord">
            <Args>
              <Arg name="SqlCmd" value="GetDtlByAVchCd"/>
            </Args>
          </Exec>
          <Exec func="PUB:WriteFile" error="IGNORE">
            <Arg name="FileName" value="$RtnFil"/>
            <Arg name="OpenMode" value="a+"/>
            <Arg name="Data"     value="3005,AgPayVchInfo,财政授权支付凭证回单,U"/> 
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="$AVchCd"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="$PyeNam"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="$PyeAct"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="$PyeBNm"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="$VchNo"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="AMTSIMPLEFMT($DtlAmt)"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="AMTSIMPLEFMT($UseAmt)"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="FMTDATE($VchDat,0,4)"/>
            <Arg name="Data"     value=","/> 
            <Arg name="Data"     value="$ChkFlg"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="1"/>
            <Arg name="Data"     value=","/>
            <Arg name="Data"     value="$RefCod"/>
            <Arg name="Data"      value="\#"/>
            <Arg name="Data"      value="$AVchCd"/>
            <Arg name="ESCFMT"   value="\\n"/>
          </Exec>
          <Exec func="PUB:IsValidFile" error="IGNORE">
            <Arg name="FileName" value="$RtnFil"/>
          </Exec>
          <If condition="INTCMP(~RetCod,3,0)">
            <Set>IcsFil=$SndFil</Set>
            <Set>msglen=00000020</Set>
            <Exec func="PUB:FtpPut">
              <Arg name="FtpId" value="PFA002"/>
            </Exec>
            <Exec func="PUB:CallThirdOther" error="IGNORE">
              <Arg name="TTxnCd" value="461078" desc="外发财政交易码"/>
              <Arg name="ObjSvr" value="STHDPFA1" desc="财政通讯服务"/>
            </Exec>
            <If condition="~RetCod!=0">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=发送文件到财政系统失败</Set>
              <Return/>
            </If>
          </If>
          <Break/>
        </Case>
      </Switch>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
    </FlowCtrl>
  </Transaction>




  <Transaction code="461032" desc="支付业务会计确认浏览">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="MultiQuery">
      <Sentence>
         select TTxnCd, TckNo, AVchNo, TlrId, TxnAmt, LogNo
           from pfatxnjnl
         where PfaSub='%s' and ActDat='%s' and NodNo='%s' and ( TlrId='%s' or '%s'='' ) and ( TckNo='%s' or '%s'='' ) 
           and ActSts='1' and HTxnSt='S'
        order by TlrId, TckNo
      </Sentence>
      <Fields>PfaSub|ActDat|NodNo|TlrNo|TlrNo|TckNo|TckNo|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Switch expression="$Func">
        <Case value="1">
          <Exec func="PUB:MultiQuery"/>
          <Return/>
        </Case>
        <Case value="2">
          <Exec func="PUB:ReadRecord">
            <Arg name="SqlCmd" value="GetTxnJnl"/>
          </Exec>
          <If condition="STRLEN(TRIM($PrvDat,right))&gt;0">
            <Exec func="PFA:ParsePrvData">
              <Arg name="Args" value="PrvDat"/>
            </Exec>
          </If>
          <Exec func="PUB:ReadRecord">
            <Arg name="SqlCmd" value="GetVchBok"/>
          </Exec>
<!--请咨询公卓-->
          <Set>TTxnCd=$OTTxnCd</Set>
          <Return/>
        </Case>
      </Switch>
    </FlowCtrl>
  </Transaction>



  <Transaction code="461033" desc="抹帐凭单信息查询交易">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="ChkBokJnl" desc="抹帐查原流水">
      <Sentence>
        Select AVchNo,ActSts,HTxnSt,TTxnSt,PrvDat,TLogNo,HLogNo OHLogNo,TckNo OTckNo,TTxnCd,TxnCod OTxnCod,LogNo OLogNo,
               PayAct,PayNam,VchTyp,VchNo, TxnAmt,PyeAct,PyeNam,ClrSts, Smr
          from pfatxnjnl
         where PfaSub='%s' and ActDat='%s' and TckNo='%s' and TlrId='%s' and HTxnSt!='F'
      </Sentence>
      <Fields>PfaSub|ActDat|OTckNo|TlrId|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Exec func="PUB:ReadRecord">
        <Arg name="SqlCmd" value="ChkBokJnl"/>
      </Exec>
      <If condition="AND(INTCMP(~RetCod,3,0),IS_EQUAL_STRING($ActSts,3))">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=该笔会计流水主机已抹帐</Set>
        <Return/>
      </If>
      <If condition="IS_NOEQUAL_STRING($ClrSts,0)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=该笔已开始清算，不能抹帐</Set>
        <Return/>
      </If>
      <If condition="STRLEN(TRIM($PrvDat,right))&gt;0">
        <Exec func="PFA:ParsePrvData">
          <Arg name="Args" value="PrvDat"/>
        </Exec>
      </If>
      <Exec func="PUB:ReadRecord">
        <Arg name="SqlCmd" value="GetVchBok"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=查询成功</Set>
    </FlowCtrl>
  </Transaction>
<!--清算类交易-->
<!--清算类交易-->
<!--清算类交易-->
<!--清算类交易-->
<!--清算类交易-->
  <Transaction code="461034" desc="清算批次生成">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="UpdVchBokByClrSts" desc="根据清算状态修改支付令状态">
      <Sentence>
        update pfavchbok set ClrSts='1', ClrBNo='%s'
         where PfaSub='%s' and Year=substr('%s',1,4) and ClrSts='0' and VchSts='2' and TxnAmt &gt;='%s'
      </Sentence>
      <Fields>ClrBNo|PfaSub|ActDat|ClrAmt|</Fields>
    </DynSentence>
    <DynSentence name="UpdVchDtlByClrSts" desc="根据清算状态修改支付令状态">
      <Sentence>
        update %s set ClrSts='1', ClrBNo='%s'
         where PfaSub='%s' and Year=substr('%s',1,4)
           and AVchNo in ( select AVchNo from pfavchbok where pfasub='%s' and Year=substr('%s',1,4) and ClrSts='1' and ClrBNo='%s' )
      </Sentence>
      <Fields>VchDtlTbl|ClrBNo|PfaSub|ActDat|PfaSub|ActDat|ClrBNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdTxnJnlByClrSts" desc="根据清算状态修改流水表状态">
      <Sentence>
        update pfatxnjnl set ClrSts='1', ClrBNo='%s'
         where PfaSub='%s' and AVchNo in ( select AVchNo from pfavchbok where pfasub='%s' and Year=substr('%s',1,4) and ClrSts='1' and ClrBNo='%s' )
      </Sentence>
      <Fields>ClrBNo|PfaSub|PfaSub|ActDat|ClrBNo|</Fields>
    </DynSentence>
    <DynSentence name="GenInClrRec">
      <Sentence>
        insert into pfaclrrec
          select '1',BrNo,PfaSub,'0','%s',OIFlag,'0','',BCusId,'','','',
                 substr( right( ( '000000000000000'||rtrim(char(sum(bigint(TxnAmt)))) ),15 ),1,15 ) TxnAmt,'','',''
            from pfavchbok
           where PfaSub='%s' and Year=SUBSTR('%s',1,4) and ClrBNo='%s'
        group by BrNo,PfaSub,OIFlag,BCusId
      </Sentence>
      <Fields>ClrBNo|PfaSub|ActDat|ClrBNo|</Fields>
    </DynSentence>
    <DynSentence name="GenOutClrRec">
      <Sentence>
        insert into pfaclrrec
          select '1','%s','%s','1','%s','R','0','%s','','','%s','%s',
                 substr( right( ( '000000000000000'||rtrim(char(value(sum(bigint(TxnAmt)),0))) ),15 ),1,15 ) TxnAmt,'','',''
            from pfaclrrec where PfaSub='%s' and ClrTyp='0' and ClrBNo='%s' and OIFlag in ( 'R','I' )
      </Sentence>
      <Fields>AgtBr|PfaSub|ClrBNo|RknVno|ClrAct|ClrNam|PfaSub|ClrBNo|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="InitTran"/>
      <Quote name="ChkSubCfg"/>
      <If condition="IS_NOEQUAL_STRING($NodNo,$ClrNod)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(非财政【,$PfaSub,】清算机构)</Set>
        <Return/>
      </If>
<!--为避免同一分行并发-->
      <Exec func="PUB:Lock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
<!--根据统一的虚拟分行号获取全行唯一的清算批次号-->
      <Set>OBrNo=$AgtBr</Set>
      <Set>BrNo=$PFABNo</Set>
      <Exec func="PUB:GetPubSeqNo" error="IGNORE">
        <Arg name="SeqNam" value="pfaclrrec:ClrBNo"/>
        <Arg name="SeqCnd" value=" "/>
        <Arg name="Len"    value="10"/>
      </Exec>
      <If condition="~RetCod=-1"> <!--处理错误-->
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=获取清算批次号失败</Set>
        <Return/>
      </If>
      <Set>ClrBNo=$SelVal</Set>
      <Set>BrNo=$OBrNo</Set>
<!--根据支付令表对应记录的清算批次号、清算状态，并实现待清算记录的加锁-->
      <Exec func="PUB:ExecSql" error="IGNORE"> 
        <Arg name="SqlCmd" value="UpdVchBokByClrSts"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库错误或没有符合清算的记录</Set>
        <Return/>
      </If>
      <Exec func="PUB:ExecSql" error="IGNORE"> 
        <Arg name="SqlCmd" value="UpdVchDtlByClrSts"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库错误或没有符合清算的记录</Set>
        <Return/>
      </If>
      <Exec func="PUB:ExecSql" error="IGNORE"> 
        <Arg name="SqlCmd" value="UpdTxnJnlByClrSts"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库错误或没有符合清算的记录</Set>
        <Return/>
      </If>
<!--根据流水表产生内部清算记录-->
      <Exec func="PUB:ExecSql" error="IGNORE">
        <Arg name="sqlname" value="GenInClrRec"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:RollbackWork"/>
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库错误</Set>
        <Return/>
      </If>
<!--根据内部清算记录产生外部清算记录-->
      <Exec func="PUB:ExecSql" error="IGNORE">
        <Arg name="sqlname" value="GenOutClrRec"/>
      </Exec>
      <If condition="~RetCod=-1"> <!--可能存在无外部清算得情况-->
        <Exec func="PUB:RollbackWork"/>
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库错误</Set>
        <Return/>
      </If>
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461035" desc="内部清算" timeout="600">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="GetClrRec"><!--取分行清算记录-->
      <Sentence>
        select BrNo JnlBr, ClrTyp, OIFlag, LogNo OLogNo, BCusId, ActNo, TxnAmt
          from pfaclrrec
         where PfaSub='%s' and ClrTyp='0' and ClrBNo='%s' and ClrSts='1'
      </Sentence>
      <Fields>PfaSub|ClrBNo|</Fields>
    </DynSentence>
    <DynSentence name="GetClrJnl">
      <Sentence>
        select HTxnSt, ActDat ClrDat, FTxnTm ClrTm from pfaclrjnl where LogNo='%s' and (HTxnSt='S' or HTxnSt='T')
      </Sentence>
      <Fields>OLogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrRec"> <!--更新内部清算纪录状态-->
      <Sentence>
        update pfaclrrec set ClrSts='2', ClrDat='%s', ClrTm='%s'
         where PfaSub='%s' and ClrTyp='%s' and ClrBNo='%s' and OIFlag='%s' and BCusId='%s' and LogNo='%s' and ClrSts='1'
      </Sentence>
      <Fields>ClrDat|ClrTm|PfaSub|ClrTyp|ClrBNo|OIFlag|BCusId|LogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdVch"> <!--更新支付令表-->
      <Sentence>
        update %s set ClrSts='2', ClrDat='%s' where PfaSub='%s' and ClrBNo='%s' and ClrSts='1'
      </Sentence>
      <Fields>TblNam|ClrDat|PfaSub|ClrBNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrJnl"> <!--更新内部清算流水状态-->
      <Sentence>
        LogNo='%s'
      </Sentence>
      <Fields>LogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrRecLogNo"> <!--更新内部清算纪录前置流水号-->
      <Sentence>
        update pfaclrrec set LogNo='%s'
         where PfaSub='%s' and ClrTyp='%s' and ClrBNo='%s' and OIFlag='%s' and BCusId='%s' and LogNo='%s' and ClrSts='1'
      </Sentence>
      <Fields>LogNo|PfaSub|ClrTyp|ClrBNo|OIFlag|BCusId|OLogNo|</Fields>
    </DynSentence>
    <Attributes>
      <Attribute name="nodatabase" value="2"/>  <!--设置数据库全程连接-->
    </Attributes>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="SubCfgRunPar"/>
        </Args>
      </Exec>
      <If condition="~RetCod!=0">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(数据库查询失败或财政编码【,$PfaSub,】不存在)</Set>
        <Return/>
      </If>
      <If condition="IS_NOEQUAL_STRING($NodNo,$ClrNod)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(非财政【,$PfaSub,】的清算网点)</Set>
        <Return/>
      </If>
<!--为避免同一分行并发-->
      <Exec func="PUB:Lock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Exec func="PUB:OpenCursor" error="IGNORE">
        <Arg name="sql" value="GetClrRec"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=打开游标出错</Set>
        <Return/>
      </If>
      <Set>CntFlg=N</Set>
      <While>
        <Exec func="PUB:FetchCursor" error="IGNORE"/>
        <If condition="~RetCod=100">
          <If condition="IS_EQUAL_STRING($CntFlg,Y)">
            <Break/>
          </If>
          <Else>
            <Exec func="PUB:CloseCursor" error="IGNORE"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=没有满足条件的记录</Set>
            <Return/>
          </Else>
        </If>
        <Set>CntFlg=Y</Set>
        <Delete>SucFlg</Delete>
<!--判断流水是否已经成功-->
        <Exec func="PUB:ReadRecord" error="IGNORE">
          <Arg name="sql" value="GetClrJnl"/>
        </Exec>
        <If condition="~RetCod=-1">  <!--查询流水表异常-->
          <Exec func="PUB:CloseCursor" error="IGNORE"/>
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=查询清算流水数据失败</Set>
          <Return/>
        </If>
        <If condition="~RetCod=0">   <!--查询流水表成功,需根据主机状态HTxnSt决定处理流程,只检查T或S-->
          <If condition="IS_EQUAL_STRING($HTxnSt,T)"><!--清算超时-->
            <Exec func="PUB:CallHostOther" error="IGNORE">
              <Arg name="TTxnCd" value="458980"/>
              <Arg name="ObjSvr" value="SHSTPUB1"/>
            </Exec>
            <If condition="~RetCod=-1"> <!--主机查询超时,继续处理以下一笔业务-->
              <Set>RspMsg=STRCAT(内部清算流水【,$LogNo,】查询超时，请关注!!!)</Set>
              <Continue/>
            </If>
            <If condition="AND(IS_NOEQUAL_STRING($CrcSts,Y), INTCMP(~RetCod,3,0))"> <!--主机已成功-->
              <Set>HTxnSt=S</Set>
              <Set>SucFlg=Y</Set>
            </If>
            <Else>
              <Set>HTxnSt=F</Set>
              <Set>SucFlg=N</Set>
            </Else>
            <Set>LogNo=$OLogNo</Set>
            <Exec func="PUB:UpdateRecord" error="IGNORE">   <!--修改流水状态-->
              <Arg name="TblNam" value="pfaclrjnl"/>
              <Arg name="CndSts" value="UpdClrJnl"/>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:CloseCursor" error="IGNORE"/>
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=修改系统内清算流水表失败</Set>
              <Return/>
            </If>
          </If>
          <If condition="IS_EQUAL_STRING($HTxnSt,S)"><!--清算成功-->
            <Set>SucFlg=Y</Set>
          </If>
        </If>
        <Else>   <!--查询流水表失败,需要上送主机记帐-->
<!--流水表中无成功记录-->
<!--根据客户资料表获取对应开户网点号、分行号-->
          <Exec func="PUB:ReadRecord" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="GetCusInf"/>
            </Args>
          </Exec>
          <If condition="~RetCod!=0">
            <Exec func="PUB:CloseCursor" error="IGNORE"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=STRCAT(数据库查询失败或客户【,$BCusId,】不存在)</Set>
            <Return/>
          </If>
          <If condition="IS_NOEQUAL_STRING($AgtBr,$ActBr)"> <!--清算分行与零余额帐户所在分行不一致，采用跨分行记帐-->
            <Set>RemFlg=1</Set>
          </If>
          <Else>
            <Set>RemFlg=0</Set>
          </Else>
          <Switch expression="$OIFlag">
            <Case value="O"> <!-- 付款 -->
              <Delete>ActBk2</Delete>
              <Delete>ActBr2</Delete>
              <Delete>ActSq2</Delete>
              <Set>HTxnCd=451820</Set>
              <Set>BusTyp=PFA61</Set>
              <Set>OActBk=$AgtBr</Set>
              <Set>OActBr=$ClrNod</Set>
              <Set>OActSq=SUBSTR($ClrAct,14,5)</Set>
              <Set>CDFlg1=D</Set>
              <Set>Smr=清算代理财政资金付款</Set>
              <Set>AccMod=2</Set>
              <Set>CDFlg2=C</Set>
              <Set>PyeAmt=$TxnAmt</Set>
              <Set>MSBr=$ClrNod</Set>
              <Set>MRBr=$OpnNod</Set>
              <Set>MRBk=$ActBr</Set>
              <Break/>
            </Case>
            <Case value="I"/> <!-- 收款 -->
            <Case value="R"> <!-- 退款 -->
              <Set>HTxnCd=451720</Set>
              <Set>BusTyp=PFA61</Set>
              <Set>CDFlg1=D</Set>
              <Set>Smr=清算代理财政资金退款</Set>
              <Set>AccMod=1</Set>
              <Set>ActBk2=$AgtBr</Set>
              <Set>ActBr2=$ClrNod</Set>
              <Set>ActSq2=SUBSTR($ClrAct,14,5)</Set>
              <Set>CDFlg2=C</Set>
              <Set>InAmt=$TxnAmt</Set>
              <Set>MSBr=$OpnNod</Set>
              <Set>MRBr=$ClrNod</Set>
              <Set>MRBk=$AgtBr</Set>
              <Break/>
            </Case>
          </Switch>
          <Set>TxnCnl=PFA</Set>
          <Exec func="PUB:GetVirtualTeller"/>
          <Delete>LogNo</Delete>
          <Delete>TckNo</Delete>
          <Delete>HTxnSt</Delete>
          <Exec func="PUB:GetLogNo"/>
<!--先更新清算登记表，为以后的超时查询提供在键值上的索引-->
          <Exec func="PUB:ExecSql" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="UpdClrRecLogNo"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:CloseCursor" error="IGNORE">
              <Arg name="CursorName" value="CURSOR_1"/>
            </Exec>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库处理失败</Set>
            <Return/>
          </If>
<!--登记流水表-->
          <Exec func="PUB:InsertJournal" error="IGNORE"/>
          <If condition="~RetCod=-1">
            <Exec func="PUB:CloseCursor" error="IGNORE"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=登记系统内清算流水表失败</Set>
            <Return/>
          </If>
          <Exec func="PUB:CallHostAcc" error="IGNORE">
            <Arg name="TxnCod" value="$HTxnCd"/>
            <Arg name="ObjSvr" value="SHSTPUB1"/>
          </Exec>
<!--记帐后只更新清算流水表,其他登记表统一更新-->
          <Switch expression="~RetCod">
            <Case value="0"> <!--交易成功-->
              <Set>SucFlg=Y</Set>
              <Set>ClrTm=$FTxnTm</Set>
              <Set>ClrDat=$ActDat</Set>
              <Exec func="PUB:UpdateRecord" error="IGNORE">
                <Arg name="TblNam" value="pfaclrjnl"/>
                <Arg name="CndSts" value="UpdClrJnl"/>
              </Exec>
              <If condition="~RetCod=-1">
                <Exec func="PUB:CloseCursor" error="IGNORE"/>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                </Exec>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=修改流水表异常</Set>
                <Return/>
              </If>
              <Break/>
            </Case>
            <Case value="-1"> <!--交易超时，提交当前业务，但不在继续下一处理-->
              <Set>SucFlg=N</Set>
              <Exec func="PUB:UpdateRecord" error="IGNORE">
                <Arg name="TblNam" value="pfaclrjnl"/>
                <Arg name="CndSts" value="UpdClrJnl"/>
              </Exec>
              <If condition="~RetCod=-1">
                <Exec func="PUB:CloseCursor" error="IGNORE"/>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                </Exec>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=修改流水表异常</Set>
                <Return/>
              </If>
              <Exec func="PUB:CommitWork"/>
              <Exec func="PUB:CloseCursor" error="IGNORE"/>
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=主机通讯超时</Set>
              <Return/>
            </Case>
            <Default> <!--交易错误，继续下一处理-->
              <Set>SucFlg=N</Set>
              <Exec func="PUB:UpdateRecord" error="IGNORE">
                <Arg name="TblNam" value="pfaclrjnl"/>
                <Arg name="CndSts" value="UpdClrJnl"/>
              </Exec>
              <If condition="~RetCod=-1">
                <Exec func="PUB:CloseCursor" error="IGNORE"/>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                </Exec>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=修改流水表异常</Set>
                <Return/>
              </If>
              <Set>RspMsg=STRCAT(记帐错误,返回码【,$HRspCd,】)</Set>
              <Break/>
            </Default>
          </Switch>
        </Else>
<!--对于清算成功或超时（查询为成功的记录）修改对应的清算批次表、日间流水表、支付令登记表-->
        <If condition="IS_EQUAL_STRING($SucFlg,Y)">
<!--更新清算记录表-->
          <Exec func="PUB:ExecSql" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="UpdClrRec"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:CloseCursor" error="IGNORE"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库处理失败</Set>
            <Return/>
          </If>
<!--更新支付令登记表-->
          <Set>TblNam=pfavchbok</Set>
          <Exec func="PUB:ExecSql" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="UpdVch"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:CloseCursor" error="IGNORE"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库处理失败</Set>
            <Return/>
          </If>
<!--更新支付令明细表-->
          <Set>TblNam=$VchDtlTbl</Set>
          <Exec func="PUB:ExecSql" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="UpdVch"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:CloseCursor" error="IGNORE"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库处理失败</Set>
            <Return/>
          </If>
          <Exec func="PUB:CommitWork"/>
        </If>
      </While>
      <Exec func="PUB:CloseCursor" error="IGNORE"/>
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
      <Return/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461036" desc="外部清算" timeout="600">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="CntInStlDtl"><!--取分行清算记录-->
      <Sentence>
        select count(*) InNum from pfaclrrec
         where PfaSub='%s' and ClrTyp='0' and ClrBNo='%s' and OIFlag='R' and ClrSts!='2'
      </Sentence>
      <Fields>PfaSub|ClrBNo|</Fields>
    </DynSentence>
    <DynSentence name="GetClrRec"><!--取分行清算记录-->
      <Sentence>
        select ClrSts, LogNo OLogNo, ActNo, TxnAmt from pfaclrrec
         where PfaSub='%s' and ClrTyp='1' and ClrBNo='%s' and OIFlag='R' and ActNo='%s'
      </Sentence>
      <Fields>PfaSub|ClrBNo|ClrAct|</Fields>
    </DynSentence>
    <DynSentence name="GetClrJnl">
      <Sentence>
        select TckNo, HTxnSt, ActDat ClrDat, FTxnTm ClrTm from pfaclrjnl where LogNo='%s' and (HTxnSt='S' or HTxnSt='T')
      </Sentence>
      <Fields>OLogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrRec"> <!--更新外部清算纪录状态-->
      <Sentence>
        update pfaclrrec set ClrSts='2', ClrDat='%s', ClrTm='%s'
         where PfaSub='%s' and ClrTyp='1' and ClrBNo='%s' and OIFlag='R' and ActNo='%s' and LogNo='%s' and ClrSts='1'
      </Sentence>
      <Fields>ClrDat|ClrTm|PfaSub|ClrBNo|ClrAct|LogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrJnl"> <!--更新外部清算流水状态-->
      <Sentence>
        LogNo='%s'
      </Sentence>
      <Fields>LogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrRecLogNo"> <!--更新外部清算纪录前置流水号-->
      <Sentence>
        update pfaclrrec set LogNo='%s'
         where PfaSub='%s' and ClrTyp='1' and ClrBNo='%s' and OIFlag='R' and ActNo='%s' and LogNo='%s' and ClrSts='1'
      </Sentence>
      <Fields>LogNo|PfaSub|ClrBNo|ClrAct|OLogNo|</Fields>
    </DynSentence>
    <Attributes>
      <Attribute name="nodatabase" value="2"/>  <!--设置数据库全程连接-->
    </Attributes>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Quote name="ChkSubCfg"/>
      <If condition="IS_NOEQUAL_STRING($NodNo,$ClrNod)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(非财政【,$PfaSub,】的清算网点)</Set>
        <Return/>
      </If>
<!--为避免同一分行并发-->
      <Exec func="PUB:Lock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
<!--检查外部清算对应的内部清算明细是否已完成内部清算-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="CntInStlDtl"/>
        </Args>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(数据库查询失败或批次【,$ClrBNo,】不存在)</Set>
        <Return/>
      </If>
      <If condition="IS_NOEQUAL_STRING($InNum,0)">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(批次【,$ClrBNo,】内部清算未完成)</Set>
        <Return/>
      </If>
<!--获取外部清算内容-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="GetClrRec"/>
        </Args>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(数据库查询失败或批次【,$ClrBNo,】不存在)</Set>
        <Return/>
      </If>
      <If condition="INTCMP($TxnAmt,3,0)">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(批次【,$ClrBNo,】无退库清算业务)</Set>
        <Return/>
      </If>
      <If condition="IS_EQUAL_STRING($ClrSts,2)">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(批次【,$ClrBNo,】清算已完成)</Set>
        <Return/>
      </If>
<!--检查是否存在清算流水-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="GetClrJnl"/>
        </Args>
      </Exec>
      <If condition="~RetCod=-1">  <!--查询流水表异常-->
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=查询清算流水数据失败</Set>
        <Return/>
      </If>
      <If condition="~RetCod=0">   <!--查询流水表成功,需根据主机状态HTxnSt决定处理流程-->
        <If condition="IS_EQUAL_STRING($HTxnSt,T)"><!--清算超时-->
          <Exec func="PUB:CallHostOther" error="IGNORE">
            <Arg name="TTxnCd" value="458980"/>
            <Arg name="ObjSvr" value="SHSTPUB1"/>
          </Exec>
          <If condition="~RetCod=-1"> <!--主机查询超时,继续处理以下一笔业务-->
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=STRCAT(外部清算流水【,$LogNo,】查询超时，请关注!!!)</Set>
            <Return/>
          </If>
          <If condition="AND(IS_NOEQUAL_STRING($CrcSts,Y), INTCMP(~RetCod,3,0))"> <!--主机已成功-->
            <Set>HTxnSt=S</Set>
            <Set>SucFlg=Y</Set>
          </If>
          <Else>
            <Set>HTxnSt=F</Set>
            <Set>SucFlg=N</Set>
          </Else>
          <Set>LogNo=$OLogNo</Set>
          <Exec func="PUB:UpdateRecord" error="IGNORE">   <!--修改流水状态为成功-->
            <Arg name="TblNam" value="pfaclrjnl"/>
            <Arg name="CndSts" value="UpdClrJnl"/>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=修改系统外清算流水失败</Set>
            <Return/>
          </If>
        </If>
        <If condition="IS_EQUAL_STRING($HTxnSt,S)"><!--清算成功-->
          <Set>SucFlg=Y</Set>
        </If>
      </If>
      <Else>   <!--查询流水表失败,需要上送主机记帐-->
        <Set>HTxnCd=451400</Set>
        <Set>DAcSqn=SUBSTR($ClrAct,14,5)</Set> <!--借记帐户顺序号-->
        <Set>TActBr=$BrNo</Set>
        <Set>AgtNod=$ClrNod</Set>
        <Set>BVNO=00000000</Set>
        <Set>AccMod=1</Set>
        <Set>CAcSqn=$PmsSeq</Set>
        <Set>ActNod=$ClrNod</Set>
<!--
        <Set>TxnCnl=PFA</Set>
        <Exec func="PUB:GetVirtualTeller"/>
-->
        <Delete>LogNo</Delete>
        <Delete>TckNo</Delete>
        <Delete>HTxnSt</Delete>
        <Exec func="PUB:GetLogNo"/>
<!--先更新清算登记表，为以后的查询提供在键值上的索引-->
        <Exec func="PUB:ExecSql" error="IGNORE">
          <Args>
            <Arg name="SqlCmd" value="UpdClrRecLogNo"/>
          </Args>
        </Exec>
        <If condition="~RetCod!=0">
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Exec func="PUB:RollbackWork" error="IGNORE"/>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=数据库处理失败</Set>
          <Return/>
        </If>
<!--登记流水表-->
        <Exec func="PUB:InsertJournal" error="IGNORE"/>
        <If condition="~RetCod=-1">
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Exec func="PUB:RollbackWork" error="IGNORE"/>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=登记系统外清算流水失败</Set>
          <Return/>
        </If>
        <Exec func="PUB:CallHostAcc" error="IGNORE">
          <Arg name="TxnCod" value="$HTxnCd"/>
          <Arg name="ObjSvr" value="SHSTPUB1"/>
        </Exec>
<!--记帐后只更新清算流水表,其他登记表统一更新-->
        <Switch expression="~RetCod">
          <Case value="0"> <!--交易成功-->
            <Set>SucFlg=Y</Set>
            <Set>ClrDat=$ActDat</Set>
            <Set>ClrTm=$FTxnTm</Set>
            <Exec func="PUB:UpdateRecord" error="IGNORE">
              <Arg name="TblNam" value="pfaclrjnl"/>
              <Arg name="CndSts" value="UpdClrJnl"/>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:CloseCursor" error="IGNORE">
                <Arg name="CursorName" value="CURSOR_1"/>
              </Exec>
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=修改流水表异常</Set>
              <Return/>
            </If>
            <Break/>
          </Case>
          <Case value="-1"> <!--交易超时-->
            <Set>SucFlg=N</Set>
            <Exec func="PUB:UpdateRecord" error="IGNORE">
              <Arg name="TblNam" value="pfaclrjnl"/>
              <Arg name="CndSts" value="UpdClrJnl"/>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=修改流水表异常</Set>
              <Return/>
            </If>
            <Exec func="PUB:CommitWork"/>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=主机通讯超时</Set>
            <Return/>
          </Case>
          <Default>
            <Set>SucFlg=N</Set>
            <Exec func="PUB:UpdateRecord" error="IGNORE">
              <Arg name="TblNam" value="pfaclrjnl"/>
              <Arg name="CndSts" value="UpdClrJnl"/>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=修改流水表异常</Set>
              <Return/>
            </If>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=$HRspCd</Set>
            <Set>RspMsg=主机记帐错误</Set>
            <Return/>
          </Default>
        </Switch>
      </Else>
<!--对于清算成功或超时（查询为成功的记录)修改对应的清算批次表-->
      <If condition="IS_EQUAL_STRING($SucFlg,Y)">
<!--更新清算记录表-->
        <Exec func="PUB:ExecSql" error="IGNORE">
          <Args>
            <Arg name="SqlCmd" value="UpdClrRec"/>
          </Args>
        </Exec>
        <If condition="~RetCod=-1">
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Exec func="PUB:RollbackWork" error="IGNORE"/>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=数据库处理失败</Set>
          <Return/>
        </If>
<!--保留原数据为UNLOCK提供参数-->
        <Set>OAplCls=$AplCls</Set>
        <Set>OTxnCod=$TxnCod</Set>
<!--登记支付交易明细表-->
<!--根据会计流水号查询支付明细表-->
        <Set>BusLog=$TckNo</Set>
        <Exec func="PUB:CallLocal" error="IGNORE">
          <Arg name="TxnCod" value="351233"/>
          <Arg name="ObjSvr" value="OFRTPMS1"/>
        </Exec>
        <If condition="INTCMP($RptCnt,3,0)">
          <Set>PMBTyp=11</Set>
          <Set>VchNo=00000000</Set>
          <Set>BilDat=$ActDat</Set>
          <Set>CcyCod=CNY</Set>
          <Set>Smr=STRCAT($PfaNam,与人行清算退款)</Set>
          <Set>RpdFlg=1</Set>
          <Set>PayRet=0</Set>
          <Set>SndAct=$ClrAct</Set>
          <Set>SndNam=$ClrNam</Set>
          <Set>ROpnBk=$RBkNo</Set>
          <Exec func="PUB:CallLocal" error="IGNORE">
            <Arg name="TxnCod" value="359210"/>
            <Arg name="ObjSvr" value="OFRTPMS1"/>
          </Exec>
        </If>
        <Else>
          <Set>RspMsg=支付登记表已有相关信息</Set>
        </Else>
      </If>
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="STRCAT($BrNo,$OAplCls,$OTxnCod)"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
      <Return/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461043" desc="人行清算确认" timeout="60">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="GetTotAmt"><!--取付款清算总额-->
      <Sentence>
        select COALESCE(sum(bigint(TxnAmt)),0) TotAmt, COALESCE(sum(bigint(DtlNum)),0) TotNum from PfaVchBok
         where PfaSub='%s' and ClrBNo='%s' and OIFlag='%s' and ( AVchNo='%s' or '%s'='' ) and ClrSts='2'
      </Sentence>
      <Fields>PfaSub|ClrBNo|OIFlag|AVchNo|AVchNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdVchBok"> <!--更新支付令登记表-->
      <Sentence>
        update pfavchbok set ClrSts='%s', PfaDat='%s'
         where PfaSub='%s' and ClrBNo='%s' and OIFlag='%s' and ( AVchNo='%s' or '%s'='' ) and ClrSts='2'
      </Sentence>
      <Fields>ClrSts|ActDat|PfaSub|ClrBNo|OIFlag|AVchNo|AVchNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdVchDtl"> <!--更新支付令明细登记表-->
      <Sentence>
        update %s set ClrSts='%s', PfaDat='%s', DtlIdx=right('000000'||rtrim(char((row_number()over()+%s))),6)
         where PfaSub='%s' and ClrBNo='%s' and OIFlag='%s' and ( AVchNo='%s' or '%s'='' ) and ClrSts='2'
      </Sentence>
      <Fields>VchDtlTbl|ClrSts|ActDat|SelVal|PfaSub|ClrBNo|OIFlag|AVchNo|AVchNo|</Fields>
    </DynSentence>
    <DynSentence name="GetClrRec"><!--取分行清算记录-->
      <Sentence>
        select ClrSts, LogNo, ActNo from pfaclrrec where BrNo='%s' and PfaSub='%s' and ClrTyp='2' and ClrBNo='%s' and OIFlag='%s'
      </Sentence>
      <Fields>AgtBr|PfaSub|ClrBNo|OIFlag|</Fields>
    </DynSentence>
    <DynSentence name="GetClrJnl">
      <Sentence>
        select HTxnSt, FTxnTm from pfaclrjnl where LogNo='%s' and (HTxnSt='S' or HTxnSt='T')
      </Sentence>
      <Fields>LogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrJnl"> <!--更新清算流水状态-->
      <Sentence>
        LogNo='%s'
      </Sentence>
      <Fields>LogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdClrRec"><!--更新清算记录-->
      <Sentence>
        update pfaclrrec set ClrSts='%s', PfaDat='%s', ClrTm='%s'
         where BrNo='%s' and PfaSub='%s' and ClrTyp='2' and ClrBNo='%s' and OIFlag='%s' and ActNo='%s' and LogNo='%s'
      </Sentence>
      <Fields>ClrSts|ActDat|FTxnTm|AgtBr|PfaSub|ClrBNo|OIFlag|ActNo|LogNo</Fields>
    </DynSentence>
    <Attributes>
      <Attribute name="nodatabase" value="2"/>  <!--设置数据库全程连接-->
    </Attributes>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Quote name="ChkSubCfg"/>
      <If condition="IS_NOEQUAL_STRING($NodNo,$ClrNod)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(非财政【,$PfaSub,】的清算网点)</Set>
        <Return/>
      </If>
<!--为避免同一分行并发-->
      <Exec func="PUB:Lock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="GetTotAmt"/>
        </Args>
      </Exec>
      <If condition="~RetCod=-1">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(数据库查询失败或汇总金额错)</Set>
        <Return/>
      </If>
      <If condition="INTCMP($ToTAmt,3,0)">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=内部清算未完成或当天没有业务</Set>
        <Return/>
      </If>
      <If condition="INTCMP($ToTAmt,4,$ClrAmt)">
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=清算金额与支付令明细表不一致</Set>
        <Return/>
      </If>
<!--设置更新标志-->
      <Set>SucFlg=Y</Set>
      <If condition="IS_EQUAL_STRING($ClrFlg,0)"> <!--人行清算成功-->
<!--根据业务收支方向决定是否需要上送主机记帐-->
        <If condition="IS_EQUAL_STRING($OIFlag,O)"> <!--付款-->
<!--获取清算记录，判断是否已做清算-->
          <Exec func="PUB:ReadRecord" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="GetClrRec"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=数据库查询失败</Set>
            <Return/>
          </If>
<!--如果存在,判断主机记帐情况-->
          <If condition="~RetCod=0">
            <If condition="IS_EQUAL_STRING($ClrSts,3)">
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(批次【,$ClrBNo,】清算已完成)</Set>
              <Return/>
            </If>
<!--检查是否存在清算流水-->
            <Exec func="PUB:ReadRecord" error="IGNORE">
              <Args>
                <Arg name="SqlCmd" value="GetClrJnl"/>
              </Args>
            </Exec>
            <If condition="~RetCod=-1">  <!--查询流水表异常-->
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=查询清算流水数据失败</Set>
              <Return/>
            </If>
<!--流水表不存在，需要上送主机记帐-->
            <If condition="~RetCod=-2">
              <Set>BokFlg=Y</Set>
            </If>
<!--查询流水表成功,需根据主机状态HTxnSt决定处理流程-->
            <If condition="~RetCod=0">
              <If condition="IS_EQUAL_STRING($HTxnSt,T)"><!--清算超时-->
                <Set>OLogNo=$LogNo</Set>
                <Exec func="PUB:CallHostOther" error="IGNORE">
                  <Arg name="TTxnCd" value="458980"/>
                  <Arg name="ObjSvr" value="SHSTPUB1"/>
                </Exec>
                <If condition="~RetCod=-1"> <!--主机查询超时,继续处理以下一笔业务-->
                  <Exec func="PUB:Unlock">
                    <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                  </Exec>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=STRCAT(清算流水【,$LogNo,】查询超时，请关注!!!)</Set>
                  <Return/>
                </If>
                <If condition="AND(IS_NOEQUAL_STRING($CrcSts,Y), INTCMP(~RetCod,3,0))"> <!--主机已成功-->
                  <Set>HTxnSt=S</Set>
                </If>
                <Else>
                  <Set>HTxnSt=F</Set>
                </Else>
                <Exec func="PUB:UpdateRecord" error="IGNORE">   <!--修改原流水状态-->
                  <Arg name="TblNam" value="pfaclrjnl"/>
                  <Arg name="CndSts" value="UpdClrJnl"/>
                </Exec>
                <If condition="~RetCod=-1">
                  <Exec func="PUB:Unlock">
                    <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                  </Exec>
                  <Exec func="PUB:RollbackWork" error="IGNORE"/>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=修改清算流水失败</Set>
                  <Return/>
                </If>
              </If>
              <If condition="IS_EQUAL_STRING($HTxnSt,S)"><!--清算成功或清算超时查询结果成功-->
                <Set>BokFlg=N</Set>  <!--不需要上送主机记帐-->
              </If>
              <Else>
                <Set>BokFlg=Y</Set>  <!--需要上送主机记帐-->
              </Else>
            </If>
          </If>
<!--如果登记表不存在,登记清算登记表-->
          <If condition="~RetCod=-2">
            <Set>ClrSts=1</Set>
            <Set>ClrTyp=2</Set>
            <Exec func="PUB:GetLogNo"/>
            <Set>ActNo=$RActSq</Set>
            <Set>TxnAmt=$ClrAmt</Set>
            <Exec func="PUB:InsertRecord" error="IGNORE">
              <Arg name="TblNam" value="pfaclrrec"/>
            </Exec>
            <If condition="~RetCod!=0">
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=登记清算表失败</Set>
              <Return/>
            </If>
            <Set>BokFlg=Y</Set>
          </If>
<!--上送主机帐务处理-->
          <If condition="IS_EQUAL_STRING($BokFlg,Y)">
<!--登记流水表-->
            <Exec func="PUB:InsertJournal" error="IGNORE"/>
            <If condition="~RetCod=-1">
              <Exec func="PUB:CloseCursor" error="IGNORE">
                <Arg name="CursorName" value="CURSOR_1"/>
              </Exec>
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=登记清算流水表失败</Set>
              <Return/>
            </If>
            <Set>HTxnCd=451400</Set>
            <Set>DAcSqn=$RActSq</Set> <!--借记帐户顺序号-->
            <Set>TActBr=$BrNo</Set>
            <Set>AgtNod=$AgtBr</Set>
            <Set>BVNO=00000000</Set>
            <Set>AccMod=1</Set>
            <Set>CAcSqn=SUBSTR($ClrAct,14,5)</Set>
            <Set>ActNod=$AgtBr</Set>
            <Set>Smr=清算财政付款业务款项</Set>
            <Exec func="PUB:CallHostAcc" error="IGNORE">
              <Arg name="TxnCod" value="$HTxnCd"/>
              <Arg name="ObjSvr" value="SHSTPUB1"/>
            </Exec>
<!--记帐后只更新清算流水表,其他登记表统一更新-->
            <Switch expression="~RetCod">
              <Case value="0"> <!--交易成功-->
                <Set>SucFlg=Y</Set>
                <Set>ClrDat=$ActDat</Set>
                <Set>ClrTm=$FTxnTm</Set>
                <Exec func="PUB:UpdateRecord" error="IGNORE">
                  <Arg name="TblNam" value="pfaclrjnl"/>
                  <Arg name="CndSts" value="UpdClrJnl"/>
                </Exec>
                <If condition="~RetCod=-1">
                  <Exec func="PUB:Unlock">
                    <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                  </Exec>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=修改流水表异常</Set>
                  <Return/>
                </If>
                <Break/>
              </Case>
              <Case value="-1"> <!--交易超时-->
                <Set>SucFlg=N</Set>
                <Exec func="PUB:UpdateRecord" error="IGNORE">
                  <Arg name="TblNam" value="pfaclrjnl"/>
                  <Arg name="CndSts" value="UpdClrJnl"/>
                </Exec>
                <If condition="~RetCod=-1">
                  <Exec func="PUB:Unlock">
                    <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                  </Exec>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=修改流水表异常</Set>
                  <Return/>
                </If>
                <Exec func="PUB:CommitWork"/>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                </Exec>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=主机通讯超时</Set>
                <Return/>
              </Case>
              <Default>
                <Set>SucFlg=N</Set>
                <Exec func="PUB:UpdateRecord" error="IGNORE">
                  <Arg name="TblNam" value="pfaclrjnl"/>
                  <Arg name="CndSts" value="UpdClrJnl"/>
                </Exec>
                <If condition="~RetCod=-1">
                  <Exec func="PUB:Unlock">
                    <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                  </Exec>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=修改流水表异常</Set>
                  <Return/>
                </If>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                </Exec>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=$HRspCd</Set>
                <Set>RspMsg=主机记帐错误</Set>
                <Return/>
              </Default>
            </Switch>
          </If>
<!--更新清算记录表-->
          <If condition="IS_EQUAL_STRING($SucFlg,Y)">
            <Exec func="PUB:ExecSql" error="IGNORE">
              <Arg name="sqlname" value="UpdClrRec"/>
            </Exec>
            <If condition="~RetCod!=0">
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=数据库错误</Set>
              <Return/>
            </If>
          </If>
        </If>
        <Set>ClrSts=3</Set>
      </If>
      <Else>  <!--人行清算失败-->
        <Set>ClrSts=4</Set>
      </Else>
<!--更新支付令为财政清算结果-->
      <If condition="IS_EQUAL_STRING($SucFlg,Y)">
        <Exec func="PUB:ExecSql" error="IGNORE">
          <Arg name="sqlname" value="UpdVchBok"/>
        </Exec>
        <If condition="~RetCod!=0">
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=数据库错误</Set>
          <Return/>
        </If>
<!--更新明细-->
        <Exec func="PUB:nGetPubSeqNo">
          <Arg name="SeqNam" value="PfaVchDtl:DtlIdx"/>
          <Arg name="SeqCnt" value="$TotNum"/>
          <Arg name="Len"    value="6"/>
          <Arg name="CycCnd" value="Y"/>
        </Exec>
        <Set>SelVal=SUB($SelVal,1)</Set>
        <Exec func="PUB:ExecSql" error="IGNORE">
          <Arg name="sqlname" value="UpdVchDtl"/>
        </Exec>
        <If condition="~RetCod!=0">
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=数据库错误</Set>
          <Return/>
        </If>
      </If>
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
      <Return/>
    </FlowCtrl>
  </Transaction>
<!--客户帐务类交易-->
<!--客户帐务类交易-->
<!--客户帐务类交易-->
<!--客户帐务类交易-->
<!--客户帐务类交易-->
  <Transaction code="461011" desc="出售凭证交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=045120</Set>
      <Set>PinMsg=STRCAT($VchTyp,$VchNo,$UdwDat,$Pin)</Set>
      <Exec func="PFA:GenPrvData">
        <Arg name="FeeTyp" value="FeeTyp" desc="凭证收费类型"/>
        <Arg name="ActNo"  value="ActNo"  desc="申请人帐号"/>
        <Arg name="PayAct" value="PayAct" desc="付费人帐号"/>
        <Arg name="CshNo"  value="CshNo"  desc="现金分析号"/>
        <Arg name="PinMsg" value="PinMsg" desc="补充字段"/>
        <Arg name="RecNum" value="RecNum" desc="笔数"/>
        <Arg name="GrpNam" value="Rec"    desc="帐务循环体"/>
      </Exec>
      <Exec func="PFA:GenHostGroupFilData">
        <Arg name="RecNum" value="$RecNum" desc="记录数"/>
        <Arg name="MaxRec" value="10"  desc="最大笔数"/>
      </Exec>
      <Quote name="ProOutBok"/>
      <Set>OLogNo=$LogNo</Set>
      <Set>ActSts=2</Set>
      <Exec func="PUB:ExecSql">
        <Arg name="sql" value="UpdTxnJnl"/>
      </Exec>
      <Set>VchSts=2</Set>
      <Set>DtlSts=2</Set>
      <Quote name="ProUpdVchBok"/>  <!--修改支付令状态为"2-使用"-->
      <Quote name="ProUpdVchDtl"/>  <!--修改支付令状态为"2-使用"-->
    </FlowCtrl>
  </Transaction>


  <Transaction code="461019" desc="出售凭证抹帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=045129</Set>
      <Set>TIATyp=C</Set>
      <Quote name="ProOutCan"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461021" desc="现金付款交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>HTxnCd=101200</Set>
      <Exec func="PFA:GenPrvData">
        <Arg name="DchTyp" value="DchTyp" desc="支取方式"/>
        <Arg name="PayAct" value="PayAct" desc="付费人帐号"/>
        <Arg name="CcyCod" value="CcyCod" desc="币种"/>
        <Arg name="RecNum" value="RecNum" desc="笔数"/>
        <Arg name="GrpNam" value="Rec"    desc="数据结构"/>
      </Exec>
      <Quote name="ProOutBok"/>
      <Set>OLogNo=$LogNo</Set>
      <Set>ActSts=2</Set>
      <Exec func="PUB:ExecSql">
        <Arg name="sql" value="UpdTxnJnl"/>
      </Exec>
      <Set>VchSts=2</Set>
      <Set>DtlSts=2</Set>
      <Quote name="ProUpdVchBok"/>  <!--修改支付令状态为"2-使用"-->
      <Quote name="ProUpdVchDtl"/>  <!--修改支付令状态为"2-使用"-->
    </FlowCtrl>
  </Transaction>


  <Transaction code="461029" desc="现金付款抹帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=101209</Set>
      <Set>TIATyp=C</Set>
      <Quote name="ProOutCan"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461031" desc="转账付款交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl desc="">
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=101300</Set>
      <Exec func="PFA:GenPrvData">
        <Arg name="UdwDat" value="UdwDat" desc="签发日期"/>
        <Arg name="Pin"    value="Pin"    desc="支付密码"/>
      </Exec>
      <Quote name="ProOutBok"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461037" desc="转账付款复核">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=101307</Set>
      <Quote name="ProOutChk"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461039" desc="转账付款抹帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=101309</Set>
      <Set>TIATyp=C</Set>
      <Quote name="ProOutCan"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461061" desc="联行往帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
<!--
      <Exec func="PUB:AddAuthReason">
        <Arg name="AthCod" value="40"/>
        <Arg name="AthMsg" value="FR1010"/>
      </Exec>
      <Exec func="PUB:CheckLocalAuth">
        <Arg name="ObjSvr" value="SHSTPUB1"/>
      </Exec>
-->
      <Set>HTxnCd=321200</Set>
      <Exec func="PFA:GenPrvData"> 
        <Arg name="Args" value="PayKnd" desc="支付方式"/>
        <Arg name="Args" value="VchTyp" desc="结算凭证种类"/>
        <Arg name="Args" value="VchNo"  desc="结算凭证编号"/>
        <Arg name="Args" value="UdwDat" desc="签发日期"/>
        <Arg name="Args" value="BnkCd1" desc="付款人行号"/>
        <Arg name="Args" value="BnkNm1" desc="付款人行名"/>
        <Arg name="Args" value="ActNo1" desc="付款人帐号"/>
        <Arg name="Args" value="CclCd1" desc="销账编号"/>
        <Arg name="Args" value="ActNm1" desc="付款单位名称"/>
        <Arg name="Args" value="ActNo2" desc="原付款帐号"/>
        <Arg name="Args" value="ActNm2" desc="原付款名称"/>
        <Arg name="Args" value="BnkCd2" desc="接收行行号"/>
        <Arg name="Args" value="RitChl" desc="汇款线路"/>
        <Arg name="Args" value="BnkNm2" desc="接收行行名"/>
        <Arg name="Args" value="ActNo3" desc="转入帐号"/>
        <Arg name="Args" value="ActNm3" desc="转入户名"/>
        <Arg name="Args" value="CcyCod" desc="货币类型"/>
        <Arg name="Args" value="TxnAmt" desc="金额"/>
        <Arg name="Args" value="Pin"    desc="支付密码"/>
        <Arg name="Args" value="ActNo4" desc="付费帐号"/>
        <Arg name="Args" value="CclCd3" desc="销账编号"/>
        <Arg name="Args" value="PriFlg" desc="加急标志"/>
        <Arg name="Args" value="FeeFlg" desc="收费标志"/>
        <Arg name="Args" value="NChFlg" desc="无兑换手续费标志"/>
        <Arg name="Args" value="FeeCd1" desc="手续费代码"/>
        <Arg name="Args" value="FeeCd2" desc="邮电费代码"/>
        <Arg name="Args" value="Amt1"   desc="手续费"/>
        <Arg name="Args" value="Amt2"   desc="手续费"/>
        <Arg name="Args" value="Amt3"   desc="手续费"/>
        <Arg name="Args" value="Amt4"   desc="手续费"/>
        <Arg name="Args" value="Amt5"   desc="手续费"/>
        <Arg name="Args" value="Amt6"   desc="手续费"/>
        <Arg name="Args" value="PpsCod" desc="用途码"/>
        <Arg name="Args" value="Pps"    desc="用途"/>
        <Arg name="Args" value="HngFlg" desc="是否挂帐"/>
        <Arg name="Args" value="ActNm4" desc="收款人名称1"/>
        <Arg name="Args" value="InbCd"  desc="转入分行"/>
      </Exec>
      <Quote name="ProOutBok"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461067" desc="联行往帐复核">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=321207</Set>
      <Quote name="ProOutChk"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461069" desc="联行往帐抹帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=321209</Set>
      <Set>TIATyp=C</Set>
      <Quote name="ProOutCan"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461071" desc="支付系统往帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>CMTCod=CMT100</Set>
      <Set>PayRet=0</Set>
      <Set>HTxnCd=351110</Set>
      <Set>ActSts2=2</Set>
      <Set>ROpnBk=$RBkNo</Set>
      <Exec func="PFA:GenPrvData">
        <Arg name="BchFlg"  value="BchFlg"  desc="报文种类"/>  
        <Arg name="RpdFlg"  value="RpdFlg"  desc="报文优先级"/>
        <Arg name="CcyCod"  value="CcyCod"  desc="币种"/>      
        <Arg name="PMBTyp"  value="PMBTyp"  desc="业务种类"/>  
        <Arg name="ActNo"   value="ActNo"   desc="记帐帐号"/>  
        <Arg name="CclNo"   value="CclNo"   desc="销帐号"/>    
        <Arg name="ActNam"  value="ActNam"  desc="记帐户名"/>  
        <Arg name="SndAct"  value="SndAct"  desc="发起人帐号"/>
        <Arg name="SndNam"  value="SndNam"  desc="发起人户名"/>
        <Arg name="SndAdr"  value="SndAdr"  desc="发起人地址"/>
        <Arg name="SOpnBk"  value="SOpnBk"  desc="发起行行号"/>
        <Arg name="TxnAmt"  value="TxnAmt"  desc="交易金额"/>  
        <Arg name="RcvAct"  value="RcvAct"  desc="接收人帐号"/>
        <Arg name="RcvNam"  value="RcvNam"  desc="接收人户名"/>
        <Arg name="RcvAdr"  value="RcvAdr"  desc="接收人地址"/>
        <Arg name="RBkNo"   value="RBkNo"   desc="接收人行号"/>
        <Arg name="ROpnBk"  value="ROpnBk"  desc="接收人开户行号"/>
        <Arg name="RBkNam"  value="RBkNam"  desc="接收行行名"/>
        <Arg name="Smr"     value="Smr"     desc="摘要"/>      
        <Arg name="VchTyp"  value="VchTyp"  desc="凭证类型"/>  
        <Arg name="VchNo"   value="VchNo"   desc="凭证号码"/>  
        <Arg name="BilDat"  value="BilDat"  desc="签发日期"/>  
        <Arg name="PmtPwd"  value="PmtPwd"  desc="支付密码"/>  
        <Arg name="FeeTyp"  value="FeeTyp"  desc="收费方式"/>  
        <Arg name="RemFee"  value="RemFee"  desc="电子汇划费"/>
        <Arg name="Fee"     value="Fee"     desc="手续费"/>    
        <Arg name="Fee1"    value="Fee1"    desc="手续费"/>    
        <Arg name="RemFee1" value="RemFee1" desc="电子汇划费"/>
      </Exec>              
      <Quote name="ProOutBok"/>
    </FlowCtrl>
  </Transaction>



  <Transaction code="461077" desc="支付系统往帐复核交易">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="QryOJnlDat">          <!--更新流水表第三方状态-->
      <Sentence>
        select HLogNo HstTrc, TckNo BusLog, PrvDat, PfaSub, AVchNo, AVchCd from pfatxnjnl where LogNo='%s' and ActSts='1'
      </Sentence>
      <Fields>OLogNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdJnlThdSts">          <!--更新流水表第三方状态-->
      <Sentence>
        update pfatxnjnl set TTxnSt='%s',TRspCd='%s',ActSts='%s' where LogNo='%s' and ActSts='1'
      </Sentence>
      <Fields>TTxnSt|TRspCd|ActSts|OLogNo|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Exec func="PUB:ReadRecord">
        <Args>
          <Arg name="SqlCmd" value="QryOJnlDat"/>
        </Args>
      </Exec>
<!--调用支付发送函数-->
      <Set>PayRet=0</Set>
      <Set>TckNo=$BusLog</Set>
      <Exec func="PFA:ParsePrvData">
        <Arg name="Args" value="PrvDat"/>
      </Exec>
      <Exec func="PUB:CallLocal" error="IGNORE">
        <Arg name="TxnCod" value="359210"/>
        <Arg name="ObjSvr" value="OFRTPMS1"/>
      </Exec>
      <If condition="~RetCod&lt;0">   <!--超时-->
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>TRspCd=341795</Set>
        <Set>RspMsg=支付交易通讯超时,请抹账</Set>
        <Set>TTxnSt=T</Set>
        <Set>ActSts=1</Set>
      </If>
      <Else>
        <If condition="~RetCod&gt;0"> <!--支付错误-->
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>TRspCd=341796</Set>
          <Set>RspMsg=支付交易错误，请查询大额往账登记表状态</Set>
          <Set>TTxnSt=F</Set>
          <Set>ActSts=1</Set>
        </If>
        <Else> <!--成功-->
          <Set>OIFlag=O</Set>
          <Set>MsgTyp=N</Set>
          <Set>RspCod=000000</Set>
          <Set>TRspCd=000000</Set>
          <Set>RspMsg=复核成功</Set>
          <Set>VchSts=2</Set>
          <Set>DtlSts=2</Set>
          <Quote name="ProUpdVchBok"/>  <!--修改支付令状态为"2-使用"-->
          <Quote name="ProUpdVchDtl"/>  <!--修改支付令状态为"2-使用"-->
          <Set>TTxnSt=S</Set>
          <Set>ActSts=2</Set>
        </Else>
      </Else>
      <Exec func="PUB:ExecSql">
        <Arg name="sql" value="UpdJnlThdSts"/>
      </Exec>
    </FlowCtrl>
  </Transaction>



  <Transaction code="461079" desc="支付系统往帐抹帐交易">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="QryPmsAccBok">
      <Sentence>
        select BilSts from pmsaccbok where ActDat='%s' and BusLog='%s' and OIFlag='0'
      </Sentence>
      <Fields>ActDat|BusLog|</Fields>
    </DynSentence>
    <DynSentence name="UpdPmsAccBok">
      <Sentence>
        Update pmsaccbok Set BilSts='H' where ActDat='%s' and BusLog='%s' and OIFlag='0'
      </Sentence>
      <Fields>ActDat|BusLog|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
<!--获取原流水中的会计流水号，作为支付的BusLog-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Arg name="sql" value="GetTxnJnl"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库查询失败</Set>
        <Return/>
      </If>
<!--根据BusLog查询支付流水的状态-->
      <Set>BusLog=$OTckNo</Set>
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Arg name="sql" value="QryPmsAccBok"/>
      </Exec>
      <If condition="~RetCod=-1">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=数据库查询失败</Set>
        <Return/>
      </If>
      <If condition="~RetCod=0">
        <If condition="AND(IS_NOEQUAL_STRING($BilSts,B),IS_NOEQUAL_STRING($BilSts,H))">
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=该交易支付往帐登记表状态不符合抹帐条件</Set>
          <Return/>
        </If>
        <Exec func="PUB:ExecSql"> <!--更新支付登记表为已抹帐-->
          <Arg name="sql" value="UpdPmsAccBok"/>
        </Exec>
        <If condition="~RetCod!=0">
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=更新支付登记簿失败</Set>
          <Return/>
        </If>
      </If>
<!--支付登记表中没有记录(即在支付令确认后发生抹帐或更新状态成功均上主机抹帐-->
      <Set>TIATyp=C</Set>
      <Set>HTxnCd=351119</Set>
      <Quote name="ProOutCan"/>
    </FlowCtrl>
  </Transaction>



  <Transaction code="461091" desc="其他挂帐付款交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>HpcFlg=1</Set>     <!--挂帐标志：1付款0收款，非挂帐不要-->
      <Set>HTxnCd=091010</Set>
      <Exec func="PFA:GenPrvData">
        <Arg name="CclTyp" value="CclTyp" desc="挂帐类型"/>
        <Arg name="CclAct" value="CclAct" desc="销帐帐号"/>
        <Arg name="CclNo"  value="CclNo"  desc="销帐号"/>
        <Arg name="CclSqn" value="CclSqn" desc="销帐序号"/>
        <Arg name="UdwDat" value="UdwDat" desc="签发日期"/>
        <Arg name="Pin"    value="Pin"    desc="支付密码"/>
      </Exec>
      <Quote name="ProOutBok"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461097" desc="其他挂帐付款复核交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>HTxnCd=091017</Set>
      <Set>CcyCod=CNY</Set>
      <Set>HpcFlg=1</Set>     <!--挂帐标志：1付款0收款，非挂帐不要-->
      <Quote name="ProOutChk"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461099" desc="其他挂帐付款抹帐交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>TIATyp=C</Set>
      <Set>HTxnCd=091019</Set>
      <Set>CcyCod=CNY</Set>
      <Set>HpcFlg=1</Set>     <!--挂帐标志：1付款0收款，非挂帐不要-->
      <Quote name="ProOutCan"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461111" desc="现金收款交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>HTxnCd=101100</Set>
      <Exec func="PFA:GenPrvData"> <!-- 交易特性部分 -->
        <Arg name="DchTyp" value="DchTyp"/>
        <Arg name="CcyCod" value="CcyCod"/>
        <Arg name="RecNum" value="RecNum"/>
        <Arg name="GrpNam" value="REC"/>
      </Exec>
      <Quote name="ProInBok"/>
      <Quote name="ProAddBal"/>  <!--加回支付额度-->
      <Set>OLogNo=$LogNo</Set>
      <Set>ActSts=2</Set>
      <Set>TTxnSt=S</Set>
      <Exec func="PUB:ExecSql">
        <Arg name="sql" value="UpdTxnJnl"/>
      </Exec>
      <Set>VchSts=2</Set>
      <Set>DtlSts=2</Set>
      <Quote name="ProUpdVchBok"/>  <!--修改支付令状态为"2-使用"-->
      <Quote name="ProUpdVchDtl"/>  <!--修改支付令状态为"2-使用"-->
    </FlowCtrl>
  </Transaction>


  <Transaction code="461119" desc="现金收款抹帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=101109</Set>
      <Set>TIATyp=C</Set>
      <Quote name="ProInCan"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461131" desc="其他挂帐收款记帐交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl desc="">
      <Quote name="AccInitTran"/>
      <Set>HpcFlg=0</Set>
      <Set>HTxnCd=091010</Set>
      <Exec func="PFA:GenPrvData">
        <Arg name="CclTyp" value="CclTyp" desc="挂帐类型"/>
        <Arg name="CclAct" value="CclAct" desc="销帐帐号"/>
        <Arg name="CclNo"  value="CclNo"  desc="销帐号"/>
        <Arg name="CclSqn" value="CclSqn" desc="销帐序号"/>
        <Arg name="UdwDat" value="UdwDat" desc="签发日期"/>
        <Arg name="Pin"    value="Pin"    desc="支付密码"/>
      </Exec>
      <Quote name="ProInBok"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461137" desc="其他挂帐收款复核交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>HTxnCd=091017</Set>
      <Set>CcyCod=CNY</Set>
      <Set>HpcFlg=0</Set>     <!--挂帐标志：1付款0收款，非挂帐不要-->
      <Quote name="ProInChk"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461139" desc="其他挂帐收款抹帐交易">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Set>TIATyp=C</Set>
      <Set>HTxnCd=091019</Set>
      <Set>CcyCod=CNY</Set>
      <Set>HpcFlg=0</Set>     <!--挂帐标志：1付款0收款，非挂帐不要-->
      <Quote name="ProInCan"/>
    </FlowCtrl>
  </Transaction>
<!--文件接收交易-->
<!--文件接收交易-->
<!--文件接收交易-->
<!--文件接收交易-->
<!--文件接收交易-->
  <Transaction code="461066" desc="文件接收" timeout="300">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="ChkExist">
      <Sentence>
        select 'Y' YN FROM TABLE(VALUES(1)) AS anony where EXISTS ( select 'Y' from %s where %s )
      </Sentence>
      <Fields>TblNam|SqlStr|</Fields>
    </DynSentence>
    <DynSentence name="GetCrdTxn">     <!--根据索引号获取资料-->
      <Sentence>
        select TxnTim, MerId, TermId, MerNam, DtlAmt, CcyCod, ThdCod, AuthCd, Year, BCusId
          from pfacrdtxn where PfaSub='%s' and Year=substr('%s',1,4) and IdxNo='%s'
      </Sentence>
      <Fields>PfaSub|TxnDat|IdxNo|</Fields>
    </DynSentence>
    <DynSentence name="GetQuoInf">     <!--根据额度ID获取资料-->
      <Sentence>
        select 'Y' YN FROM TABLE(VALUES(1)) AS anony where EXISTS 
        ( select 'Y' from pfaquobok001
           where substr('%s',1,4) and Bcusid='%s' and QuoId='%s' and SubCod='%s' and PrjCod='%s' and DptCod='%s' )
      </Sentence>
      <Fields>ActDat|BCusId|QuoId|SubCod|PrjCod|DptCod|</Fields>
    </DynSentence>

    <Attributes>
      <Attribute name="nodatabase" value="2"/>  <!--设置数据库全程连接-->
    </Attributes>
    <FlowCtrl>
			<Set>NodNo=441800</Set>
      <Quote name="InitTran"/>
      <Quote name="ChkSubCfg"/>
      <Set>BrNo=$AgtBr</Set>
      <Set>TxnCnl=PFA</Set>
      <Exec func="PUB:GetVirtualTeller"/>
      <Set>RegId=$TlrId</Set>
<!--设置调整凭证标志初始状态-->
      <Set>DoFlag=0</Set>
<!--获取列表文件-->
      <Set>PfaDir=$PfaIDir</Set>
      <Set>IcsDir=$IcsIDir</Set>
      <Set>PfaFil=$PfaLst</Set>
      <Set>IcsFil=STRCAT($PfaLst,GETDATETIME(YYYYMMDDHHMISS))</Set>
      <Exec func="PUB:FtpGet">
        <Arg name="FtpId" value="PFA001"/>
      </Exec>
<!--根据列表文件获取具体文件-->
      <System command="PfaFilDo.sh">
        <Arg name="IpAdr"   value="$PfaIp"  />
        <Arg name="ActDat"  value="$ActDat"/>
        <Arg name="PfaUsr"  value="$PfaUsr"/>
        <Arg name="PfaPwd"  value="$PfaPwd"/>
        <Arg name="PfaIDir" value="$PfaIDir"/>
        <Arg name="PfaODir" value="$PfaODir"/>
        <Arg name="IcsDir"  value="$IcsIDir"/>
        <Arg name="DatFil"  value="$IcsFil"/>
        <Arg name="MODE"    value="0"       />
      </System>
      <If condition="~RetCod!=0">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=获取PFA明细数据文件出错或信息数据文件不存在</Set>
        <Return/>
      </If>
<!--明细文件入库-->
      <Set>LstFil=STRCAT( $IcsIDir,/,$IcsFil )</Set>
      <Exec func="PUB:OpenFile">
        <Arg name="FileName"   value="$LstFil"/>
        <Arg name="Mode"       value="r"/>
        <Arg name="ObjectName" value="LstFilNam"/>
      </Exec>
      <While>
        <Delete>DatFNm</Delete>
        <Exec func="PUB:GetFileLine" error="IGNORE">
          <Arg name="FieldName" value="DatFNm"/>
          <Arg name="ObjectName" value="LstFilNam"/>
        </Exec>
        <If condition="~RetCod=1">  <!--读到文件尾-->
          <Exec func="PUB:CloseFile">
            <Arg name="ObjectName" value="LstFilNam"/>
          </Exec>
          <Set>MsgTyp=N</Set>
          <Set>RspCod=000000</Set>
          <Set>RspMsg=交易成功</Set>
          <Return/>
        </If>
<!--分解文件名的组成-->
        <Set>DatFNm=SUBSTR($DatFNm,1,26)</Set>
        <Set>TblNam=SUBSTR($DatFNm,1,9)</Set>
        <Set>PfaSub=SUBSTR($DatFNm,10,3)</Set>
        <Set>DatFil=STRCAT(GETENV(WORKDIR),/,$IcsIDir,/,$DatFNm)</Set>
        <Exec func="PUB:IsValidFile" error="IGNORE">
          <Arg name="FileName" value="STRCAT($IcsIDir,/,$DatFNm)"/>
        </Exec>
<!--单个文件不合法时，跳过该文件的处理，继续下一文件-->
        <If condition="OR( INTCMP($FilByt,3,0), INTCMP(~RetCod,4,0) )">
          <Set>RspMsg=STRCAT(文件【,$DatFNm,】字节数为0或数据文件不完整)</Set>
          <Continue/>
        </If>
        <If condition="INTCMP($FilByt,4,GETFILESIZE($DatFil))">
          <Set>RspMsg=STRCAT(文件【,$DatFil,】字节数为0或数据文件不完整)</Set>
          <Continue/>
        </If>
<!--明细文件处理-->
        <Exec func="PUB:OpenFile">
          <Arg name="FileName"   value="$DatFil"/>
          <Arg name="Mode"       value="r"/>
          <Arg name="ObjectName" value="DatFilNam"/>
        </Exec>
        <Exec func="PUB:InitDataParser">
          <Arg name="ConfigName" value="BatFormat"/>
          <Arg name="RootName"   value="BATCH"/>
        </Exec>
<!--设置成功结束标志，用于清理数据文件的标志-->
        <Set>EndFlg=0</Set>
        <While>
          <Exec func="PUB:GetFileLineAndParse" error="IGNORE">
            <Arg name="ConfigName" value="BatFormat"/>
            <Arg name="RootName"   value="BATCH"/>
            <Arg name="NodeName"   value="Process"/>
            <Arg name="AttrName"   value="name"/>
            <Arg name="AttrValue"  value="TOLOWER($TblNam)"/>
            <Arg name="MaxLen"     value="100000"/>
            <Arg name="ObjectName" value="DatFilNam"/>
          </Exec>
<!--只要处理出错或完成，均继续下一处理-->
          <If condition="~RetCod!=0">
            <If condition="~RetCod=-1"> <!--处理完成-->
              <Set>EndFlg=1</Set>
            </If>
            <Exec func="PUB:CloseFile">
              <Arg name="ObjectName" value="DatFilNam"/>
            </Exec>
            <Break/>
          </If>
<!--判断是否存在重复记录，并忽略重复记录-->
          <Switch expression="TOLOWER($TblNam)">
            <Case value="pfasubinf"/> <!-- 科目代码表 -->
            <Case value="pfaecninf"/> <!-- 经济分类代码表 -->
            <Case value="pfaprjinf"/> <!-- 项目代码表 -->
            <Case value="pfadptinf"/> <!-- 处室代码表 -->
            <Case value="pfapayinf"> <!-- 支出类型表 -->
              <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and CodTyp=',$CodTyp,' and Code=',$Code,' )</Set>
              <Set>OTblNm=$TblNam</Set>
              <Set>TblNam=pfacodinf</Set>
              <Break/>
            </Case>
            <Case value="pfacusinf"> <!-- 预算单位信息表 -->
              <Set>OTblNm=$TblNam</Set>
              <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and BCusId=',$BCusId,' )</Set>
              <Break/>
            </Case>
            <Case value="pfaquobok"> <!-- 额度令登记表 -->
              <Set>OTblNm=$TblNam</Set>
              <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and Year=',$Year,' and TSeqNo=',$TSeqNo,' )</Set>
              <Set>TblNam=$QuoBokTbl</Set>
              <Break/>
            </Case>
            <Case value="pfavchdtl"> <!-- 支付令登记表 -->
              <Set>OTblNm=$TblNam</Set>
              <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and Year=',$Year,' and AVchCd=',$AVchCd,' )</Set>
              <If condition="IS_EQUAL_STRING($TVchTp,2)">
                <Set>DoFlag=1</Set>
              </If>
              <Set>TblNam=$VchDtlTbl</Set>
              <Break/>
            </Case>
            <Case value="pfacrddtl"> <!-- 消费明细表 -->
              <Set>OTblNm=$TblNam</Set>
              <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and Year=',$Year,' and AVchCd=',$AVchCd,' and PfaIdx=',$PfaIdx,' )</Set>
              <Break/>
            </Case>
            <Default>
              <Exec func="PUB:RollbackWork"/>
              <Exec func="PUB:CloseFile">
                <Arg name="ObjectName" value="DatFilNam"/>
              </Exec>
              <Exec func="PUB:CloseFile">
                <Arg name="ObjectName" value="LstFilNam"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=STRCAT(处理PFA批量数据文件【,$DatFNm,】出错)</Set>
              <Set>EndFlg=1</Set>
              <Break/>
            </Default>
          </Switch>
<!--记录是否存在-->
          <Exec func="PUB:ReadRecord" error="IGNORE">
            <Args>
              <Arg name="SqlCmd" value="ChkExist"/>
            </Args>
          </Exec>
          <If condition="~RetCod=-1">
            <Exec func="PUB:RollbackWork" error="IGNORE"/>
            <Exec func="PUB:CloseFile">
              <Arg name="ObjectName" value="DatFilNam"/>
            </Exec>
            <Set>RspMsg=STRCAT(查询数据表【,$TblNam,】失败)</Set>
            <Break/>
          </If>
          <If condition="~RetCod=0">
            <Set>RspMsg=记录重复</Set>
            <Set>TblNam=$OTblNm</Set>
            <Continue/>
          </If>
<!--贷记卡还款要获取原消费信息-->
          <If condition="IS_EQUAL_STRING(TOLOWER($TblNam),pfacrddtl)">
            <Exec func="PUB:ReadRecord" error="IGNORE">
              <Args>
                <Arg name="SqlCmd" value="GetCrdTxn"/>
              </Args>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Exec func="PUB:CloseFile">
                <Arg name="ObjectName" value="DatFilNam"/>
              </Exec>
              <Set>RspMsg=STRCAT(查询数据表【,$TblNam,】失败)</Set>
              <Break/>
            </If>
          </If>
<!--支付令要核对额度令对应信息-->
          <If condition="IS_EQUAL_STRING(TOLOWER($TblNam),pfavchdtl)">
            <Exec func="PUB:ReadRecord" error="IGNORE">
              <Args>
                <Arg name="SqlCmd" value="GetQuoInf"/>
              </Args>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Exec func="PUB:CloseFile">
                <Arg name="ObjectName" value="DatFilNam"/>
              </Exec>
              <Set>RspMsg=STRCAT(检查额度令失败)</Set>
              <Break/>
            </If>
          	<If condition="~RetCod=-2">
							<Set>DtlSts=4</Set>
							<Set>UseAmt=000000000000000</Set>
							<Set>RefCod=7</Set>
							<Set>PfaDat=$ActDat</Set>
							<Set>ClrSts=3</Set>
		          <Exec func="PUB:nGetPubSeqNo">
		            <Arg name="SeqNam" value="PfaVchDtl:DtlIdx"/>
		            <Arg name="SeqCnt" value="1"/>
		            <Arg name="Len"    value="6"/>
		            <Arg name="CycCnd" value="Y"/>
		          </Exec>
							<Set>DtlIdx=SUB($SelVal,1)</Set>
          	</If>
          </If>
<!--登记各种业务表-->
          <Exec func="PUB:InsertRecord" error="IGNORE">
            <Arg name="TblNam" value="TOLOWER($TblNam)"/>
          </Exec>
          <If condition="~RetCod!=0">
            <Exec func="PUB:RollbackWork"/>
            <Exec func="PUB:CloseFile">
              <Arg name="ObjectName" value="DatFilNam"/>
            </Exec>
            <Set>RspMsg=STRCAT(插入数据表【,$TblNam,】失败)</Set>
            <Set>EndFlg=1</Set>
            <Break/>
          </If>
          <Set>TblNam=$OTblNm</Set>
        </While>  <!--处理完成一个数据文件-->
<!--删除文件-->
        <If condition="IS_EQUAL_STRING($EndFlg,0)">
          <Exec func="PUB:CommitWork"/>
          <System command="PfaFilDo.sh">
            <Arg name="IpAdr"   value="$PfaIp"  />
            <Arg name="ActDat"  value="$ActDat"/>
            <Arg name="PfaUsr"  value="$PfaUsr"/>
            <Arg name="PfaPwd"  value="$PfaPwd"/>
            <Arg name="PfaIDir" value="$PfaIDir"/>
            <Arg name="PfaODir" value="$PfaODir"/>
            <Arg name="IcsDir"  value="$IcsIDir"/>
            <Arg name="DatFil"  value="$DatFNm"/>
            <Arg name="MODE"    value="1"       />
          </System>
          <If condition="~RetCod!=0">
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RspMsg=处理PFA批量数据回应文件出错</Set>
            <Return/>
          </If>
        </If>
      </While>  <!--处理完成整个列表-->
<!--调整交易-->
      <If condition="IS_EQUAL_STRING($DoFlag,1)">
      </If>
      <Set>MsgTye=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=交易成功</Set>
      <Return/>
    </FlowCtrl>
  </Transaction>
<!--公务卡交易-->
<!--公务卡交易-->
<!--公务卡交易-->
<!--公务卡交易-->
<!--公务卡交易-->
  <Transaction code="461172" desc="公务卡批量还款">
    <Quote name="PfaSqlLst"/>
    <Attributes>
      <Attribute name="nodatabase" value="2"/>  <!--设置数据库全程连接-->
    </Attributes>
    <FlowCtrl>
      <Quote name="InitTran"/>
<!--检查还款支付令状态-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="GetDtlByAVchCd"/>
        </Args>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】不存在或数据库操作失败)</Set>
        <Return/>
      </If>
      <If condition="IS_NOEQUAL_STRING($DtlSts,2)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(财政【,$PfaSub,】支付令【,$AVchCd,】处理未完成)</Set>
        <Return/>
      </If>
      <If condition="INTCMP($TotAmt,4,$UseAmt)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(报销金额与支付令金额不符【,AMTFMT($TotAmt),】【,AMTFMT($UseAmt),】)</Set>
        <Return/>
      </If>
<!--检查交易明细金额是否相等-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Arg name="SqlCmd" value="ChkCrdDtl"/>
      </Exec>
      <If condition="INTCMP($TotAmt,4,$Amt)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(报销金额与财厅确认金额不符【,AMTFMT($TotAmt),】【,AMTFMT($Amt),】)</Set>
        <Return/>
      </If>
      <Delete>DtlAmt</Delete>   <!--字段冲突-->
      <Set>DtlSts=B</Set>
      <Set>BokDat=$ActDat</Set>
      <Exec func="PUB:UpdateRecord" error="IGNORE">
        <Arg name="TblNam" value="pfacrddtl"/>
        <Arg name="CndSts" value="UpdCrdDtl"/>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Exec func="PUB:RollbackWork" error="IGNORE"/>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=更新消费记录还款状态错</Set>
        <Return/>
      </If>
<!--采用电子柜员记帐-->
<!--
      <Set>TxnCnl=PFA</Set>
      <Exec func="PUB:GetVirtualTeller"/>
-->
<!--定义游标生成报销记录并提交主机记帐-->
      <Exec func="PUB:OpenCursor" error="IGNORE">
        <Arg name="sql" value="GetCrdDtl"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=打开游标出错</Set>
        <Return/>
      </If>
      <While>
        <Exec func="PUB:FetchCursor" error="IGNORE"/>
        <If condition="~RetCod=100">
          <Break/>
        </If>
        <Exec func="PUB:GetLogNo"/>
        <Exec func="PUB:InsertRecord">
          <Arg name="TblNam" value="pfacrdjnl"/>
        </Exec>
        <Exec func="PUB:CallHostAcc" error="IGNORE">
          <Arg name="TxnCod" value="171140"/>
          <Arg name="ObjSvr" value="SHSTPUB1"/>
        </Exec>
        <Switch expression="~RetCod">
          <Case value="-1">
            <Set>TxnSts=T</Set>
            <Break/>
          </Case>
          <Case value="0">
            <Set>TxnSts=S</Set>
            <Set>HTxnSt=S</Set>
            <Break/>
          </Case>
          <Default>
            <Set>TxnSts=F</Set>
            <Set>HTxnSt=F</Set>
            <Break/>
          </Default>
        </Switch>
        <Set>DtlSts=$TxnSts</Set>
        <Delete>TxnDat</Delete>   <!--字段冲突-->
        <Exec func="PUB:UpdateRecord">
          <Arg name="TblNam" value="pfacrdjnl"/>
          <Arg name="CndSts" value="UpdCrdJnl"/>
        </Exec>
        <Exec func="PUB:UpdateRecord">
          <Arg name="TblNam" value="pfacrddtl"/>
          <Arg name="CndSts" value="UpdCrdDtlByCardNo"/>
        </Exec>
        <Exec func="PUB:CommitWork"/>
      </While>
      <Exec func="PUB:CloseCursor" error="IGNORE"/>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
    </FlowCtrl>
  </Transaction>
<!--代理业务交易-->
<!--代理业务交易-->
<!--代理业务交易-->
<!--代理业务交易-->
<!--代理业务交易-->
  <Transaction code="461181" desc="财政电子渠道付款记账">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/>
      <Quote name="ChkSubCfg"/>
<!--对支付信息加锁，避免并发-->
      <While>
        <Exec func="PUB:Lock" error="INGORE">
          <Arg name="RecKey" value="STRCAT(PFA,$PfaSub,$BCusId)"/>
          <Arg name="AutoUnlock" value="yes"/>
        </Exec>
        <If condition="INTCMP(~RetCod,3,0)">
          <Break/>
        </If>
        <Else>
          <Exec func="PUB:Sleep"/>
        </Else>
      </While>
<!--检查流水号是否正常-->
      <Set>OLogNo=$LogNo</Set>
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Arg name="sql" value="GetTxnJnl"/>
      </Exec>
      <Switch expression="~RetCod">
        <Case value="0">
          <Quote name="ProJnlChk"/>
          <Break/>
        </Case>
        <Case value="-2">
          <Break/>
        </Case>
        <Default>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=STRCAT(获取流水【,$OLogNo,】数据库操作失败)</Set>
          <Return/>
        </Default>
      </Switch>
<!--检查是否存在对应电子限额支付令-->
      <Set>StsNam=DtlSts</Set>
      <Quote name="GetSqlCol"/>
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Arg name="sql" value="GetDtlByBCusId"/>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=CD5200</Set>
        <Set>RspMsg=STRCAT(客户【,$BCusId,】限额支付令不存在或数据库操作错)</Set>
        <Return/>
      </If>
<!--产生行内支付令号-->
<!--变更【PfaVchDtl】状态-->
<!--登记【PfaVchBok】-->
      <Set>OBrNo=$BrNo</Set>
      <Set>BrNo=$AgtBr</Set>
      <Exec func="PUB:nGetPubSeqNo">
        <Arg name="SeqNam" value="pfavchbok:AVchNo"/>
        <Arg name="SeqCnt" value="1"/>
        <Arg name="Len"    value="8"/>
        <Arg name="CycCnd" value="Y"/>
      </Exec>
      <Set>AVchNo=$SelVal</Set>
      <Set>CrpVch=$AVchNo</Set>
      <Set>BrNo=$OBrNo</Set>
      <Set>DtlSts=U</Set>
      <Set>VchSts=1</Set>
      <Set>ChkFlg=1</Set>
      <Set>OUseAmt=$TxnAmt</Set>
      <Set>Year=SUBSTR($ActDat,1,4)</Set>
      <Set>AVchTm=GETDATETIME(YYYYMMDDHHMISS)</Set>
      <Set>DtlNum=1</Set>
      <Set>ClrSts=0</Set>
      <Set>RtnFlg=0</Set>
      <Exec func="PUB:ExecSql" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="UpdDtlByAVchCd"/>
        </Args>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(支付记录【,$AVchCd,】更新失败)</Set>
        <Return/>
      </If>
      <Exec func="PUB:InsertRecord" error="IGNORE">
        <Arg name="TblNam" value="pfavchbok"/>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Exec func="PUB:RollbackWork" error="IGNORE"/>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(登记【PfaVchBok】表失败)</Set>
        <Return/>
      </If>
      <Quote name="ProThdBok"/>
    </FlowCtrl>
  </Transaction>


  <Transaction code="461189" desc="财政电子渠道付款抹帐">
    <Quote name="PfaSqlLst"/>
    <FlowCtrl>
      <Quote name="AccInitTran"/> <!--根据分行号进行交易初始化-->
      <Set>HTxnCd=451729</Set>
      <Set>TIATyp=C</Set>
      <Quote name="ProThdCan"/>
    </FlowCtrl>
  </Transaction>
<!--公务卡明细补登交易-->
<!--公务卡明细补登交易-->
<!--公务卡明细补登交易-->
<!--公务卡明细补登交易-->
<!--公务卡明细补登交易-->
  <Transaction code="880210" desc="公务卡明细下载">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="GetCrdInf"><!--取卡资料-->
      <Sentence>
        select PfaSub, BCusId, CardNo, CardNm from pfacrdinf where PfaSub='%s' and ( CardNo='%s' or '%s'='' ) 
      </Sentence>
      <Fields>PfaSub|CardNo|CardNo|</Fields>
    </DynSentence>
    <DynSentence name="ChkExist">
      <Sentence>
        select 'Y' YN FROM TABLE(VALUES(1)) AS anony where EXISTS ( select 'Y' from PfaCrdTxn where PfaSub='%s' and CardNo='%s' and TxnDat='%s' )
      </Sentence>
      <Fields>PfaSub|CardNo|QryDat|</Fields>
    </DynSentence>
    <DynSentence name="CntCrdTxn"><!--计算明细总数-->
      <Sentence>
        select count(*) RecNum from pfacrdtxn where PfaSub='%s' and HActDt='%s' and IdxNo=''
      </Sentence>
      <Fields>PfaSub|HActDt|</Fields>
    </DynSentence>
    <DynSentence name="UpdCrdTxn"><!--更新唯一标志-->
      <Sentence>
        update pfacrdtxn set IdxNo=right('000000'||rtrim(char((row_number()over()+%s))),6) where PfaSub='%s' and HActDt='%s' and IdxNo=''
      </Sentence>
      <Fields>SelVal|Pfasub|HActDt|</Fields>
    </DynSentence>
    <Attributes>
      <Attribute name="nodatabase" value="2"/>
    </Attributes>
    <FlowCtrl>
      <Quote name="ChkSubCfg"/>
      <Set>BrNo=$AgtBr</Set>
      <Exec func="PUB:InitTransaction"/>
      <Set>TxnCnl=PFA</Set>
      <Exec func="PUB:GetVirtualTeller"/>
      <Set>SndFlg=0</Set>
      <Set>HActDt=$ActDat</Set>
      <Set>Year=SUBSTR($QryDat,1,4)</Set>
      <Exec func="PUB:Lock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
<!--根据有效卡取明细-->
      <Exec func="PUB:OpenCursor" error="IGNORE">
        <Arg name="sql" value="GetCrdInf"/>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Exec func="PUB:CloseCursor" error="IGNORE"/>
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=打开游标出错</Set>
        <Return/>
      </If>
      <While>
        <Set>TIATyp=T</Set>
        <Delete>BCusId</Delete>
        <Delete>CardNo</Delete>
        <Delete>CardNm</Delete>
        <Exec func="PUB:FetchCursor" error="IGNORE"/>
        <If condition="INTCMP(~RetCod,3,100)">
          <Break/>
        </If>
<!--判断交易明细表中卡号(CardNo)是否已存在(QryDat)日期的数据-->
        <Exec func="PUB:ReadRecord" error="IGNORE">
          <Args>
            <Arg name="SqlCmd" value="ChkExist"/>
          </Args>
        </Exec>
        <If condition="~RetCod=-1">
          <Exec func="PUB:RollbackWork" error="IGNORE"/>
          <Exec func="PUB:CloseCursor" error="IGNORE"/>
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=STRCAT(判断卡号【,$CardNo,】【,$QryDat,】重复交易失败)</Set>
          <Return/>
        </If>
        <If condition="~RetCod=0">  <!--存在，查询下一张卡-->
          <Continue/>
        </If>
<!--发历史库查询交易明细-->
        <Set>ODatLen=0</Set>
        <While>
          <Exec func="PUB:DeleteGroup">
            <Arg name="GroupName" value="Rec"/>
          </Exec>
          <If condition="IS_EQUAL_STRING($TIATyp,P)">
            <Set>PagIdx=080000</Set>
          </If>
          <Exec func="PUB:CallHostOther" error="IGNORE">
            <Arg name="TTxnCd" value="880210"/>
            <Arg name="ObjSvr" value="STHDHIS1"/>
          </Exec>
          <If condition="INTCMP(~RetCod,3,0)">
            <Exec func="PUB:InsertRecord" error="IGNORE">
              <Arg name="TblNam" value="pfacrdtxn"/>
              <Arg name="GrpNam" value="Rec"/>
              <Arg name="FldLst" value="PfaSub|BCusId|CardNo|CardNm|HActDt|Year|SndFlg|"/>
            </Exec>
            <If condition="INTCMP(~RetCod,4,0)">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Exec func="PUB:CloseCursor" error="IGNORE"/>
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
              </Exec>
              <Set>MsgTyp=E</Set>
              <Set>RspCod=PFA999</Set>
              <Set>RspMsg=查询明细错误</Set>
              <Return/>
            </If>
            <If condition="INTCMP($DatLen,5,$ODatLen)">
              <Set>TIATyp=P</Set>
              <Set>ODatLen=$DatLen</Set>
            </If>
            <Else>
              <Break/>
            </Else>
          </If>
          <Else>
            <Break/>
          </Else>
        </While>
      </While>
      <Exec func="PUB:CloseCursor" error="IGNORE"/>
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Arg name="SqlCmd" value="CntCrdTxn"/>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Exec func="PUB:RollbackWork" error="IGNORE"/>
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=STRCAT(计算交易日【,$HActDt,】明细总数错误)</Set>
        <Return/>
      </If>
      <If condition="INTCMP($RecNum,6,0)">
        <Set>ActDat=$HActDt</Set>   <!--恢复会计日期，保证循环取值的正确性-->
        <Exec func="PUB:nGetPubSeqNo"> <!--每次查询批次号-->
          <Arg name="SeqNam" value="PfaCrdTxn:IdxNo"/>
          <Arg name="SeqCnt" value="$RecNum"/>
          <Arg name="Len"    value="6"/>
          <Arg name="CycCnd" value="Y"/>
        </Exec>
        <Set>SelVal=SUB($SelVal,1)</Set>
        <Exec func="PUB:ExecSql" error="IGNORE">
          <Args>
            <Arg name="SqlCmd" value="UpdCrdTxn"/>
          </Args>
        </Exec>
        <If condition="INTCMP(~RetCod,4,0)">
          <Exec func="PUB:RollbackWork" error="IGNORE"/>
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
          </Exec>
          <Set>MsgTyp=E</Set>
          <Set>RspCod=PFA999</Set>
          <Set>RspMsg=更新索引号错</Set>
          <Return/>
        </If>
      </If>
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
    </FlowCtrl>
  </Transaction>

  <Transaction code="461195" desc="公务卡资料、明细获取交易">
    <Quote name="PfaSqlLst"/>
    <DynSentence name="ChkExist">
      <Sentence>
        select 'Y' YN FROM TABLE(VALUES(1)) AS anony where EXISTS ( select 'Y' from %s where %s )
      </Sentence>
      <Fields>TblNam|SqlStr|</Fields>
    </DynSentence>
    <DynSentence name="GetBrNo"> <!-- 取财政范围内分行号 -->
      <Sentence>
        select distinct BrNo from pfaorgsts
      </Sentence>
    </DynSentence>
    <DynSentence name="UpdCrdInf"> <!-- 更新卡资料 -->
      <Sentence>
        %s
      </Sentence>
      <Fields>SqlStr|</Fields>
    </DynSentence>
    <DynSentence name="CntCrdTxn"><!--计算明细总数-->
      <Sentence>
        select count(*) RecNum from pfacrdtxn where PfaSub='%s' and HActDt='%s' and IdxNo=''
      </Sentence>
      <Fields>PfaSub|HActDt|</Fields>
    </DynSentence>
    <DynSentence name="GetCrdInf"><!--取卡资料-->
      <Sentence>
        select BCusId, CardNm from pfacrdinf where PfaSub='%s' and CardNo='%s'
      </Sentence>
      <Fields>PfaSub|CardNo|</Fields>
    </DynSentence>
    <DynSentence name="UpdCrdTxn"><!--更新唯一标志-->
      <Sentence>
        update pfacrdtxn set IdxNo=right('000000'||rtrim(char((row_number()over()+%s))),6) where PfaSub='%s' and HActDt='%s' and IdxNo=''
      </Sentence>
      <Fields>SelVal|PfaSub|HActDt|</Fields>
    </DynSentence>
    <FlowCtrl>
      <Set>PfaSub=001</Set>
      <Quote name="ChkSubCfg"/>
      <Set>BrNo=$AgtBr</Set>
<!--为避免同一分行并发-->
      <Exec func="PUB:Lock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Exec func="PUB:OpenCursor" error="IGNORE">
        <Arg name="sql" value="GetBrNo"/>
      </Exec>
      <If condition="~RetCod!=0">
        <Exec func="PUB:CloseCursor" error="IGNORE"/>
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFA999</Set>
        <Set>RspMsg=打开游标出错</Set>
        <Return/>
      </If>
      <Set>HActDt=$ActDat</Set>
      <Exec func="PUB:IsExistNode" error="IGNORE">
        <Arg name="FieldName" value="QryDat"/>
      </Exec>
      <If condition="INTCMP(~RetCod,3,0)">  <!--非第三方-->
        <Set>QryDat=CALCDATE($ActDat,-,d,1)</Set>
      </If>
      <While>
        <Exec func="PUB:FetchCursor" error="IGNORE"/>
        <If condition="~RetCod=100">
          <Break/>
        </If>
        <Set>OBrNo=$BrNo</Set>
        <Set>BrNo=$AgtBr</Set>
        <Set>AdeDir=STRCAT( $AdeFDir,$OBrNo,$AdeBDir,$QryDat )</Set>
        <Set>LstFil=STRCAT(GWYCARD.,$OBrNo,.,$QryDat,.list)</Set>
        <Set>AdeFil=$LstFil</Set>
        <Exec func="PUB:FtpGet" error="IGNORE">
          <Arg name="FtpId" value="PFA003"/>
        </Exec>
<!--判断返回文件是否存在-->
        <Exec func="PUB:IsValidFile" error="IGNORE">
          <Arg name="FileName" value="STRCAT(GETENV(WORKDIR),/,$IcsDir,/,$LstFil)"/>
        </Exec>
<!--单个文件不合法时，跳过该文件的处理，继续下一文件-->
        <If condition="OR( INTCMP($FilByt,3,0), INTCMP(~RetCod,4,0) )">
          <Set>RspMsg=STRCAT(文件【,$LstFil,】字节数不合法或数据文件不完整或不存在)</Set>
          <Continue/>
        </If>
<!--列表文件处理-->
        <Exec func="PUB:OpenFile">
          <Arg name="FileName"   value="STRCAT($IcsDir,/,$LstFil)"/>
          <Arg name="Mode"       value="r"/>
          <Arg name="ObjectName" value="LstFilNam"/>
        </Exec>
        <Exec func="PUB:InitDataParser">
          <Arg name="ConfigName" value="BatFormat"/>
          <Arg name="RootName"   value="BATCH"/>
        </Exec>
        <While>
<!--拆分列表文件获取具体数据文件名称-->
          <Exec func="PUB:GetFileLineAndParse" error="IGNORE">
            <Arg name="ConfigName" value="BatFormat"/>
            <Arg name="RootName"   value="BATCH"/>
            <Arg name="NodeName"   value="Process"/>
            <Arg name="AttrName"   value="name"/>
            <Arg name="AttrValue"  value="PfaCrdLst"/>
            <Arg name="MaxLen"     value="100000"/>
            <Arg name="ObjectName" value="LstFilNam"/>
          </Exec>
          <If condition="~RetCod!=0">
            <If condition="~RetCod=-1"> <!--处理失败-->
              <Set>RspMsg=STRCAT(读列表文件【,$LstFil,】错)</Set>
            </If>
            <Break/>
          </If>
          <Set>AdeFil=$DatFNm</Set>
          <Exec func="PUB:FtpGet" error="IGNORE">
            <Arg name="FtpId" value="PFA003"/>
          </Exec>
<!--判断返回文件是否存在-->
          <Exec func="PUB:IsValidFile" error="IGNORE">
            <Arg name="FileName" value="STRCAT(GETENV(WORKDIR),/,$IcsDir,/,$DatFNm)"/>
          </Exec>
<!--单个文件不合法时，跳过该文件的处理，继续下一文件-->
          <If condition="OR( INTCMP($FilByt,4,$DatFSz), INTCMP(~RetCod,4,0) )">
            <Set>RspMsg=STRCAT(文件【,$DatFNm,】字节数不合法或数据文件不完整或不存在)</Set>
            <Continue/>
          </If>
          <Exec func="PUB:OpenFile">
            <Arg name="FileName"   value="STRCAT($IcsDir,/,$DatFNm)"/>
            <Arg name="Mode"       value="r"/>
            <Arg name="ObjectName" value="DatFilNam"/>
          </Exec>
          <Exec func="PUB:InitDataParser">
            <Arg name="ConfigName" value="BatFormat"/>
            <Arg name="RootName"   value="BATCH"/>
          </Exec>
          <Switch expression="SUBSTR($DatFNm,1,12)">
            <Case value="CARD_GWY_ISE"> <!-- 卡资料 -->
              <Set>TblNam=pfacrdinf</Set>
              <Break/>
            </Case>
            <Case value="CARD_GWY_TXN"> <!-- 卡明细 -->
              <Set>TblNam=pfacrdtxn</Set>
              <Break/>
            </Case>
            <Default>
              <Set>RspMsg=STRCAT(列表文件【,$LstFil,】中数据文件【,$DatFNm,】不合法)</Set>
              <Continue/>
            </Default>
          </Switch>
          <Set>EndFlg=0</Set>
          <While>
            <Exec func="PUB:GetFileLineAndParse" error="IGNORE">
              <Arg name="ConfigName" value="BatFormat"/>
              <Arg name="RootName"   value="BATCH"/>
              <Arg name="NodeName"   value="Process"/>
              <Arg name="AttrName"   value="name"/>
              <Arg name="AttrValue"  value="$TblNam"/>
              <Arg name="MaxLen"     value="100000"/>
              <Arg name="ObjectName" value="DatFilNam"/>
            </Exec>
            <If condition="~RetCod!=0">
              <If condition="~RetCod=-1"> <!--处理失败-->
                <Set>EndFlg=1</Set>
                <Set>RspMsg=STRCAT(读数据文件【,$DatFNm,】错)</Set>
              </If>
              <Break/>
            </If>
<!--记录是否存在-->
            <Switch expression="SUBSTR($DatFNm,1,12)">
              <Case value="CARD_GWY_ISE"> <!-- 卡资料 -->
                <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and CardNo=',$CardNo,' )</Set>
                <Break/>
              </Case>
              <Case value="CARD_GWY_TXN"> <!-- 卡明细 -->
                <Set>SqlStr=STRCAT( PfaSub=',$PfaSub,' and CardNo=',$CardNo,' and TxnDat=',$TxnDat,' and TLogNo=',$TLogNo,' )</Set>
                <Break/>
              </Case>
              <Default>
                <Set>RspMsg=STRCAT(列表文件【,$LstFil,】中数据文件【,$DatFNm,】不合法)</Set>
                <Continue/>
              </Default>
            </Switch>
            <Exec func="PUB:ReadRecord" error="IGNORE">
              <Args>
                <Arg name="SqlCmd" value="ChkExist"/>
              </Args>
            </Exec>
            <If condition="~RetCod=-1">
              <Exec func="PUB:RollbackWork" error="IGNORE"/>
              <Exec func="PUB:CloseFile">
                <Arg name="ObjectName" value="DatFilNam"/>
              </Exec>
              <Set>RspMsg=STRCAT(查询数据表【,$TblNam,】失败)</Set>
              <Break/>
            </If>
            <If condition="~RetCod=0">  <!--存在-->
              <If condition="IS_EQUAL_STRING($TblNam,pfacrdinf)"> <!--卡资料则更新、卡明细则跳过-->
                <Exec func="PUB:UpdateRecord" error="IGNORE">
                  <Arg name="TblNam" value="pfacrdinf"/>
                  <Arg name="CndSts" value="UpdCrdInf"/>
                </Exec>
                <If condition="~RetCod!=0">
                  <Exec func="PUB:RollbackWork"/>
                  <Exec func="PUB:CloseFile">
                    <Arg name="ObjectName" value="DatFilNam"/>
                  </Exec>
                  <Set>RspMsg=STRCAT(插入数据表【,$TblNam,】失败)</Set>
                  <Set>EndFlg=1</Set>
                  <Break/>
                </If>
                <Set>RspMsg=STRCAT(更新财政【,$PfaSub,】公务卡【,$CardNo,】资料)</Set>
                <Delete>BCusId</Delete> <!--更新完成后删除，避免影响下一卡号-->
              </If>
              <Else>
                <Set>RspMsg=STRCAT(财政【,$PfaSub,】公务卡【,$CardNo,】消费记录重复)</Set>
              </Else>
              <Continue/>
            </If>
            <If condition="IS_EQUAL_STRING($TblNam,pfacrdtxn)"> <!--卡明细获取卡名及单位编码-->
              <Exec func="PUB:ReadRecord" error="IGNORE">  <!--忽略错误，保证明细正常入库-->
                <Args>
                  <Arg name="SqlCmd" value="GetCrdInf"/>
                </Args>
              </Exec>
            </If>
<!--新记录则更新-->
            <Exec func="PUB:InsertRecord" error="IGNORE">
              <Arg name="TblNam" value="$TblNam"/>
            </Exec>
            <If condition="~RetCod!=0">
              <Exec func="PUB:RollbackWork"/>
              <Exec func="PUB:CloseFile">
                <Arg name="ObjectName" value="DatFilNam"/>
              </Exec>
              <Set>RspMsg=STRCAT(插入数据表【,$TblNam,】失败)</Set>
              <Set>EndFlg=1</Set>
              <Break/>
            </If>
          </While>   <!--单个数据文件内容循环-->
          <If condition="IS_EQUAL_STRING($EndFlg,0)">
            <If condition="IS_EQUAL_STRING($TblNam,pfacrdtxn)"> <!--若当前文件为交易明细，需更新索引号-->
              <Exec func="PUB:ReadRecord" error="IGNORE">
                <Arg name="SqlCmd" value="CntCrdTxn"/>
              </Exec>
              <If condition="INTCMP(~RetCod,4,0)">
                <Exec func="PUB:RollbackWork" error="IGNORE"/>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                </Exec>
                <Set>MsgTyp=E</Set>
                <Set>RspCod=PFA999</Set>
                <Set>RspMsg=STRCAT(计算分行【,$OBrNo,】交易日【,$QryDat,】明细总数错误)</Set>
                <Return/>
              </If>
              <If condition="INTCMP($RecNum,6,0)">
                <Exec func="PUB:nGetPubSeqNo"> <!--每次查询批次号-->
                  <Arg name="SeqNam" value="PfaCrdTxn:IdxNo"/>
                  <Arg name="SeqCnt" value="$RecNum"/>
                  <Arg name="Len"    value="6"/>
                  <Arg name="CycCnd" value="Y"/>
                </Exec>
                <Set>SelVal=SUB($SelVal,1)</Set>
                <Exec func="PUB:ExecSql" error="IGNORE">
                  <Args>
                    <Arg name="SqlCmd" value="UpdCrdTxn"/>
                  </Args>
                </Exec>
                <If condition="INTCMP(~RetCod,4,0)">
                  <Exec func="PUB:RollbackWork" error="IGNORE"/>
                  <Exec func="PUB:Unlock">
                    <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
                  </Exec>
                  <Set>MsgTyp=E</Set>
                  <Set>RspCod=PFA999</Set>
                  <Set>RspMsg=STRCAT(更新分行【,$OBrNo,】交易日【,$QryDat,】索引号错误)</Set>
                  <Set>RspMsg=更新索引号错</Set>
                  <Return/>
                </If>
              </If>
            </If>
            <Exec func="PUB:CommitWork"/>
          </If>
          <Exec func="PUB:CloseFile">
            <Arg name="ObjectName" value="DatFilNam"/>
          </Exec>
        </While>   <!--列表文件内容循环-->
        <Exec func="PUB:CloseFile">
          <Arg name="ObjectName" value="LstFilNam"/>
        </Exec>
      </While>   <!--分行号循环-->
      <Exec func="PUB:FetchCursor" error="IGNORE"/>
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="STRCAT($BrNo,$AplCls,$TxnCod)"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
    </FlowCtrl>
  </Transaction>
</Application>
