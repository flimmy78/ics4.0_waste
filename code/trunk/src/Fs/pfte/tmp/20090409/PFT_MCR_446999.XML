<?xml version='1.0' encoding='ISO-8859-1'?>
<FrontTab>
  <Macro name="PftSqlLst">
    <DynSentence name="QryCusAgt">   <!--获取客户协议信息-->
      <Sentence>
        select ActTyp, ActNam, VchTyp, VchCod, ActSqn, ActSqn, PfaSub, BCusId, SubCod, EConTp, PrjCod, DptCod, OpnNod, OpnBr
          from PftCusAgt446
         where TCrpTp='%s' and AgtInf='%s' and ActNo='%s'
      </Sentence>
      <Fields>TCrpTp|AgtInf|ActNo|</Fields>
    </DynSentence>
    
    <DynSentence name="QryBrInf">   <!--根据经收处银行行号获取核心网点号、帐务中心、分行号-->
      <Sentence>
        select NodNo, CtlNod, BrNo from PftNodInf446 where RcvBNo='%s'
      </Sentence>
      <Fields>RcvBNo|</Fields>
    </DynSentence>
    
    <DynSentence name="UpdTxnJnl">   <!--更新指定流水-->
      <Sentence>
        LogNo='%s'
      </Sentence>
      <Fields>LogNo|</Fields>
    </DynSentence>

    <DynSentence name="UpdJnlSts">   <!--更新指定流水部分要素-->
      <Sentence>
        update PftTxnJnl446 set BilSts='%s', OTActDt='%s', OTLogNo='%s' where LogNo='%s'
      </Sentence>
      <Fields>BilSts|OTActDt|OTLogNo|LogNo|</Fields>
    </DynSentence>
    
    <DynSentence name="QryBnkInf">   <!--获取分行信息-->
      <Sentence>
        select BnkCod, CtlNod, Act01, Act02, substr(Act01,14,5) Act01Sq, substr(Act02,14,5) Act02Sq, UserPs from PftBnkInf446 where BnkCls='%s' and BrNo='%s'
      </Sentence>
      <Fields>BnkCls|BrNo|</Fields>
    </DynSentence>
    
    <DynSentence name="GetNewAct" desc="根据老账号获取新账号">
      <Sentence>
        select ActNo from SavOldAct where OldAct='%s'
      </Sentence>
      <Fields>RcvAct|</Fields>
    </DynSentence>
      
    <DynSentence name="GetTxnJnl">   <!--获取扣款流水-->
      <Sentence>
        select LogNo OLogNo, HTxnSt, ActTyp, VchTyp, VchCod, BilSts, ActDat OActDat, HLogNo OHLogNo, TlrId, TckNo OTckNo,
               TTxnCd OTTxnCd, HTxnCd OHTxnCd, PfaSub, NodNo, RcvAct ORcvAct, PLogNo
          from PftTxnJnl446
         where TCrpCd='%s' and TActDt='%s' and TLogNo='%s' and OIFlag='1'
      </Sentence>
      <Fields>TCrp|TDat|TLog|</Fields>
    </DynSentence>
    
   <DynSentence name="GetCanJnl">   <!--获取冲正流水-->
      <Sentence>
        select LogNo CLogNo, HTxnSt, ActTyp, BilSts, ActDat CActDat, TlrId
          from PftTxnJnl446
         where TCrpCd='%s' and OTActDt='%s' and OTLogNo='%s' and TTxnTp='2'
      </Sentence>
      <Fields>TCrp|TDat|TLog|</Fields>
    </DynSentence>
    
   <DynSentence name="GetCrpInf">   <!--根据征收机关号获取其他信息-->                            
      <Sentence>                                                                                  
        select TCrpNm, FskNam, AgtBNm from PftCrpInf446 where TCrpTp=substr('%s',1,1) and TCrpCd='%s'
      </Sentence>                                                                                   
      <Fields>TCrpCd|TCrpCd|</Fields>                                                                
    </DynSentence>
    
   <DynSentence name="GetActInf">      <!--根据银行账户获取账户资料-->
   	<Sentence>
   		select ActNam, ActTyp, OpnNod, OpnBr from PftCusAgt446 where AgtInf='%s' and ActNo='%s'
   	</Sentence>                                                                  
    <Fields>AgtInf|ActNo|</Fields>                                                                                                                                                                                                               
   </DynSentence>
    
    <DynSentence name="GetNodNam">       <!--根据银行行号获取行名-->
      <Sentence>
        select smr RcvBNm from PubOrgInf where NodNo='%s'
      </Sentence>
      <Fields>OpnNod|</Fields>
    </DynSentence>
  </Macro>
  
  <Macro name="SndRtnMsg"> <!-- 往第三方发送交易信息 -->
    <Set>@MSG.FLG=1</Set>
    <Set>MsgFmt=SET203</Set>
    <Exec func="PUB:CallThirdOther" error="IGNORE">
      <Arg name="HTxnCd"  value="SET203"/>
      <Arg name="ObjSvr"  value="CTDEPFT1"/>
    </Exec>
    <If condition="~RetCod=-1">
      <Set>RspMsg=STRCAT(发送返回信息【,$TCrpCd,】【,$TActDt,】【,$TLogNo,】超时)</Set>
    </If>
    <ElseIf condition="~RetCod&lt;0">
      <Set>RspMsg=STRCAT(发送返回信息【,$TCrpCd,】【,$TActDt,】【,$TLogNo,】出错)</Set>
    </ElseIf>
  </Macro>
  
  <Macro name="GetBnkInf"> <!--根据分行号获取系统相关信息-->
    <Exec func="PUB:ReadRecord" error="IGNORE">
      <Args>
        <Arg name="SqlCmd" value="QryBnkInf"/>
      </Args>
    </Exec>
    <If condition="~RetCod=-1">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(查询信息表【PftBnkInf】错误)</Set>
      <Set>RtnCod=3802</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>

    <If condition="~RetCod=-2">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(分行号【,$BrNo,】不存在对应资料)</Set>
      <Set>RtnCod=3802</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
  </Macro>

  <Macro name="InitAccTran"> <!--帐务类交易初始化-->
    <Exec func="PUB:GetBranchNoByNodeNo"/>  <!--根据网点号取分行号-->
    <Exec func="PUB:InitTransaction"/>
    <Exec func="PUB:GetAppInfo"/>
    <Set>BnkCls=1</Set>
    <Quote name="GetBnkInf"/>
  </Macro>
  <Macro name="InitNoAccTran"> <!--非帐务类交易初始化-->
    <Exec func="PUB:GetBranchNoByNodeNo"/>  <!--根据网点号取分行号-->
    <Exec func="PUB:InitTransaction"/>
    <Exec func="PUB:GetAppInfo"/>
  </Macro>
  
  <Macro name="GetBrInf"> <!--根据接收行行号获取帐务中心、分行号-->
    <Exec func="PUB:ReadRecord" error="IGNORE">
      <Args>
        <Arg name="SqlCmd" value="QryBrInf"/>
      </Args>
    </Exec>
    <If condition="~RetCod=-1">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(查询网点表【PftNodInf446】错误)</Set>
      <Set>RtnCod=3801</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
    <If condition="~RetCod=-2">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(经收处银行号【,$RcvBNo,】不存在对应分行号)</Set>
      <Set>RtnCod=3802</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
  </Macro>
  
  <Macro name="GetBTxnID"> <!--生成银行交易识别号-->
    <Delete>SelVal</Delete>
    <Exec func="PUB:nGetPubSeqNo">
      <Arg name="SeqNam" value="PFT:BTxnID"/>
      <Arg name="Len"    value="10"/>
      <Arg name="CycCnd" value="Y"/>
    </Exec>
    <Set>BTxnID=STRCAT($BrNo,$SelVal)</Set>
  </Macro>
  
  <Macro name="JugActInf">  <!--校验账号信息-->
    <Set>RcvAct=DELSPACE($RcvAct,both)</Set>
    <If condition="IS_EQUAL_STRING(SUBSTR($RcvAct,1,3),371)">   <!--旧储蓄账户-->
      <Exec func="PUB:ReadRecord" error="IGNORE">
        <Args>
          <Arg name="SqlCmd" value="GetNewAct"/>
        </Args>
      </Exec>
      <If condition="INTCMP(~RetCod,4,0)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFT001</Set>
        <Set>RspMsg=新老账号对照表不存在</Set>
        <Set>RtnCod=3002</Set>
        <Quote name="SndRtnMsg"/>
        <Return/>
      </If>
    </If>
    <ElseIf condition="IS_EQUAL_STRING(SUBSTR($RcvAct,1,2),26)">  <!--旧对公账户-->
        <Set>ActNo=STRCAT(446,$RcvAct)</Set>
    </ElseIf>
    <Else>
        <Set>ActNo=$RcvAct</Set>
    </Else>
    
    <Set>AcLen=STRLEN($ActNo)</Set>			<!--取账号长度-->
    <Switch expression="$AcLen">
        <Case value="21"><!--新账号-->
          <If condition="INTCMP(SUBCMP($ActNo,4,1,9),3,0)">
            <Set>ActCls=2</Set>																			<!--对私新账号-->
          </If>
          <ElseIf condition="INTCMP(SUBSTR($ActNo,20,2),3,99)"> 		<!--内部帐户-->
            <Set>MsgTyp=E</Set>
        		<Set>RspCod=PFT001</Set>
        		<Set>RspMsg=内部帐号不能转帐</Set>
        		<Set>RtnCod=3009</Set>
        		<Quote name="SndRtnMsg"/>
        		<Return/>
          </ElseIf>
          <Else>
            <Set>ActCls=0</Set>																	    <!--对公帐户-->
          </Else>
        	<Break/>
        </Case>
        <Case value="19"/>			<!--新卡号-->
        <Case value="17"/>			<!--旧卡号-->
        <Case value="16">				<!--旧卡号-->
        	<Set>ActCls=3</Set>
        	<Break/>
        </Case>
        <Default>
          <Set>MsgTyp=E</Set>
        	<Set>RspCod=PFT001</Set>
        	<Set>RspMsg=账号错误!</Set>
        	<Set>RtnCod=3002</Set>
        	<Quote name="SndRtnMsg"/>
        	<Return/>      
        </Default>
    </Switch>
  </Macro>
  
  <Macro name="JugCusAgt"> <!--协议校验-->
    <Set>TCrpTp=SUBSTR($TCrpCd,1,1)</Set>
    <Set>AgtInf=DELSPACE($AgtInf,both)</Set>
    <Set>ActNo=DELSPACE($RcvAct,both)</Set>
    <Exec func="PUB:ReadRecord" error="IGNORE">
      <Args>
        <Arg name="SqlCmd" value="QryCusAgt"/>
      </Args>
    </Exec>
    <If condition="~RetCod=-1">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(查询协议表【PftCusAgt】错误)</Set>
      <Set>RtnCod=3801</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
    <If condition="~RetCod=-2">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT001</Set>
      <Set>RspMsg=STRCAT(协议【,$TCrpTp,】【,$AgtInf,】【,$ActNo,】不存在)</Set>
      <Set>RtnCod=3007</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
  </Macro>
  
  <Macro name="ChkTxnJnl"> <!--扣款流水检查-->
    <Delete>TCrp</Delete>
    <Delete>TDat</Delete>
    <Delete>TLog</Delete>
    <Set>TCrp=$TCrpCd</Set>
    <Set>TDat=$TActDt</Set>
    <Set>TLog=$TLogNo</Set>
    <Exec func="PUB:ReadRecord" error="IGNORE">
      <Args>
        <Arg name="SqlCmd" value="GetTxnJnl"/>
      </Args>
    </Exec>
    <If condition="~RetCod=-1">
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="$RecKey"/>
      </Exec>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(查询流水表【GetTxnJnl】错误)</Set>
      <Set>RtnCod=3801</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
    <If condition="~RetCod=0">  <!--找到同一笔交易，该情况应该不会出现-->
      <Set>LogNo=$OLogNo</Set>
      <If condition="IS_EQUAL_STRING($ActTyp,A)">  <!--中央财政账户-->
        <Set>OLogNo=$PLogNo</Set>
      </If>
      <Switch expression="$BilSts">
        <Case value="S">     <!--该情况似乎不会出现，只有前置交易正常完成而第三方没收到应答-->
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="$RecKey"/>
          </Exec>
          <Set>RspCod=000000</Set>
          <Set>MsgTyp=N</Set>
          <Set>RspMsg=原交易已成功</Set>
          <Set>RtnCod=0000</Set>
          <Quote name="SndRtnMsg"/>
          <Return/>
        </Case>
        <Case value="R"/>     <!--该情况似乎不会出现-->
        <Case value="C">
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="$RecKey"/>
          </Exec>
          <Set>RspCod=PFT999</Set>
          <Set>MsgTyp=N</Set>
          <Set>RspMsg=原交易已抹帐或冲正</Set>
          <Set>RtnCod=3802</Set>
          <Quote name="SndRtnMsg"/>
          <Return/>
        </Case>
        <Case value="T"/>
        <Case value="U">
          <Exec func="PUB:CallHostOther" error="IGNORE">
            <Arg name="HTxnCd" value="458980"/>
            <Arg name="ObjSvr" value="SHSTPUB1"/>
          </Exec>
          <If condition="AND(IS_EQUAL_STRING($MsgTyp,N),IS_NOEQUAL_STRING($CrcSts,Y))">
            <Set>BilSts=S</Set>
            <Set>TckNo=DELSPACE($OTckNo,both)</Set>
            <Set>HTxnSt=S</Set>
            <Set>HRspCd=SC0000</Set>
            <Set>RtnCod=0000</Set>
            <Set>RspMsg=原交易已成功</Set>
          </If>
          <Else>
            <Set>BilSts=F</Set>
            <Set>TckNo= </Set>
            <Set>HTxnSt=F</Set>
            <Set>HRspCd=PFT999</Set>
            <Set>RtnCod=3802</Set>
          </Else>
          <Set>MsgTyp=N</Set>
          <Set>RspCod=$HRspCd</Set>
          <Exec func="PUB:UpdateRecord">
            <Arg name="TblNam" value="PftTxnJnl446"/>
            <Arg name="CndSts" value="UpdTxnJnl"/>
          </Exec>
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="$RecKey"/>
          </Exec>
          <Quote name="SndRtnMsg"/>
          <Return/>
        </Case>
        <Default>
          <Set>BilSts=F</Set>
          <Set>TckNo= </Set>
          <Set>HTxnSt=F</Set>
          <Set>MsgTyp=N</Set>
          <Set>RspCod=PFT999</Set>
          <Set>RtnCod=3802</Set>
          <Exec func="PUB:UpdateRecord">
            <Arg name="TblNam" value="PftTxnJnl446"/>
            <Arg name="CndSts" value="UpdTxnJnl"/>
          </Exec>
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="$RecKey"/>
          </Exec>
          <Quote name="SndRtnMsg"/>
          <Return/>
        </Default>
      </Switch>
    </If>
  </Macro>

  <Macro name="ChkBokJnl"> <!--检查原扣款流水-->
    <Delete>TCrp</Delete>
    <Delete>TDat</Delete>
    <Delete>TLog</Delete>
    <Set>TCrp=$TCrpCd</Set>
    <Set>TDat=$OTActDt</Set>
    <Set>TLog=$OTLogNo</Set>
    <Exec func="PUB:ReadRecord" error="IGNORE">
      <Args>
        <Arg name="SqlCmd" value="GetTxnJnl"/>
      </Args>
    </Exec>
    <If condition="~RetCod=-1">
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="$RecKey"/>
      </Exec>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=STRCAT(查询流水表【PftTxnJnl】错误)</Set>
      <Set>RtnCod=3801</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
    <If condition="~RetCod=-2">
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="$RecKey"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=000000</Set>
      <Set>RspMsg=STRCAT(冲正【,$TCrpCd,】【,$OTActDt,】【,$OTLogNo,】信息的无对应扣款流水)</Set>
      <Set>RtnCod=0000</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
    <If condition="IS_NOEQUAL_STRING($ORcvAct,$RcvAct)">   <!--冲正流水中账户不一致-->
      <Exec func="PUB:Unlock">
        <Arg name="RecKey" value="$RecKey"/>
      </Exec>
      <Set>MsgTyp=N</Set>
      <Set>RspCod=PFT002</Set>
      <Set>RspMsg=STRCAT(冲正【,$TCrpCd,】【,$OTActDt,】【,$OTLogNo,】信息扣款与冲正账户不一致)</Set>
      <Set>RtnCod=3702</Set>
      <Quote name="SndRtnMsg"/>
      <Return/>
    </If>
    <Set>BLogNo=$OLogNo</Set>  <!--保留扣款流水号，供抹帐使用-->
    <Switch expression="$BilSts">
      <Case value="F"/>   <!--原扣款交易未成功，返回冲正成功-->
      <Case value="C"/>   <!--原扣款交易已冲正，返回冲正成功-->
      <Case value="R">    <!--原扣款交易已抹帐，返回冲正成功-->
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="$RecKey"/>
        </Exec>
        <Set>MsgTyp=N</Set>
        <Set>RspCod=000000</Set>
        <Set>RspMsg=STRCAT(冲正【,$TCrpCd,】【,$OTActDt,】【,$OTLogNo,】信息的未成功记帐或已冲正)</Set>
        <Set>RtnCod=0000</Set>
        <Quote name="SndRtnMsg"/>
        <Return/>
      </Case>
      <Case value="T"/>   <!--原扣款交易超时-->
      <Case value="U">    <!--原扣款交易未上送主机-->
        <If condition="IS_EQUAL_STRING($OActDat,$ActDat)">   <!--若为当日交易，则发主机查询-->
          <If condition="IS_EQUAL_STRING($ActTyp,A)">  <!--中央财政账户-->
            <Set>OLogNo=$PLogNo</Set>
          </If>
          <Exec func="PUB:CallHostOther" error="IGNORE">
            <Arg name="HTxnCd" value="458980"/>
            <Arg name="ObjSvr" value="SHSTPUB1"/>
          </Exec>
          <If condition="~RetCod=-1">   <!--超时、设置超时回应，等待下一次冲正-->
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="$RecKey"/>
            </Exec>
            <Set>MsgTyp=E</Set>
            <Set>RspCod=PFT999</Set>
            <Set>RspMsg=STRCAT(查询【,$TCrpCd,】【,$OTActDt,】【,$OTLogNo,】信息超时)</Set>
            <Set>RtnCod=3802</Set>
            <Quote name="SndRtnMsg"/>
            <Return/>
          </If>
          <If condition="AND(IS_EQUAL_STRING($MsgTyp,N),IS_NOEQUAL_STRING($CrcSts,Y))">  <!--原扣款交易成功-->
            <Set>BilSts=S</Set>
            <Set>TckNo=DELSPACE($OTckNo,both)</Set>
            <Set>HTxnSt=S</Set>
            <Set>HRspCd=SC0000</Set>
            <Set>RtnCod=0000</Set>
          </If>
          <Else>  <!--原扣款交易失败或不存在-->
            <Set>BilSts=F</Set>
            <Set>HTxnSt=F</Set>
            <Set>HRspCd=PFT999</Set>
            <Set>RtnCod=0000</Set>
          </Else>
          <Set>LogNo=$BLogNo</Set>   <!--此时BLogNo为记帐业务的流水号-->
<!--保存当前交易的日期及流水号、避免以下更新造成数据混乱、提供返回接口数据-->
          <Set>BDat=$TActDt</Set>
          <Set>BLog=$TLogNo</Set>
          <Set>TActDt=$OTActDt</Set>
          <Set>TLogNo=$OTLogNo</Set>
          <Exec func="PUB:UpdateRecord">   <!--更新交易流水状态-->
            <Arg name="TblNam" value="PftTxnJnl446"/>
            <Arg name="CndSts" value="UpdTxnJnl"/>
          </Exec>
          <Exec func="PUB:CommitWork"/>
<!--恢复当前交易的日期及流水号、提供返回接口数据-->
          <Set>TActDt=$BDat</Set>
          <Set>TLogNo=$BLog</Set>
          <If condition="IS_NOEQUAL_STRING($BilSts,S)">   <!--原交易失败直接返回冲正成功-->
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="$RecKey"/>
            </Exec>
            <Set>RspCod=$HRspCd</Set>
            <Set>RtnCod=0000</Set>
            <Quote name="SndRtnMsg"/>
            <Return/>
          </If>
        </If>
        <Else>   <!--若冲正的非当日正常完成交易，直接拒绝，由业务手工处理，避免由于会计日期切换造成抹帐与冲正重复-->
          <Exec func="PUB:Unlock">
            <Arg name="RecKey" value="$RecKey"/>
          </Exec>
          <Set>RspCod=PFA999</Set>
          <Set>RtnCod=3802</Set>
          <Quote name="SndRtnMsg"/>
          <Return/>
        </Else>
        <Break/>
      </Case>
      <Case value="S">   <!--原扣款交易正常，继续冲正处理-->
        <Break/>
      </Case>
      <Default>
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="$RecKey"/>
        </Exec>
        <Set>RspCod=PFA999</Set>
        <Set>RtnCod=3802</Set>
        <Quote name="SndRtnMsg"/>
        <Return/>
      </Default>
    </Switch>
  </Macro>
   
  <Macro name="ChkCanJnl"> <!--检查冲正流水-->
    <Exec func="PUB:ReadRecord" error="IGNORE">
      <Args>
        <Arg name="SqlCmd" value="GetCanJnl"/>
      </Args>
    </Exec>
    <Switch expression="~RetCod">
      <Case value="-1">   <!--系统异常-->
        <Exec func="PUB:Unlock">
          <Arg name="RecKey" value="$RecKey"/>
        </Exec>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFT999</Set>
        <Set>RspMsg=STRCAT(查询冲正流水表【PftTxnJnl】错误)</Set>
        <Set>RtnCod=3801</Set>
        <Quote name="SndRtnMsg"/>
        <Return/>
      </Case>
      <Case value="0">   <!--找到冲正的流水-->
        <Switch expression="$BilSts">
          <Case value="S">   <!--冲正流水为成功-->
            <Set>BilSts=R</Set>
            <Set>LogNo=$OLogNo</Set>   <!--此时OLogNo为扣款业务的流水号-->
            <Exec func="PUB:ExecSql" error="IGNORE">   <!--更新原流水表为冲正-->
              <Args>
                <Arg name="SqlCmd" value="UpdJnlSts"/>
              </Args>
            </Exec>
            <Exec func="PUB:Unlock">
              <Arg name="RecKey" value="$RecKey"/>
            </Exec>
            <Set>MsgTyp=N</Set>
            <Set>RspCod=000000</Set>
            <Set>RspMsg=STRCAT(该【,$TCrpCd,】【,$OTActDt,】【,$OTLogNo,】信息的已冲正)</Set>
            <Set>RtnCod=0000</Set>
            <Quote name="SndRtnMsg"/>
            <Return/>
          </Case>
          <Case value="T"/>   <!--原冲正交易超时-->
          <Case value="U">    <!--原冲正交易未上送主机-->
            <If condition="IS_EQUAL_STRING($CActDat,$ActDat)">   <!--若为当日冲正交易，则发主机查询-->
              <Set>OLogNo=$CLogNo</Set>
              <Exec func="PUB:CallHostOther" error="IGNORE">
                <Arg name="HTxnCd" value="458980"/>
                <Arg name="ObjSvr" value="SHSTPUB1"/>
              </Exec>
              <If condition="~RetCod=-1">   <!--超时、设置超时回应，等待下一次冲正-->
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="$RecKey"/>
                </Exec>
                <Set>MsgTyp=N</Set>
                <Set>RspCod=000000</Set>
                <Set>RspMsg=STRCAT(查询【,$OTCrpCd,】【,$OTActDt,】【,$OTLogNo,】信息超时)</Set>
                <Set>RtnCod=3802</Set>
                <Quote name="SndRtnMsg"/>
                <Return/>
              </If>
              <If condition="AND(IS_EQUAL_STRING($MsgTyp,N),IS_NOEQUAL_STRING($CrcSts,Y))">  <!--原冲正成功-->
                <Set>BilSts=C</Set>
                <Set>LogNo=$BLogNo</Set>   <!--此时BLogNo为扣款业务的流水号-->
                <Exec func="PUB:ExecSql" error="IGNORE">   <!--更新原流水表为冲正-->
                  <Args>
                    <Arg name="SqlCmd" value="UpdJnlSts"/>
                  </Args>
                </Exec>
                <Set>BilSts=S</Set>
                <Set>LogNo=$CLogNo</Set>   <!--此时CLogNo为冲正业务的流水号-->
                <Set>TckNo=DELSPACE($OTckNo,both)</Set>
                <Set>HTxnSt=S</Set>
                <Set>HRspCd=SC0000</Set>
                <Set>RtnCod=0000</Set>
                <Set>LogNo=$CLogNo</Set>   <!--此时CLogNo为冲正业务的流水号-->
                <Set>RspCod=$HRspCd</Set>
                <Exec func="PUB:UpdateRecord">  <!--更新冲正流水表为成功-->
                  <Arg name="TblNam" value="PftTxnJnl446"/>
                  <Arg name="CndSts" value="UpdTxnJnl"/>
                </Exec>
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="$RecKey"/>
                </Exec>
                <Quote name="SndRtnMsg"/>
                <Return/>
              </If>
              <Else>   <!--原冲正失败，不允许发起新的冲正，待业务确认-->
                <Exec func="PUB:Unlock">
                  <Arg name="RecKey" value="$RecKey"/>
                </Exec>
                <Set>MsgTyp=N</Set>
                <Set>RspCod=PFT999</Set>
                <Set>RspMsg=STRCAT(信息【,$TCrpCd,】【,$OTActDt,】【,$OTLogNo,】冲正信息查询失败)</Set>
                <Set>RtnCod=3802</Set>
                <Quote name="SndRtnMsg"/>
                <Return/>
              </Else>
            </If>
            <Else>   <!--若非当日冲正交易，直接拒绝，由业务手工处理，避免由于会计日期切换造成冲正重复-->
              <Exec func="PUB:Unlock">
                <Arg name="RecKey" value="$RecKey"/>
              </Exec>
              <Set>RspCod=PFA999</Set>
              <Set>RtnCod=3802</Set>
              <Quote name="SndRtnMsg"/>
              <Return/>
            </Else>
            <Break/>
          </Case>
        </Switch>
        <Break/>
      </Case>
      <Case value="-2">   <!--冲正流水不存在-->
        <Break/>
      </Case>
    </Switch>
  </Macro>
  
   <Macro name="CanCurTxn"> <!--冲正当前工作日流水-->
    <Switch expression="$ActTyp">
      <Case value="0">   <!-- 普通对公 -->
        <Set>LogNo=$BLogNo</Set>
        <Set>TIATyp=C</Set>
        <Set>HTxnCd=STRCAT(SUBSTR($OHTxnCd,1,5),9)</Set>
        <Exec func="PUB:CallHostAcc" error="IGNORE">  <!--上主机系统抹账 -->
          <Arg name="HTxnCd" value="959999"/>
          <Arg name="ObjSvr" value="SHSTPUB1"/>
        </Exec>
        <If condition="OR(IS_EQUAL_STRING($HRspCd,AG8001),IS_EQUAL_STRING($HRspCd,AG8981),IS_EQUAL_STRING($HRspCd,SC6129),IS_EQUAL_STRING($HRspCd,SC6034),IS_EQUAL_STRING($HRspCd,SC0000))">
<!--删除主机返回无用节点，避免修改原记录要素-->
          <Set>BilSts=R</Set>
          <Exec func="PUB:ExecSql">   <!--更新原流水表为冲正-->
            <Args>
              <Arg name="SqlCmd" value="UpdJnlSts"/>
            </Args>
          </Exec>
          <Set>RspCod=000000</Set>
          <Set>RtnCod=0000</Set>
        </If>
        <Else>
          <Set>RspCod=PFA999</Set>
          <Set>RtnCod=3802</Set>
        </Else>
        <Break/>
      </Case>
      <Case value="1"/>   <!-- 一本通 -->
      <Case value="2"/>   <!-- 普通存折 -->
      <Case value="4">    <!-- 太平洋卡 -->
        <Exec func="PUB:GetLogNo"/>
        <Set>TxnCnl=PFT</Set>
        <Exec func="PUB:GetVirtualTeller"/>
        <Set>HTxnCd=471410</Set>
        <Set>BusTyp=FTT51</Set>
        <Set>CnlTyp=L</Set>
        <Set>ActFlg=$ActTyp</Set>
        <Set>Mask=9116</Set>
        <Set>TxnSub=001</Set>
        <Set>ActNo=$RcvAct</Set>
        <Set>ActSeq=$ActSqn</Set>
        <Set>VchChk=0</Set>
        <Set>FeeCod=0000</Set>
        <Set>FeeSeq=$Act01Sq</Set>
        <Set>FeeBr=$CtlNod</Set>
        <Set>BilSts=U</Set>
        <Set>OIFlag=1</Set>
        <Set>TxnTyp=C</Set>
        <Set>PrtFlg=0</Set>
        <Exec func="PUB:InsertRecord">
          <Arg name="TblNam" value="PftTxnJnl446"/>
        </Exec>
        <Exec func="PUB:CallHostAcc" error="IGNORE">  <!--上主机系统冲正 -->
          <Arg name="HTxnCd" value="$HTxnCd"/>
          <Arg name="ObjSvr" value="SHSTPUB1"/>
        </Exec>
        <Switch expression="~RetCod">
          <Case value="-1">  <!--上送主机超时-->
            <Set>BilSts=T</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RtnCod=3802</Set>
            <Break/>
          </Case>
          <Case value="0"> <!--交易成功-->
            <Set>BilSts=S</Set>
            <Set>RspCod=000000</Set>
            <Set>RtnCod=0000</Set>
            <Break/>
          </Case>
          <Default>
            <Delete>TckNo</Delete>
            <Set>BilSts=F</Set>
            <Set>RspCod=PFA999</Set>
            <Set>RtnCod=3802</Set>
            <Break/>
          </Default>
        </Switch>
        <Exec func="PUB:UpdateRecord">  <!--更新冲正流水状态-->
          <Arg name="TblNam" value="PftTxnJnl446"/>
          <Arg name="CndSts" value="UpdTxnJnl"/>
        </Exec>
        <If condition="IS_EQUAL_STRING($BilSts,S)">   <!--更新原扣款流水为冲正-->
<!--删除主机返回无用节点，避免修改原记录要素-->
          <Set>BilSts=C</Set>
          <Set>LogNo=$BLogNo</Set>
          <Exec func="PUB:ExecSql">   <!--更新原流水表为冲正-->
            <Args>
              <Arg name="SqlCmd" value="UpdJnlSts"/>
            </Args>
          </Exec>
          <Set>RspCod=000000</Set>
          <Set>RtnCod=0000</Set>
        </If>
        <Break/>
      </Case>
      <Case value="A"> <!-- 中央财政对公 -->
        <Set>EleBk=@BCFG.EleBk</Set>
        <Set>APVchN=$BLogNo</Set>
        <Exec func="PUB:CallThirdOther" error="IGNORE">
          <Arg name="TxnCod" value="363419"/>
          <Arg name="ObjSvr" value="STHDFAP2"/>
        </Exec>
        <If condition="IS_EQUAL_STRING($TRspCd,000000)">
          <Set>BilSts=R</Set>
          <Set>LogNo=$BLogNo</Set>
          <Exec func="PUB:ExecSql">   <!--更新原流水表为冲正-->
            <Args>
              <Arg name="SqlCmd" value="UpdJnlSts"/>
            </Args>
          </Exec>
          <Set>RspCod=000000</Set>
          <Set>RtnCod=0000</Set>
        </If>
        <Else>
          <Set>RspCod=PFA999</Set>
          <Set>RtnCod=3802</Set>
        </Else>
        <Break/>
      </Case>
      <Case value="B"> <!-- 广东省财政对公 -->
        <Set>OLogNo=$BLogNo</Set>
        <Exec func="PUB:CallThirdOther" error="IGNORE">
          <Arg name="TxnCod" value="461189"/>
          <Arg name="ObjSvr" value="STHDPFT1"/>
        </Exec>
        <If condition="IS_EQUAL_STRING($TRspCd,000000)">
          <Set>BilSts=R</Set>
          <Set>LogNo=$BLogNo</Set>
          <Exec func="PUB:ExecSql">   <!--更新原流水表为冲正-->
            <Args>
              <Arg name="SqlCmd" value="UpdJnlSts"/>
            </Args>
          </Exec>
          <Set>RspCod=000000</Set>
          <Set>RtnCod=0000</Set>
        </If>
        <Else>
          <Set>RspCod=PFA999</Set>
          <Set>RtnCod=3802</Set>
        </Else>
        <Break/>
      </Case>
    </Switch>
  </Macro>

  <Macro name="CanPreTxn"> <!--冲正前一工作日流水-->
    <Set>TxnCnl=PFT</Set>
    <Exec func="PUB:GetVirtualTeller"/>
    <Set>ActNo=$RcvAct</Set>
    <Switch expression="$ActTyp">
      <Case value="0"/> <!-- 普通对公 -->
      <Case value="1"/> <!-- 一本通 -->
      <Case value="2"/> <!-- 普通存折 -->
      <Case value="4">  <!-- 太平洋卡 -->
        <Exec func="PUB:GetLogNo"/>
        <If condition="IS_EQUAL_STRING($ActTyp,0)">  <!--普通对公-->
          <Set>HTxnCd=451610</Set>
          <Set>BusTyp=FTT60</Set>
          <Set>CrpCod=PFT999999999</Set>
          <Set>ActFlg=2</Set>
          <Set>ActSqn=$Act01Sq</Set>
          <Set>ActNod=$CtlNod</Set>
          <Set>Smr=税款缴纳冲正</Set>
        </If>
        <Else>
          <Set>HTxnCd=471410</Set>
          <Set>BusTyp=FTT51</Set>
          <Set>CnlTyp=L</Set>
          <Set>ActFlg=$ActTyp</Set>
          <Set>Mask=9116</Set>
          <Set>TxnSub=001</Set>
          <Set>ActNo=$RcvAct</Set>
          <Set>ActSeq=$ActSqn</Set>
          <Set>VchChk=0</Set>
          <Set>FeeCod=0000</Set>
          <Set>FeeSeq=$Act01Sq</Set>
          <Set>FeeBr=$CtlNod</Set>
          <Set>BilSts=U</Set>
          <Set>PrtFlg=0</Set>
        </Else>
        <Set>BilSts=U</Set>
        <Set>OIFlag=1</Set>
        <Set>TxnTyp=C</Set>
        <Exec func="PUB:InsertRecord">
          <Arg name="TblNam" value="PftTxnJnl446"/>
        </Exec>
        <Exec func="PUB:CallHostAcc" error="IGNORE">  <!--上主机系统抹账 -->
          <Arg name="HTxnCd" value="$HTxnCd"/>
          <Arg name="ObjSvr" value="SHSTPUB1"/>
        </Exec>
        <Switch expression="~RetCod">
          <Case value="-1">  <!--上送主机超时-->
            <Set>BilSts=T</Set>
            <Set>RspCod=PFT999</Set>
            <Set>RtnCod=3802</Set>
            <Break/>
          </Case>
          <Case value="0"> <!--交易成功-->
            <Set>BilSts=S</Set>
            <Set>RspCod=000000</Set>
            <Set>RtnCod=0000</Set>
            <Break/>
          </Case>
          <Default>
            <Set>BilSts=F</Set>
            <Delete>TckNo</Delete>
            <Set>RspCod=PFT999</Set>
            <Set>RtnCod=3802</Set>
            <Break/>
          </Default>
        </Switch>
        <Exec func="PUB:UpdateRecord">   <!--修改冲正流水-->
          <Arg name="TblNam" value="PftTxnJnl446"/>
          <Arg name="CndSts" value="UpdTxnJnl"/>
        </Exec>
        <If condition="IS_EQUAL_STRING($BilSts,S)">   <!--冲正交易成功、则修改原扣款交易-->
          <Set>BilSts=C</Set>
          <Set>LogNo=$BLogNo</Set>
          <Exec func="PUB:ExecSql">   <!--更新原流水表为冲正-->
            <Args>
              <Arg name="SqlCmd" value="UpdJnlSts"/>
            </Args>
          </Exec>
        </If>
        <Break/>
      </Case>
      <Case value="A"/> <!-- 中央财政对公 -->
      <Case value="B"> <!-- 中央财政对公 -->
        <Set>RspCod=PFT002</Set>
        <Set>RtnCod=3703</Set>
        <Break/>
      </Case>
    </Switch>
  </Macro>
  
  <Macro name="SendLoginMsg">  	<!--发送文件接口登陆报文-->
    <Set>@MSG.SNC=1</Set>
    <Set>ImCod=login</Set>
    <Set>ImBod=STRCAT($BnkCod,|,$UserPs)</Set>
    <Set>ImLen=ADDCHAR(STRLEN($ImBod),8,0,1)</Set>
    <Exec func="PUB:CallThirdOther" error="IGNORE"> 
      <Arg name="HTxnCd" value="465921"/>
      <Arg name="ObjSvr" value="STDEPFT2"/>
    </Exec>
    <If condition="INTCMP(~RetCod,3,-1)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=向人行发送文件接口登陆报文超时，请稍后重做交易</Set>
      <Return/>
    </If>
    <If condition="IS_NOEQUAL_STRING($TRspCd,sdack)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RtnCod=SUBSTR($ImBod,1,4)</Set>
      <Exec func="PUB:CodeSwitching" error="IGNORE">
        <Arg name="DatSrc"  value="PFTCSW"/>
        <Arg name="SourNam" value="RtnCod"/>
        <Arg name="DestNam" value="RspMsg"/>
        <Arg name="TblNam"  value="RtnCodToRspMsg"/>
      </Exec>
      <Return/>
    </If>
  </Macro>
  
  <Macro name="ApplyFile">	<!--向人行发送申请文件请求-->
<!--第一次发送登陆保文-->  	
  	<Quote name="SendLoginMsg"/>
<!--登陆报文成功后，第二次发明细请求报文-->
    <Set>ImBod=$ApyFil</Set>
    <Set>ImCod=sfreq</Set>
    <Set>ImLen=ADDCHAR(STRLEN($ImBod),8,0,1)</Set>
    <Set>@MSG.SNC=0</Set>
    <Exec func="PUB:CallThirdOther" error="IGNORE"> 
      <Arg name="HTxnCd" value="465921"/>
      <Arg name="ObjSvr" value="STDEPFT2"/>
    </Exec>
    <If condition="INTCMP(~RetCod,3,-1)">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=申请明细文件下载超时，请稍后重做交易</Set>
      <Return/>
    </If>
    <If condition="IS_NOEQUAL_STRING($TRspCd,sdack)">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RtnCod=SUBSTR($ImBod,1,4)</Set>
      <Exec func="PUB:CodeSwitching" error="IGNORE">
        <Arg name="DatSrc"  value="PFTCSW"/>
        <Arg name="SourNam" value="RtnCod"/>
        <Arg name="DestNam" value="RspMsg"/>
        <Arg name="TblNam"  value="RtnCodToRspMsg"/>
      </Exec>
      <Return/>
    </If>
  </Macro>
  
  <Macro name="MakeAndSendFile">  <!--生成、加押压缩并且传送退库退回文件给人行-->
		<Set>ThdFil=STRCAT(SET204_,$BnkCod,_0001.,$ActDat)</Set>  				<!--发送给人行的结果文件名-->
    <Set>IcsFil=STRCAT($ThdFil,.txt)</Set>										 				<!--数据库导出的文件名-->
    <Set>SndFil=STRCAT(GETENV(WORKDIR),/,$IcsSndDir,$ThdFil)</Set>	<!--带路径发送给人行的结果文件-->
    <Set>DatFil=STRCAT(GETENV(WORKDIR),/,$IcsSndDir,$IcsFil)</Set>  <!--带路径数据库导出的文件-->
    <Exec func="PFT:Pft204FromDb">
      <Args>
        <Arg name="PftFil" value="$PftFil"/>           <!--退库处理结果文件-->
        <Arg name="DatFil" value="$DatFil"/>
      </Args>
    </Exec>
    
    <Set>FilSiz=GETFILESIZE($DatFil)</Set>
    <If condition="INTCMP($FilSiz,3,0)">				<!--原始文件大小等于0-->
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=退库退回数据文件为空，不发送</Set>
      <Return/>    		
    </If>
    
    <Set>SrcFil=$DatFil</Set>								  <!--文件加押-->
    <Set>DesFil=STRCAT($SndFil,.dat)</Set>
    <Set>MsgKnd=14</Set>		<!--加押-->
    <Exec func="PUB:CallThirdOther" error="IGNORE"> 
      <Arg name="HTxnCd"  value="465923"/>
      <Arg name="ObjSvr"   value="STDEPFT3"/>
    </Exec>
    <If condition="INTCMP(~RetCod,3,-1)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=退库退回明细文件加押超时，请稍后重做交易</Set>
      <Return/>
    </If>
    <If condition="IS_NOEQUAL_STRING($TRspCd,000000)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=退库退回数据文件加押失败</Set>
      <Return/>
    </If>
    
    <Set>SrcFil=$DesFil</Set>								  <!--压缩文件-->
    <Set>DesFil=$SndFil</Set>
    <Set>MsgKnd=13</Set>		<!--压缩-->
    <Set>MsgLen=200</Set>
    <Exec func="PUB:CallThirdOther" error="IGNORE"> 
      <Arg name="HTxnCd"  value="465923"/>
      <Arg name="ObjSvr"   value="STDEPFT3"/>
    </Exec>
    <If condition="INTCMP(~RetCod,3,-1)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=退库退回明细文件压缩超时，请稍后重做交易</Set>
      <Return/>
    </If>
    <If condition="IS_NOEQUAL_STRING($TRspCd,000000)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=退库退回数据文件压缩失败</Set>
      <Return/>
    </If>      
    
  	<Quote name="SendLoginMsg"/>  <!--第一次发送登陆报文-->  	
  	
  	<Set>FilSiz=GETFILESIZE($SndFil)</Set>						<!--取加押\压缩后文件大小-->
  	<Set>ImBod=STRCAT($ThdFil,|,$FilSiz)</Set>
    <Set>ImCod=shead</Set>												    <!--发送文件名和长度报文-->
    <Set>ImLen=ADDCHAR(STRLEN($ImBod),8,0,1)</Set>
    <Set>@MSG.SNC=1</Set> <!--有后续交易-->
	  <Exec func="PUB:CallThirdOther" error="IGNORE"> 
      <Arg name="HTxnCd" value="465921"/>
      <Arg name="ObjSvr" value="STDEPFT2"/>
    </Exec>
    <If condition="INTCMP(~RetCod,1,0)">
    	<Exec func="PUB:RollbackWork" error="IGNORE"/>
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RspMsg=发送文件超时，请稍后重做交易</Set>
      <Return/>
    </If>
    <If condition="IS_NOEQUAL_STRING($TRspCd,sdack)">
      <Set>MsgTyp=E</Set>
      <Set>RspCod=PFT999</Set>
      <Set>RtnCod=SUBSTR($ImBod,1,4)</Set>
      <Exec func="PUB:CodeSwitching" error="IGNORE">
        <Arg name="DatSrc"  value="PFTCSW"/>
        <Arg name="SourNam" value="RtnCod"/>
        <Arg name="DestNam" value="RspMsg"/>
        <Arg name="TblNam"  value="RtnCodToRspMsg"/>
      </Exec>
      <!--Return/-->
    </If>
    
    <Exec func="PUB:OpenFile">				<!--打开文件准备读取-->
      <Arg name="FileName"   value="$SndFil"/>
      <Arg name="Mode"       value="r"/>
      <Arg name="ObjectName" value="FilPnt"/>
    </Exec>

		<Set>MaxSiz=102400</Set> <!--每次读取大小-->
		<Set>SekPnt=0</Set>				<!--文件读取的位置-->
		<Set>OvrFlg=0</Set>			<!--文件读取结束标志-->		 
    <While>
    	<If condion="INTCMP($FilSiz,2,$MaxSiz)">	<!--文件大小小于等于102400，一次性读完-->
    		<Set>GetSiz=$FilSiz</Set>
    		<Set>OvrFlg=1</Set>
    	</If>
    	<Else>
    		<Set>GetSiz=$MaxSiz</Set>
    		<Set>FilSiz=SUB($FilSiz,$MaxSiz)</Set>
    		<Set>SekPnt=Add(SekPnt,$MaxSiz)</Set>
    	</Else>		 
    	
      <Set>ImCod=sfile</Set>
      <Set>ImBod=STRCAT($SndFil,|,$SekPnt)</Set>   <!--传送文件名及文件读取的起始位置给发送模块-->
      <Set>ImLen=ADDCHAR($GetSiz,8,0,1)</Set>	 		 <!--文件读取的大小-->
      <Set>@MSG.SNC=1</Set>				<!--有后续交易-->
      <Exec func="PUB:CallThirdOther" error="IGNORE"> 
        <Arg name="HTxnCd" value="465921"/>
        <Arg name="ObjSvr" value="STDEPFT2"/>
      </Exec>
      <If condition="INTCMP(~RetCod,3,-1)">
      	<Exec func="PUB:RollbackWork" error="IGNORE"/>
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFT999</Set>
        <Set>RspMsg=发送文件超时，请稍后重做交易</Set>
        <Return/>
      </If>
      <If condition="IS_NOEQUAL_STRING($TRspCd,sdack)">
        <Set>MsgTyp=E</Set>
        <Set>RspCod=PFT999</Set>
        <Set>RtnCod=SUBSTR($ImBod,1,4)</Set>
        <Exec func="PUB:CodeSwitching" error="IGNORE">
          <Arg name="DatSrc"  value="PFTCSW"/>
          <Arg name="SourNam" value="RtnCod"/>
          <Arg name="DestNam" value="RspMsg"/>
          <Arg name="TblNam"  value="RtnCodToRspMsg"/>
        </Exec>
        <Return/>
      </If>
		 
		 <If condition="INTCMP(OvrFlg,3,1)">				<!--文件读取结束-->
      	 <Set>ImCod=sover</Set>
      	 <Set>ImBod=</Set>
         <Set>ImLen=00000000</Set>
         <Set>@MSG.SNC=0</Set>
         <Exec func="PUB:CallThirdOther" error="IGNORE"> 
           <Arg name="HTxnCd" value="465921"/>
           <Arg name="ObjSvr" value="STDEPFT2"/>
         </Exec>
         <If condition="INTCMP(~RetCod,3,-1)">
           <Set>MsgTyp=E</Set>
           <Set>RspCod=PFT999</Set>
           <Set>RspMsg=发送文件超时，请稍后重做交易</Set>
           <Return/>
         </If>
         <If condition="IS_NOEQUAL_STRING($TRspCd,sdack)">
           <Set>MsgTyp=E</Set>
           <Set>RspCod=PFT999</Set>
           <Set>RtnCod=SUBSTR($ImBod,1,4)</Set>
           <Exec func="PUB:CodeSwitching" error="IGNORE">
             <Arg name="DatSrc"  value="PFTCSW"/>
             <Arg name="SourNam" value="RtnCod"/>
             <Arg name="DestNam" value="RspMsg"/>
             <Arg name="TblNam"  value="RtnCodToRspMsg"/>
           </Exec>
           <Return/>
         </If>
         <Break/>
      </If>
    </While>
    
    <Set>FilSts=5</Set>   <!--更新状态为"退库退回处理完成"-->
    <Exec func="PUB:UpdateRecord">
      <Arg name="TblNam" value="PftFilInf446"/>
      <Arg name="CndSts" value="UpdFilInf"/>
    </Exec>
  </Macro>
</FrontTab>
