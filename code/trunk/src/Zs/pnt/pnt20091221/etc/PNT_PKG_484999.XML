<?xml version='1.0' encoding='ISO-8859-1'?>
<Package>
	<Define>
		<Macro name="Def_TxnChk"><!--功能检查相关语句定义-->
			<DynSentence name="Chk_CrpAgr"><!--检查单位协议 -->
				<Sentence>
				  select a.BrNo,a.BBusTyp,a.TActNo,a.CrpCod,a.TxnDir,b.StlAct from savcrpagr a, savcrpinf b where a.CAgtNo='%s' and SvrSts='1' and b.CrpCod=a.CrpCod and a.brno=b.brno
				</Sentence>
				<Fields>CAgtNo|</Fields>
			</DynSentence>
			<!--DynSentence name="Chk_CrpSignIn"><检查单位签到状态>
				<Sentence>
					SELECT 'Y' YN from table(values(1)) as anony
					where Exists(select * from savthdinf where CAgtNo='%s' and status='1')
				</Sentence>
				<Fields>CAgtNo|</Fields>
			</DynSentence-->
		</Macro>
		<Macro name="Do_TxnChk"><!--功能检查动作定义-->
			<Set>inTxnCnl=STRCAT(|,$TxnCnl,|)</Set>
			<If condition="OR(ISNULL(@PARA.ChkCrp),ISNULL(@PARA.CnlLst),ISNULL(@PARA.ChkPsn),ISNULL(@PARA.IsSignIn))">
				<Set>RspCod=478600</Set><!--应用参数未定义-->
				<Set>RspMsg=受理渠道 </Set>
				<Return/>
			</If>
			<If condition="INTCMP(GETSTRPOS(@PARA.CnlLst,$inTxnCnl),1,0)">
				<Set>RspCod=478601</Set><!--返回$TxnCnl渠道不允许-->
				<Return/>
			</If>
			<If condition="@PARA.ChkCrp=1">
				<Exec func="PUB:ReadRecord" error="IGNORE">
					<Arg name="SqlCmd" value="Chk_CrpAgr"/>
				</Exec>
				<If condition="~RetCod=-1">
					<Set>RspCod=478399</Set>
					<Set>RspMsg=查询单位协议时系统错误</Set>
					<Return/>
				</If>
				<If condition="~RetCod=-2">
					<Set>RspCod=478602</Set><!--返回无有效单位协议-->
					<Return/>
				</If>
			</If>
			<!--If condition="@PARA.IsSignIn=1">
				<Exec func="PUB:ReadRecord" error="IGNORE">
					<Arg name="SqlCmd" value="Chk_CrpSignIn"/>
				</Exec>
				<If condition="~RetCod=-1">
					<Set>RspCod=478399</Set>
					<Set>RspMsg=检查单位签到状态时系统错误</Set>
					<Return/>
				</If>
				<If condition="~RetCod=-2">
					<Set>RspCod=478605</Set><返回该单位未签到>
					<Return/>
				</If>
			</If-->
		</Macro>
	</Define>

	<!-- 批量文件大小通道代扣 -->
	<Function name="AFE_PNTBatByCnl" desc="文件大小通道批扣">
		<Quote name="Def_TxnChk"/>
		<DynSentence name="UpdOldAct">  <!--旧账号转换 -->
			<Sentence>
				UPDATE pntbatrec a
				Set ActNo=(Select ActNo FROM savoldact WHERE OldAct=a.ActNo)
				WHERE DskNo='%s' and ActNo in (SELECT OldAct FROM savoldact WHERE OldAct=a.ActNo)
			</Sentence>
			<Fields>DskNo|</Fields>
		</DynSentence>
		<DynSentence name="UpdCusAgtInf2">  <!--检查有效的对私客户协议 -->
			<Sentence>
				UPDATE pntbatrec a
				SET RecSts='Y'
				WHERE (TCusId,ActNo) IN (SELECT CusId,ActNo FROM savcusagt WHERE CAgtNo='%s')
				AND CAgtNo='%s'
			</Sentence>
			<Fields>CAgtNo|CAgtNo|</Fields>
		</DynSentence>
		<DynSentence name="UpdNoAgr">  <!-- 更新没通过协议检查的记录 -->
			<Sentence>
				UPDATE pntbatrec a
				SET RecSts='X'
				WHERE RecSts!='Y' AND CAgtNo='%s'
			</Sentence>
			<Fields>CAgtNo|</Fields>
		</DynSentence>
		<DynSentence name="DeleteInf"> 
			<Sentence>
				Delete from pubbatinf where BrNo='%s' AND DskNo='%s' and Status!='N'
			</Sentence>
			<Fields>BrNo|DskNo|</Fields>
		</DynSentence>
		<Process>

			<Set>TxnMod=1</Set>
			<Set>CmtFlg=0</Set>
			<Exec func="PUB:GetAppInfo"/>
			<Quote name="Do_TxnChk"/>  
			
			<Set>ObjSvr=@PARA.ObjSvr</Set>
			<Set>FTxnCd=@PARA.FTxnCd</Set><!--后续交易(用于后续操作并通知前端批次完成的)-->
			<Set>BrNo=$BrNo</Set>   <!--入账分行号-->
			<Set>ActNod=$NodNo</Set>  <!--账务网点号-->
			<Set>TrdTbl=@PARA.TrdTbl</Set>
			<!--Set>NamChk=1</Set>         不需要检查户名-->
			<Set>NamChk=0</Set>         <!--需要检查户名-->
			<Set>TxnSqn=600</Set>
			<Set>TxnMod=1</Set>         <!-- 需要单笔上送 -->
			<Set>CmtFlg=0</Set>         <!-- 大小通道发送状态 -->
			<Set>UpdFlg=N</Set>         <!-- 更新标志 -->
			<Set>PayMod=0</Set>
			<Set>HPrChk=0</Set>
			<Set>HLsChk=0</Set>
			<Set>CActNo=$TActNo</Set>
			<Set>TxnCnl=PNT</Set>
			<Set>IsTxn=Y</Set>
			<Set>HTxnSt=U</Set>
			<Set>RsvFld=$CAgtNo</Set>
			<Set>HTxnCd=@PARA.HTxnCd</Set>
			<Set>Reckey=STRCAT($AplCls,:,$TxnCod,:,$DskNam)</Set>
			<!--If condition="INTCMP($TxnDir,3,1)">  <代付>
			   <Set>CActNo=$StlAct</Set>
			</If-->
			
			<Exec func="PUB:Lock" error="IGNORE"><!-- 通过加锁控制批次状态 -->
				<Arg name="RecKey" value="$Reckey"/>
				<Arg name="TimOut" value="30"/>
				<Arg name="AutoUnlock" value="yes"/>
			</Exec>
			<Exec func="PUB:CollateRepeatRecord"/>
			<Exec func="PUB:RegisterBatchDiskNo"/><!--登记批量信息到pubbatinf-->
			<!--交易解锁-->
			<Exec func="PUB:Unlock">
				<Arg name="RecKey" value="$Reckey"/>
			</Exec>
			
			<Set>RcvFil=$DskNam</Set>
			<!--<Set>LclFil=STRCAT($RcvFil,.,$BrNo)</Set>-->
			<Set>LclFil=$RcvFil</Set>
			<Set>LclDir=dat/pnt/recv</Set>
			<Set>ObjFil=$LclFil</Set>
			
			<If condition="@PARA.RcvMod=1">
				<Exec func="PUB:FtpGet" error="IGNORE">
					<Arg name="FtpId" value="@PARA.FtpIdRcv"/>
				</Exec>
				<If condition="~RetCod!=0">
					<Exec func="PUB:ExecSql">
					  <Arg name="SqlCmd" value="DeleteInf"/>
				  </Exec>
				  <Set>RspCod=461597</Set>
				  <Set>RspMsg=取文件失败</Set>
				  <Return/>
			  </If>				
			</If>
			<!--
			<Else>
				<Set>LclDir=term/recv</Set>
				<Exec  func="PUB:CopyFile">
					<Arg name="SrcFil" value="STRCAT(dat/term/recv/,$RcvFil)"/>
					<Arg name="ObjFil" value="STRCAT(dat/pnt/recv/plks,$LclFil)"/>
				</Exec>
			</Else>
			<Exec func="PUB:PasteBatchFile" error="IGNORE">   <外部文件到批量文件目录>
				<Arg name="PathIn" value="dat/pnt/recv/plks"/>
				<Arg name="FileNameIn" value="$LclFil"/>
				<Arg name="FileNameCurr" value="01"/>
			</Exec>
			<If condition="~RetCod=-1">
			  <Exec func="PUB:ExecSql">
					     <Arg name="SqlCmd" value="DeleteInf"/>
				</Exec>			
				<Set>RspCod=478007</Set>
				<Set>RspMsg=拷贝文件失败</Set>
				<Return/>
			</If>   -->
      <Set>BSmr=STRCAT(9,$BBusTyp)</Set>
			<Set>SeqNo=00001</Set>
			<Set>RecSts=0</Set> <!--RecSts 0:初始化 1:成功 2:失败-->
			<!--
			<Exec func="PUB:ParseBatchFile"  error="IGNORE">   <文件拆分入库>
				<Arg name="FormatName"     value="@PARA.RcvFmt"/>   <文件格式>
				<Arg name="TableName"      value="pntbatrec"/>
				<Arg name="FileNameCurr"   value="01"/>
				<Arg name="ApplyLogNoFlag" value="1"/>
			</Exec>-->

			<Set>DatFil=STRCAT( $LclDir,/plks/,$LclFil )</Set>
			<Exec func="PUB:OpenFile">
				<Arg name="FileName"   value="$DatFil"/>
				<Arg name="Mode"       value="r"/>
			</Exec>
<!--读取文件头-->

			<Exec func="PUB:GetFileLineAndParse" error="IGNORE">
				<Arg name="ConfigName" value="BatFormat"/>
				<Arg name="RootName"   value="BATCH"/>
				<Arg name="NodeName"   value="Process"/>
				<Arg name="AttrName"   value="name"/>
				<Arg name="AttrValue"  value="PLKSHEAD"/>
				<Arg name="MaxLen"     value="100000"/>
			</Exec>		
			<If condition="INTCMP($TotNum,3,0)">
				<Set>MsgTyp=N</Set>
				<Set>RspCod=000000</Set>
				<Return/>
			</If>
			<Set>FileNam=$DskNam</Set>
			<Exec func="PUB:InsertRecord">   
			  <Args>
			     <Arg name="tablename" value="pntfilctl"/>
			  </Args>
		  </Exec>	
			<!--读空行-->

			<Exec func="PUB:GetFileLine" error="IGNORE">
        <Arg name="FieldName" value="DatFNms"/>
      </Exec>
      <!--
			<Set>DatNum=0</Set>
			<While>
				<If condition="INTCMP($TotNum,3,$DatNum)">
					<Break/>
				</If>
				<Exec func="PUB:GetFileLineAndParse" error="IGNORE">
					<Arg name="ConfigName" value="BatFormat"/>
					<Arg name="RootName"   value="BATCH"/>
					<Arg name="NodeName"   value="Process"/>
					<Arg name="AttrName"   value="name"/>
					<Arg name="AttrValue"  value="FCGKTITLE"/>
					<Arg name="MaxLen"     value="100000"/>
				</Exec>-->

				<Set>DtlNum=0</Set>
				<While>
					<If condition="INTCMP($TotNum,3,$DtlNum)">
						<Break/>
					</If>
					<Exec func="PUB:GetFileLineAndParse" error="IGNORE">
						<Arg name="ConfigName" value="BatFormat"/>
						<Arg name="RootName"   value="BATCH"/>
						<Arg name="NodeName"   value="Process"/>
						<Arg name="AttrName"   value="name"/>
						<Arg name="AttrValue"  value="PLKSDATA"/>
						<Arg name="MaxLen"     value="100000"/>
					</Exec>
					<Set>LogNo=STRCAT($DskNo,$DtlNum)</Set>
				  <Exec func="PUB:InsertRecord">   
			     <Args>
				       <Arg name="tablename" value="pntbatrec"/>
			     </Args>
		      </Exec>
		      <Set>SeqNo=ADDCHAR(ADD($SeqNo,1),5,0,1)</Set>
					<Set>DtlNum=ADD($DtlNum,1)</Set>
				</While>
				<!--<Set>DatNum=ADD($DatNum,1)</Set>
			</While>-->
			
      
      <If condition="~RetCod!=0">
				<Exec func="PUB:DeleteDiskNo"/>
				<Exec func="PUB:ExecSql">
					<Arg name="SqlCmd" value="DeleteInf"/>
				</Exec>
				<!--Set>RspCod=481299</Set-->
				<Return/>
			</If>

		
			<If condition="@PARA.ChkPsn=1">
				<Exec func="PUB:ExecSql" error="IGNORE">
					<Arg name="SqlCmd" value="UpdCusAgtInf2"/>
				</Exec>
				<If condition="~RetCod=-1">
					<Exec func="PUB:DeleteDiskNo" />
					<Return />
				</If>
				<ElseIf condition="~RetCod=-2">
					<Set>RspCod=000000</Set>
				</ElseIf>

				<!-- 更新没通过协议检查的记录 -->
				<Exec func="PUB:ExecSql" error="PUB:DeleteDiskNo">
					<Arg name="SqlCmd" value="UpdNoAgr"/>
				</Exec>
			</If>
			<!--修改本批次为预备确认状态，等待启动大小通道 -->
			<Exec func="PUB:UpdateBatchStatus" error="PUB:DeleteDiskNo">
				<Arg name="ChkFlg" value="P"/>
			</Exec>
			<Exec func="PUB:DeleteDiskNo"/>
		</Process>
	</Function>
</Package>

