<?xml version='1.0' encoding='ISO-8859-1'?>
<Package>
	<ConfigDeclare>
		<Config name="OPFCSW"      value="etc/LOT_CSW_441999.XML"/>
		<Config name="LOTFILFMT"  value="etc/LOT_FMT_441999.XML" />
	</ConfigDeclare>
	<PackageDeclare>
		<Package name="LOT_PKG" value="etc/LOT_PKG.XML"/>
	</PackageDeclare>
	<BusDefDeclare>
		<Busdef name="RcvPth"    value="dat/lot" />
		<Busdef name="DealId"    value="141" /> <!--运营商编号-->
	</BusDefDeclare>
	<TableDeclare>
		<Table name="afetxnjnl"     value="afetxnjnl"/>    <!--业务流水表-->
		<Table name="lotsyscfg"     value="lotsyscfg"/>    <!--平台参数表-->
		<Table name="lotcusinf"     value="lotcusinf"/>    <!--福彩用户表-->
		<Table name="lotautpln"     value="lotautpln"/>    <!--定投计划表-->
		<Table name="lottxnjnl"     value="lottxnjnl"/>    <!--投注流水表-->
		<Table name="lotchkctl"     value="lotchkctl"/>    <!--对账控制表-->
		<Table name="lotchkdtl"     value="lotchkdtl"/>    <!--对账明细表-->
		<Table name="lotdrwtbl"     value="lotdrwtbl"/>    <!--奖期信息表-->
		<Table name="lotprzinf"     value="lotprzinf"/>    <!--开奖公告表-->
		<Table name="lotdrwtbl"     value="lotdrwtbl"/>    <!--奖期信息表-->
		<Table name="lotprzinf"     value="lotprzinf"/>    <!--开奖公告表-->
		<Table name="lotprzctl"     value="lotprzctl"/>    <!--中奖记录控制表-->
		<Table name="lotprzdtl"     value="lotprzdtl"/>    <!--中奖记录明细表-->
		<Table name="lotawddtl"     value="lotawddtl"/>    <!--返奖奖记录明细表-->
	</TableDeclare>

	
	<!--根据与福彩之间的时差获取福彩时间	INPUT:		DealId:运营商ID	OUTPUT:		FcTim:福彩时间YYYYMMDDHHMISS	-->
	<Function name="GetFcTim" desc="根据与福彩之间的时差获取福彩时间">
		<Input>DealId|NodNo|BrNo|</Input>
		<Output>FcTim|</Output>
		<DynSentence name="GetSysCfg" desc="获取系统配置">
			<Sentence>
				select DealId,UsrPam,UsrPas,SigTim,LclTim,LotTim,DiffTm
				from LotSysCfg
				where DealId='%s'
			</Sentence>
			<Fields>DealId|</Fields>
		</DynSentence>
		<Process>
			<!-- 查询系统参数，获取当前本地与福彩系统的时差 -->
			<Exec func="PUB:ReadRecord" error="IGNORE">
               <Arg name="SqlCmd" value="GetSysCfg"/>
            </Exec>
            <If condition="IS_NOEQUAL_STRING(~RetCod,0)">
            	<Set>DiffTm=0</Set><!-- 如果无法获取时差，则默认时差为0 -->
            </If>
            
            <!-- 根据时差计算当前福彩系统时间 -->
            <Set>CurTim=GETDATETIME(YYYYMMDDHHMISS)</Set>
            
            <!-- 技术难题待解决，暂时默认时间差为0 -->
			<Set>SrcDate=$CurTim</Set>
			<Set>DifTim=$DiffTm</Set>
            <Call package="LOT_PKG" function="CalTim" desc="根据时差计算时间"/>
            <Set>FcTim=$DesDate</Set>
            
		</Process>
	</Function>
	
	<!--下载不同的文件并入库
	INPUT:
		FilTyp:文件类型（1：游戏规则文件分类  2：中奖记录文件分类  3:对账文件分类）
		GameId:游戏编号
		DrawId:期号
	OUTPUT:
		DownloadStatus:文件下载状态（0：成功  -1：失败）
		DownloadMsg:文件下载结果描述
	-->
	<Function name="DownloadFile" desc="下载不同的文件并入库">
		<Input>FilTyp|GameId|DrawId|FTxnTm|</Input>
		<Output>DownloadStatus|DownloadMsg|FilTyp|</Output>
		<DynSentence name="GetSysCfg" desc="获取系统配置">
			<Sentence>
				select DealId,UsrPam,UsrPas,SigTim,LclTim,LotTim,DiffTm
				from LotSysCfg
				where DealId='%s'
			</Sentence>
			<Fields>DealId|</Fields>
		</DynSentence>
		<Process>

			<!--发送文件下载地址查询报文，获取文件地址-->
            <Exec func="PUB:CallThirdOther" error="IGNORE">
               <Arg name="HTxnCd" value="237" />
               <Arg name="ObjSvr" value="STHDLOTA" />
            </Exec>
            <If condition="IS_NOEQUAL_STRING(~RetCod,0)">
				<Set>DownloadStatus=-1</Set>
				<Set>DownloadMsg=查询文件下载地址失败</Set>
				<Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($RRspCod,0)">
				<Set>DownloadStatus=-1</Set>
				<Set>DownloadMsg=STRCAT(查询文件下载地址失败[,$RRspCod,])</Set>
				<Return/>
            </If>
            
			<!--发送文件下载报文，下载文件-->
			<Set>FilNam=$Fil</Set>
            <Exec func="PUB:CallThirdOther" error="IGNORE">
               <Arg name="HTxnCd" value="STRCAT(238_,$FilTyp)" />
               <Arg name="ObjSvr" value="STHDLOTA" />
            </Exec>
            <If condition="IS_NOEQUAL_STRING(~RetCod,0)">
				<Set>DownloadStatus=-1</Set>
				<Set>DownloadMsg=下载文件失败</Set>
				<Return/>
            </If>
            <If condition="IS_NOEQUAL_STRING($RRspCod,0)">
				<Set>DownloadStatus=-1</Set>
				<Set>DownloadMsg=STRCAT(下载文件失败[,$RRspCod,])</Set>
				<Return/>
            </If>
            
			<!-- 文件入库 -->
			<Call package="LOT_PKG" function="STRCAT(FileImport,$FilTyp)" desc="文件明细入库"/>
			<If condition="IS_EQUAL_STRING($FileImportStatus,0)">
				<Set>DownloadStatus=0</Set>
				<Set>DownloadMsg=文件下载入库成功</Set>
			</If>
			<Else>
				<Set>DownloadStatus=-1</Set>
				<Set>DownloadMsg=$FileImportMsg</Set>
			</Else>
          	
		</Process>
	</Function>
	
	<!--文件入库
	INPUT:
	OUTPUT:
		FileImportStatus:文件入库状态（0：成功  -1：失败）
		FileImportMsg:文件入库结果描述
	-->
	<Function name="FileImport1" desc="游戏规则文件入库">
		<Output>FileImportStatus|FileImportMsg|</Output>
		<DynSentence name="GetSysCfg" desc="获取系统配置">
			<Sentence>
				select DealId,UsrPam,UsrPas,SigTim,LclTim,LotTim,DiffTm
				from LotSysCfg
				where DealId='%s'
			</Sentence>
			<Fields>DealId|</Fields>
		</DynSentence>
		<Process>
			<Exec func="PUB:InsertRecord">
				<Arg name="TblNam" value="BBBBB"/>
				<Arg name="GrpNam" value="BBBBB"/>
				<Arg name="Ignore" value="0"/>
				<Arg name="FldLst" value="BBBBB"/>
			</Exec>
		</Process>
	</Function>
	
	<!--文件入库
	INPUT:
	OUTPUT:
		FileImportStatus:文件入库状态（0：成功  -1：失败）
		FileImportMsg:文件入库结果描述
	-->
	<Function name="FileImport2" desc="中奖文件入库">
		<Output>FileImportStatus|FileImportMsg|</Output>
		<DynSentence name="InsLotPrzCtl" desc="新增中奖记录控制表">
			<Sentence>
				insert into LotPrzCtl (GameId, DrawId, KenoId, Cipher, BigBon, TotPrz, TxnLog, TLogNo, TermID )
				values('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')
			</Sentence>
			<Fields>GameId|DrawId|KenoId|Cipher|BigBon|TotPrz|TxnLog|TLogNo|TermID|</Fields>
		</DynSentence>
		<DynSentence name="InsLotPrzDtl" desc="新增中奖记录明细表">
			<Sentence>
				insert into LotPrzDtl (GameId, DrawId, KenoId, TxnLog, TLogNo, BetMod, BetMul, class, PrzAmt, BetLin)
				values('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')
			</Sentence>
			<Fields>GameId|DrawId|KenoId|TxnLog|TLogNo|BetMod|BetMul|class|PrzAmt|BetLin|</Fields>
		</DynSentence>
		<DynSentence name="DelLotPrzCtl" desc="删除中奖记录控制表">
			<Sentence>
				delete from LotPrzCtl
				where GameId='%s' and DrawId='%s' and KenoId='%s'
			</Sentence>
			<Fields>GameId|DrawId|KenoId|</Fields>
		</DynSentence>
		<DynSentence name="DelLotPrzDtl" desc="删除中奖记录明细表">
			<Sentence>
				delete from LotPrzDtl
				where GameId='%s' and DrawId='%s' and KenoId='%s'
			</Sentence>
			<Fields>GameId|DrawId|KenoId|</Fields>
		</DynSentence>
		<Process>
		
			<!-- 删除旧记录 -->
			<Exec func="PUB:ExecSql" error="IGNORE">
				<Arg name="SqlCmd"    value="DelLotPrzCtl"/>
			</Exec>
			<Exec func="PUB:ExecSql" error="IGNORE">
				<Arg name="SqlCmd"    value="DelLotPrzDtl"/>
			</Exec>
			
			<!-- 新增记录 -->
			<Set>Cnt=1</Set>
			<While condition="INTCMP($Cnt,2,$BonsCnt)">
				<Delete>ROOT.LotSn</Delete>
				<Delete>ROOT.LogDumpId</Delete>
				<Delete>ROOT.Cipher</Delete>
				<Delete>ROOT.BigBon</Delete>
				<Delete>ROOT.TotPrz</Delete>
				<Delete>ROOT.TLogNo</Delete>
				<Delete>ROOT.TermID</Delete>
				<Delete>ROOT.TxnLog</Delete>
				<Delete>ROOT.BonsNodCnt</Delete>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.LotSn)"/>
					<Arg name="DestName" value="ROOT.LotSn"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.LogDumpId)"/>
					<Arg name="DestName" value="ROOT.LogDumpId"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.Cipher)"/>
					<Arg name="DestName" value="ROOT.Cipher"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.BigBon)"/>
					<Arg name="DestName" value="ROOT.BigBon"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.TotPrz)"/>
					<Arg name="DestName" value="ROOT.TotPrz"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.TLogNo)"/>
					<Arg name="DestName" value="ROOT.TLogNo"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.TermID)"/>
					<Arg name="DestName" value="ROOT.TermID"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.TxnLog)"/>
					<Arg name="DestName" value="ROOT.TxnLog"/>
				</Exec>
				<Exec func="PUB:GetValue">
					<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.BonsNodCnt)"/>
					<Arg name="DestName" value="ROOT.BonsNodCnt"/>
				</Exec>
				<Exec func="PUB:ExecSql" error="IGNORE">
					<Arg name="SqlCmd"    value="InsLotPrzCtl"/>
				</Exec>
				<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
					<Set>FileImportStatus=-1</Set>
					<Set>FileImportMsg=新增中奖控制信息失败</Set>
					<Return/>
				</If>
				
				<!-- 新增明细信息 -->
				<Set>NodCnt=1</Set>
				<While condition="INTCMP($NodCnt,2,$BonsNodCnt)">
					<Delete>ROOT.BetMod</Delete>
					<Delete>ROOT.BetMul</Delete>
					<Delete>ROOT.class</Delete>
					<Delete>ROOT.PrzAmt</Delete>
					<Delete>ROOT.BetLin</Delete>
					<Exec func="PUB:GetValue">
						<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.bonusNode_,$NodCnt,.BetMod)"/>
						<Arg name="DestName" value="ROOT.BetMod"/>
					</Exec>
					<Exec func="PUB:GetValue">
						<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.bonusNode_,$NodCnt,.BetMul)"/>
						<Arg name="DestName" value="ROOT.BetMul"/>
					</Exec>
					<Exec func="PUB:GetValue">
						<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.bonusNode_,$NodCnt,.class)"/>
						<Arg name="DestName" value="ROOT.class"/>
					</Exec>
					<Exec func="PUB:GetValue">
						<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.bonusNode_,$NodCnt,.PrzAmt)"/>
						<Arg name="DestName" value="ROOT.PrzAmt"/>
					</Exec>
					<Exec func="PUB:GetValue">
						<Arg name="SourName" value="STRCAT(ROOT.bonusItem_,$Cnt,.bonusNode_,$NodCnt,.BetLin)"/>
						<Arg name="DestName" value="ROOT.BetLin"/>
					</Exec>
					<Exec func="PUB:ExecSql" error="IGNORE">
						<Arg name="SqlCmd"    value="InsLotPrzDtl"/>
					</Exec>
					<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
						<Set>FileImportStatus=-1</Set>
						<Set>FileImportMsg=新增中奖明细信息失败</Set>
						<Return/>
					</If>
					
					<Set>NodCnt=ADD($NodCnt,1)</Set>
				</While>
			
				<Set>Cnt=ADD($Cnt,1)</Set>
			</While>
			
			<Set>FileImportStatus=0</Set>
			<Set>FileImportMsg=中奖明入库成功</Set>
					
		</Process>
	</Function>
	
	<!--文件入库
	INPUT:
	OUTPUT:
		FileImportStatus:文件入库状态（0：成功  -1：失败）
		FileImportMsg:文件入库结果描述
	-->
	<Function name="FileImport3" desc="对账文件入库">
		<Output>FileImportStatus|FileImportMsg|</Output>
		<DynSentence name="DelLotChkCtl" desc="删除对账控制表中的旧数据">
			<Sentence>
				delete from LotChkCtl
				where GameId='%s' and DrawId='%s' and KenoId='%s'
			</Sentence>
			<Fields>GameId|DrawId|KenoId|</Fields>
		</DynSentence>
		<DynSentence name="DelLotChkDtl" desc="删除对账明细表中的旧数据">
			<Sentence>
				delete from LotChkDtl
				where GameId='%s' and DrawId='%s' and KenoId='%s'
			</Sentence>
			<Fields>GameId|DrawId|KenoId|</Fields>
		</DynSentence>
		<DynSentence name="InsLotChkCtl" desc="增加对账控制表数据">
			<Sentence>
				insert into LotChkCtl (ChkDat, GameId, DrawId, KenoId, TotNum, TotAmt, ChkFlg, ChkTim)
				values('%s','%s','%s','%s','%s','%s','%s','%s')
			</Sentence>
			<Fields>ChkDat|GameId|DrawId|KenoId|TotNum|TotAmt|ChkFlg|ChkTim|</Fields>
		</DynSentence>
		<DynSentence name="InsLotChkDtl" desc="增加对账明细表数据">
			<Sentence>
				insert into LotChkDtl (ChkDat, GameId, DrawId, KenoId, SeqNo, SchId, LotNam, TxnLog, PlayId, TxnTim, TxnAmt, ChkFlg, ChkTim)
				values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')
			</Sentence>
			<Fields>ChkDat|GameId|DrawId|KenoId|SeqNo|SchId|LotNam|TxnLog|PlayId|TxnTim|TxnAmt|ChkFlg|ChkTim|</Fields>
		</DynSentence>
		<Process>
			<!-- 对账文件不单独处理一个keno期 -->
			<Set>KenoId= </Set>
			
			<!-- 删除对账控制表和对账明细表中对应的数据 -->
			<Exec func="PUB:ExecSql" error="IGNORE">
				<Arg name="SqlCmd"    value="DelLotChkCtl"/>
			</Exec>
			<Exec func="PUB:ExecSql" error="IGNORE">
				<Arg name="SqlCmd"    value="DelLotChkDtl"/>
			</Exec>
			
			<!-- 新增对账控制表 -->
			<Set>ChkDat=GETDATETIME(YYYYMMDD)</Set><!-- 对账日期 -->
			<Set>TotNum=$sucessNum</Set>
			<Set>TotAmt=$totalMoney</Set>
			<Set>ChkFlg=0</Set>
			<Set>ChkTim= </Set>
			<Set>KenoId= </Set>
			<Exec func="PUB:ExecSql" error="IGNORE">
				<Arg name="SqlCmd"    value="InsLotChkCtl"/>
			</Exec>
			<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
				<Set>FileImportStatus=-1</Set>
				<Set>FileImportMsg=新增对账控制信息失败</Set>
				<Return/>
			</If>
				
			<If condition="IS_EQUAL_STRING($IsKeno,Y)">
				<Set>Cnt=1</Set>
				<While condition="INTCMP($Cnt,2,$RecNum)">
					<Set>SubCnt=1</Set>
					<Delete>ROOT.KenoId</Delete>
					<Exec func="PUB:GetValue">
						<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.KenoId)"/>
						<Arg name="DestName" value="ROOT.KenoId"/>
					</Exec>
					<While>
						<Delete>ROOT.Seq</Delete>
						<Delete>ROOT.SchId</Delete>
						<Delete>ROOT.LotNam</Delete>
						<Delete>ROOT.TxnLog</Delete>
						<Delete>ROOT.playId</Delete>
						<Delete>ROOT.TxnTim</Delete>
						<Delete>ROOT.TxnAmt</Delete>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.SeqNo)"/>
							<Arg name="DestName" value="ROOT.SeqNo"/>
						</Exec>
						<If condition="IS_EQUAL_STRING($ROOT.SeqNo,)">
							<Break/>
						</If>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.SchId)"/>
							<Arg name="DestName" value="ROOT.SchId"/>
						</Exec>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.LotNam)"/>
							<Arg name="DestName" value="ROOT.LotNam"/>
						</Exec>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.TxnLog)"/>
							<Arg name="DestName" value="ROOT.TxnLog"/>
						</Exec>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.playId)"/>
							<Arg name="DestName" value="ROOT.playId"/>
						</Exec>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.TxnTim)"/>
							<Arg name="DestName" value="ROOT.TxnTim"/>
						</Exec>
						<Exec func="PUB:GetValue">
							<Arg name="SourName" value="STRCAT(ROOT.Rec_,$Cnt,.SubRec_,$SubCnt,.TxnAmt)"/>
							<Arg name="DestName" value="ROOT.TxnAmt"/>
						</Exec>
						<Exec func="PUB:ExecSql" error="IGNORE">
							<Arg name="SqlCmd"    value="InsLotChkDtl"/>
						</Exec>
						<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
							<Set>FileImportStatus=-1</Set>
							<Set>FileImportMsg=STRCAT(新增对账明细信息失败[,$DrawId,-,$KenoId,])</Set>
							<Return/>
						</If>
						<Set>SubCnt=ADD($SubCnt,1)</Set>
					</While>
					<Set>Cnt=ADD($Cnt,1)</Set>
				</While>
			</If>
			<Else>
				
				<Exec func="PUB:InsertRecord" error="IGNORE">
					<Arg name="TblNam"    value="lotchkdtl"/>
					<Arg name="GrpNam"    value="Rec"/>
					<Arg name="Ignore"    value="1"/>
					<Arg name="FldLst"    value="ChkDat|GameId|DrawId|KenoId|ChkFlg|ChkTim|"/>
				</Exec>
				<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
					<Set>FileImportStatus=-1</Set>
					<Set>FileImportMsg=新增对账明细信息失败</Set>
					<Return/>
				</If>
			</Else>
			
			<Set>FileImportStatus=0</Set>
			<Set>FileImportMsg=对账信息入库成功</Set>
			
		</Process>
	</Function>
	
	<!--计算轧差
	INPUT:
	OUTPUT:
		CalStat:轧差状态（0：成功  -1：失败）
		CalMsg:轧差结果描述
	-->
	<Function name="CalcLotDifAmt" desc="计算轧差">
		<Output>CalStat|CalMsg|</Output>
		<DynSentence name="CalcLotDifAmt" desc="计算轧差">
			<Sentence>
				select GameId, DrawId, KenoId, TotAmt, PrzAmt
				from LotDrwTbl 
				where PrzAmt!='' and TotAmt!='' and ChkFlg='2' and FlwCtl='10' and KenoId in ('','AAAAA')
					and (DifAmt='' or DifFlg='')
			</Sentence>
			<Fields></Fields>
		</DynSentence>
		<DynSentence name="UpdLotDifAmt" desc="更新轧差">
			<Sentence>
				update LotDrwTbl
				set DifAmt='%s', DifFlg='%s'
				where GameId='%s' and DrawId='%s' and KenoId='%s'
			</Sentence>
			<Fields>DifAmt|DifFlg|GameId|DrawId|KenoId|</Fields>
		</DynSentence>
		<DynSentence name="QryUnPrzDrw" desc="查询未汇总返奖的记录">
			<Sentence>
				select GameId, DrawId 
				from LotDrwTbl 
				where KenoId='AAAAA' and PrzAmt='' and FlwCtl!='10'
			</Sentence>
			<Fields></Fields>
		</DynSentence>
		<DynSentence name="StatUnPrzDrw" desc="统计Keno期未返奖的数量">
			<Sentence>
				select count(*) UnPrzCnt 
				from LotDrwTbl 
				where GameId='%s' and DrawId='%s' and PrzAmt='' and FlwCtl!='10' and KenoId != 'AAAAA'
			</Sentence>
			<Fields>GameId|DrawId|</Fields>
		</DynSentence>
		<DynSentence name="StatUnPrzDrw" desc="统计Keno期未返奖的数量">
			<Sentence>
				select count(*) UnPrzCnt 
				from LotDrwTbl 
				where GameId='%s' and DrawId='%s' and PrzAmt='' and FlwCtl!='10' and KenoId != 'AAAAA'
			</Sentence>
			<Fields>GameId|DrawId|</Fields>
		</DynSentence>
		<DynSentence name="SumPrzDrw" desc="汇总返奖金额">
			<Sentence>
				select COALESCE(sum(bigint(PrzAmt)),0) PrzSumAmt
				from LotDrwTbl 
				where GameId='%s' and DrawId='%s' and PrzAmt!='' and FlwCtl='10' and KenoId != 'AAAAA'
			</Sentence>
			<Fields>GameId|DrawId|</Fields>
		</DynSentence>
		<DynSentence name="UpdDrwPrzInf" desc="更新汇总返奖金额">
			<Sentence>
				update LotDrwTbl a
				set a.PrzAmt='%s', a.FlwCtl='10',
					a.PayAmt = (select cast(sum(bigint(case when b.PayAmt = '' then '0' else b.PayAmt end)) as char(15)) from LotDrwTbl b where a.GameId = b.GameId and a.DrawId = b.DrawId and b.KenoId != 'AAAAA'),
					a.PayFlg = ( select (case when exists(select 'Y' from LotDrwTbl c where c.GameId = a.GameId and c.DrawId = a.DrawId and c.KenoId != 'AAAAA' and c.PayFlg = '1') then '1' else '0' end) from LotDrwTbl d where d.GameId=a.GameId and d.DrawId=a.DrawId and d.KenoId='AAAAA')
				where a.GameId='%s' and a.DrawId='%s' and a.KenoId = 'AAAAA'
			</Sentence>
			<Fields>PrzSumAmt|GameId|DrawId|</Fields>
		</DynSentence>
		<Process>
		
			<!-- 处理Keno期记录，如果某期的所有Keno期都完成返奖，则更新改期的返奖总金额和返奖标志 -->
			<Exec func="PUB:OpenCursor" error="IGNORE">
				<Arg name="sql" value="QryUnPrzDrw"/>
				<Arg name="CursorName" value="CURSOR_PRZ"/>
			</Exec>
			<If condition="AND(IS_NOEQUAL_STRING(~RetCod,0),IS_NOEQUAL_STRING(~RetCod,-2))">
				<Set>CalStat=-1</Set>
				<Set>CalMsg=更新返奖汇总信息失败</Set>
				<Return/>
			</If>
			<While>
				<Delete>ROOT.GameId</Delete>
				<Delete>ROOT.DrawId</Delete>
				<Exec func="PUB:FetchCursor" error="IGNORE">
					<Arg name="CursorName" value="CURSOR_PRZ"/>
				</Exec>
				<If condition="~RetCod=100">
					<Break/>
				</If>
				
				<Exec func="PUB:ReadRecord" error="IGNORE">
	               <Arg name="SqlCmd" value="StatUnPrzDrw"/>
	            </Exec>
	            <If condition="IS_EQUAL_STRING($UnPrzCnt,0)">
	            	<!-- 该期的所有Keno期都已经返奖完成，更新AAAAA记录的汇总信息 -->
					<Exec func="PUB:ReadRecord" error="IGNORE">
		               <Arg name="SqlCmd" value="SumPrzDrw"/>
		            </Exec>
					<Exec func="PUB:ExecSql" error="IGNORE">
						<Arg name="SqlCmd"    value="UpdDrwPrzInf"/>
					</Exec>
					<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
						<Set>CalStat=-1</Set>
						<Set>CalMsg=STRCAT(更新汇总返奖信息失败[,$GameId,-,$DrawId,])</Set>
						<Return/>
					</If>
	            </If>
			</While>
			<Exec func="PUB:CloseCursor" error="IGNORE">
				<Arg name="CursorName" value="CURSOR_PRZ"/>
			</Exec>
		
			<!-- 查询是否有符合条件的未计算轧差的记录 -->
			<Exec func="PUB:OpenCursor" error="IGNORE">
				<Arg name="sql" value="CalcLotDifAmt"/>
				<Arg name="CursorName" value="CURSOR_CAL"/>
			</Exec>
			<If condition="AND(IS_NOEQUAL_STRING(~RetCod,0),IS_NOEQUAL_STRING(~RetCod,-2))">
				<Set>CalStat=-1</Set>
				<Set>CalMsg=统计轧差失败</Set>
				<Return/>
			</If>
			<While>
				<Delete>ROOT.GameId</Delete>
				<Delete>ROOT.DrawId</Delete>
				<Delete>ROOT.KenoId</Delete>
				<Delete>ROOT.TotAmt</Delete>
				<Delete>ROOT.PrzAmt</Delete>
				<Exec func="PUB:FetchCursor" error="IGNORE">
					<Arg name="CursorName" value="CURSOR_CAL"/>
				</Exec>
				<If condition="~RetCod=100">
					<Break/>
				</If>
				
				<If condition="INTCMP($TotAmt,5,$PrzAmt)">
					<!-- 1借方（购彩总金额大于返奖总金额） -->
					<Set>DifFlg=1</Set>
					<Set>DifAmt=SUB($TotAmt,$PrzAmt)</Set>
				</If>
				<Else>
					<!-- 0贷方（购彩总金额小于奖总金额） -->
					<Set>DifFlg=0</Set>
					<Set>DifAmt=SUB($PrzAmt,$TotAmt)</Set>
				</Else>
				
				<Exec func="PUB:ExecSql" error="IGNORE">
					<Arg name="SqlCmd"    value="UpdLotDifAmt"/>
				</Exec>
				<If condition="IS_NOEQUAL_STRING(~RetCod,0)">
					<Set>CalStat=-1</Set>
					<Set>CalMsg=STRCAT(更新轧差失败[,$GameId,-,$DrawId,])</Set>
					<Return/>
				</If>
				
			</While>
			<Exec func="PUB:CloseCursor" error="IGNORE">
				<Arg name="CursorName" value="CURSOR_CAL"/>
			</Exec>

		</Process>
	</Function>	

	<!--获取虚拟柜员
	INPUT:
		BrNo:分行号
	OUTPUT:
		GetVTlrIdStatus:获取状态（0：成功  -1：失败）
		Tlrid:电子柜员号
	-->
	<Function name="GetVirtualTeller" desc="获取电子柜员号">
		<Input>BrNo|</Input>
		<Output>GetVTlrIdStatus|Tlrid|</Output>
		<Process>
			<Set>TxnCnl=LOT</Set>
			<Set>CnLSub=$BrNo</Set>
			<Exec func="PUB:GetVirtualTeller" error="IGNORE">
				<If condition="~RetCod=-1">
					<Set>GetVTlrIdStatus=-1</Set>
				</If>
				<Else>
					<Set>GetVTlrIdStatus=0</Set>
				</Else>
			</Exec>
		</Process>
	</Function>
	
	<Function name="GetTxnLogNo" desc="获取购彩流水号">
		<Input>DealId|</Input>
		<Output>SelVal|</Output>
		<DynSentence name="CndSts" desc="条件">
			<Sentence>
				DealId='%s'
			</Sentence>
			<Fields>DealId|</Fields>
		</DynSentence>
		<Process>
			<Exec func="PUB:GetSeqNoCircle" desc="获得$SelVal">
				<Arg name="TblNam" value="LotSysCfg"/>
				<Arg name="SeqCol" value="LOGSEQ"/>
				<Arg name="Len" value="9"/>
				<Arg name="CndSts" value="CndSts"/>
				<Arg name="ColNam" value="SelVal"/>
			</Exec>
			<Set>SelVal=STRCAT($DealId,$SelVal)</Set>
		</Process>
	</Function>
	
	<Function name="GetSysCfg" desc="获取系统配置">
		<Input>DealId|</Input>
		<Output>DSCAgtNo|DFCAgtNo|HSActNo|WhPhone|GcActNo|FCActNo|DFActNo|</Output>
		<DynSentence name="GetSysCfg" desc="获取系统配置">
			<Sentence>
				select DSCAGTNO,DFCAGTNO,HSACTNO,WHPHONE
				from LotSysCfg
				where DealId='%s'
			</Sentence>
			<Fields>DealId|</Fields>
		</DynSentence>
		<DynSentence name="QryAgtInf" desc="查询代收代发协议信息">
			<Sentence>
				select TACTNO, STLACT
				from SAVCRPINF
				where CAGTNO='%s'
			</Sentence>
			<Fields>CagtNo|</Fields>
		</DynSentence>
		<Process>
			<Exec func="PUB:ReadRecord" error="IGNORE">
               <Arg name="SqlCmd" value="GetSysCfg"/>
            </Exec>
            <Set>CagtNo=$DSCAgtNo</Set>
			<Exec func="PUB:ReadRecord" desc="查询协议信息">
				<Arg name="SqlCmd" value="QryAgtInf"/>
			</Exec>
			<Set>FCActNo=$STLACT</Set>
			<Set>GcActNo=$TACTNO</Set>
			
            <Set>CagtNo=$DFCAGTNO</Set>
			<Exec func="PUB:ReadRecord" desc="查询协议信息">
				<Arg name="SqlCmd" value="QryAgtInf"/>
			</Exec>
			<Set>DFActNo=$STLACT</Set>
            
		</Process>
	</Function>
	
	<!--计算时差
	INPUT:
		NodNo:网点号
		BrNo:分行号
		Date1:时间1（福彩时间）
		Date2:时间2（本地时间）
	OUTPUT:
		DifTim:时差（秒）
	-->
	<Function name="DifTim" desc="计算时差">
		<Input>NodNo|BrNo|Date1|Date2|</Input>
		<Output>DifTim|</Output>
		<Process>
			<!-- 检查分行号是否存在 -->
			<If condition="IS_EQUAL_STRING($BrNo,)">
				<Exec func="PUB:GetBranchNoByNodeNo" error="IGNORE"></Exec>
				<If condition="IS_EQUAL_STRING(~RetCod,)">
					<Set>BrNo=441999</Set>
				</If>
			</If>
			
			<!-- 获取调用序号 
			<Exec func="PUB:nGetPubSeqNo" desc="获得$SelVal">
				<Arg name="SeqNam" value="LOT:CALLID"/>
				<Arg name="Len" value="9"/>
				<Arg name="CycCnd" value="D"/>
			</Exec>
			-->
			<Set>SelVal=000000001</Set>
			
			<!-- 调用外部命令获取结果 -->
			<Set>ResultFile=STRCAT(/app/ics/dat/lot/,TIMEd,$SelVal,.dat)</Set>
			<System command="java -cp /app/ics/app/lot/bin TimeCalTool " error="IGNORE">
				<Arg name="funcTyp" value="d"/>
				<Arg name="callId" value="$SelVal"/>
				<Arg name="resultPath" value="/app/ics/dat/lot"/>
				<Arg name="date1Fmt" value="yyyyMMddHHmmss"/>
				<Arg name="date1" value="$Date1"/>
				<Arg name="date2Fmt" value="yyyyMMddHHmmss"/>
				<Arg name="date2" value="$Date2"/>
			</System> 
			
			<!-- 读取结果 -->
			<Exec func="PUB:OpenFile">
				<Arg name="FileName" value="$ResultFile"/>
				<Arg name="Mode" value="r"/>
			</Exec>
			<Exec func="PUB:ReadFile">
				<Arg name="FieldName" value="CallResult"/>
				<Arg name="ReadLen" value="20"/>
			</Exec>
			<Exec func="PUB:CloseFile">
			</Exec>
			
			<!-- 返回结果 -->
			<Set>DifTim=DELBOTHSPACE($CallResult)</Set>

		</Process>
	</Function>
	
	<!--计算时间
	INPUT:
		NodNo:网点号
		BrNo:分行号
		SrcDate:原时间
		DifTim:时差（秒）
	OUTPUT:
		DesDate:计算后的时间
	-->
	<Function name="CalTim" desc="计算时间">
		<Input>NodNo|BrNo|SrcDate|DifTim|</Input>
		<Output>DesDate|</Output>
		<Process>
			<!-- 检查分行号是否存在 -->
			<If condition="IS_EQUAL_STRING($BrNo,)">
				<Exec func="PUB:GetBranchNoByNodeNo" error="IGNORE"></Exec>
				<If condition="IS_EQUAL_STRING(~RetCod,)">
					<Set>BrNo=441999</Set>
				</If>
			</If>
			
			<!-- 获取调用序号 
			<Exec func="PUB:nGetPubSeqNo" desc="获得$SelVal">
				<Arg name="SeqNam" value="LOT:CALLID"/>
				<Arg name="Len" value="9"/>
				<Arg name="CycCnd" value="D"/>
			</Exec>
			-->
			<Set>SelVal=000000001</Set>
			
			<!-- 调用外部命令获取结果 -->
			<Set>ResultFile=STRCAT(/app/ics/dat/lot/,TIMEc,$SelVal,.dat)</Set>
			<System command="java -cp /app/ics/app/lot/bin TimeCalTool " error="IGNORE">
				<Arg name="funcTyp" value="c"/>
				<Arg name="callId" value="$SelVal"/>
				<Arg name="resultPath" value="/app/ics/dat/lot"/>
				<Arg name="date1Fmt" value="yyyyMMddHHmmss"/>
				<Arg name="date1" value="$SrcDate"/>
				<Arg name="date2Fmt" value="yyyyMMddHHmmss"/>
				<Arg name="DifTim" value="$DifTim"/>
			</System> 
			
			<!-- 读取结果 -->
			<Exec func="PUB:OpenFile">
				<Arg name="FileName" value="$ResultFile"/>
				<Arg name="Mode" value="r"/>
			</Exec>
			<Exec func="PUB:ReadFile">
				<Arg name="FieldName" value="CallResult"/>
				<Arg name="ReadLen" value="20"/>
			</Exec>
			<Exec func="PUB:CloseFile">
			</Exec>
			
			<!-- 返回结果 -->
			<Set>DesDate=DELBOTHSPACE($CallResult)</Set>

		</Process>
	</Function>

	
</Package>
